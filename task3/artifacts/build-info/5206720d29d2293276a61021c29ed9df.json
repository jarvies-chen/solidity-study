{"id":"5206720d29d2293276a61021c29ed9df","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/Auction.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./PriceOracle.sol\";\n\ncontract Auction is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    \n    struct AuctionItem {\n        // 拍卖基本信息字段\n        address nftContract;     // NFT 合约地址\n        uint256 tokenId;         // NFT 代币 ID\n        address seller;          // 卖家地址\n        uint256 startTime;       // 拍卖开始时间\n        uint256 endTime;         // 拍卖结束时间\n        bool ended;              // 拍卖是否结束\n    }\n\n    struct Bid {\n        // 出价信息字段\n        address bidder;          // 出价人地址\n        address token;           // 出价使用的代币地址 (ddress(0) for ETH)\n        uint256 amount;          // 出价金额(美元价值)\n        uint256 timestamp;       // 出价时间戳\n    }\n\n    Bid public highestBid;              // 当前最高出价\n    AuctionItem public auctionItem;     // 当前拍卖项目信息\n    PriceOracle public priceOracle;     // 价格预言机合约地址\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /**\n     * 初始化拍卖合约\n     */\n    function initialize(\n        address _nftContract,\n        uint256 _tokenId,\n        address _seller,\n        uint256 _startTime,\n        uint256 _endTime,\n        address _priceOracle) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n\n        // 初始化拍卖合约状态\n        require(_nftContract != address(0), \"Invalid NFT contract address\");\n        require(_seller != address(0), \"Invalid seller address\");\n        require(_startTime >= block.timestamp, \"Start time must be in the future\");\n        require(_endTime > _startTime, \"End time must be after start time\");\n        require(_priceOracle != address(0), \"Invalid price oracle address\");\n\n        auctionItem = AuctionItem({\n            nftContract: _nftContract,\n            tokenId: _tokenId,\n            seller: _seller,\n            startTime: _startTime,\n            endTime: _endTime,\n            ended: false\n        }); \n        priceOracle = PriceOracle(_priceOracle);\n    }\n\n    /**\n     * 出价函数，支持以太坊和 ERC20 代币出价\n     */\n    function placeBid(address _token, uint256 _amount) external payable {\n        require(block.timestamp >= auctionItem.startTime, \"Auction not started yet\");\n        require(block.timestamp <= auctionItem.endTime, \"Auction already ended\");\n        require(!auctionItem.ended, \"Auction has ended\");\n        require(_amount > 0, \"Bid amount must be greater than zero\");\n\n        // 竞拍逻辑\n        uint256 usdAmount;\n        if (_token == address(0)) {\n            // 以太坊出价逻辑\n            require(msg.value == _amount, \"ETH amount mismatch\");\n            usdAmount = priceOracle.convertToUSD(address(0), _amount);\n        } else {\n            // ERC20 代币出价逻辑\n            require(msg.value == 0, \"ETH not accepted for ERC20 bids\");\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n            usdAmount = priceOracle.convertToUSD(_token, _amount);\n        }\n        // 检查是否高于当前最高出价 (按美元价值比较)\n        uint256 currentHighestUSD = 0;\n        if (highestBid.amount > 0) {\n            currentHighestUSD = priceOracle.convertToUSD(highestBid.token, highestBid.amount);\n        }\n        require(usdAmount > currentHighestUSD, \"Bid must be higher than current highest bid\");\n\n        // 退还之前最高出价\n        if (highestBid.bidder != address(0)) {\n            if (highestBid.token == address(0)) {\n                // 退还 ETH\n                payable(highestBid.bidder).transfer(highestBid.amount);\n            } else {\n                //退还 ERC20 代币\n                IERC20(highestBid.token).transfer(highestBid.bidder, highestBid.amount);\n            }\n        }\n\n        // 更新最高出价\n        highestBid = Bid({\n            bidder: msg.sender,\n            token: _token,\n            amount: _amount,\n            timestamp: block.timestamp\n        });\n    }\n\n    /**\n     * 结束拍卖\n     */\n    function endAuction() external {\n        require(!auctionItem.ended, \"Auction already ended\");\n        require(block.timestamp >= auctionItem.endTime || (block.timestamp >= auctionItem.startTime && highestBid.amount > 0), \n                \"Auction not ended yet\");   \n        auctionItem.ended = true;\n        // 处理拍卖结果\n        if (highestBid.bidder != address(0)) {\n            // 转移 NFT 给最高出价者\n            IERC721(auctionItem.nftContract).transferFrom(address(this), highestBid.bidder, auctionItem.tokenId);\n            // 将出价金额转给卖家\n            if (highestBid.token == address(0)) {\n                payable(auctionItem.seller).transfer(highestBid.amount);\n            } else {\n                IERC20(highestBid.token).transfer(auctionItem.seller, highestBid.amount);\n            }\n        } else {\n            // 无人出价，NFT 归还给卖家\n            IERC721(auctionItem.nftContract).transferFrom(address(this), auctionItem.seller, auctionItem.tokenId);\n        }\n    }\n\n    /**\n     * 获取最高出价\n     */\n    function getHighestBid() external view returns (Bid memory) {\n        return highestBid;\n    }\n\n    /**\n     * 获取拍卖项目信息\n     */\n    function getAuctionItem() external view returns (AuctionItem memory) {\n        return auctionItem;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal virtual override onlyOwner {}\n\n    // 接受以太坊转账\n    receive() external payable {}\n}   "},"contracts/AuctionFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./Auction.sol\";\n\ncontract AuctionFactory is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    address[] public auctions;  // 存储所有拍卖合约地址\n    address public priceOracle;         // 价格预言机合约地址\n    address public auctionImplementation; // 拍卖合约实现地址\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address _auctionImplementation, address _priceOracle) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n        require(_auctionImplementation != address(0), \"Invalid auction implementation\");\n        require(_priceOracle != address(0), \"Invalid price oracle\");\n\n        auctionImplementation = _auctionImplementation;\n        priceOracle = _priceOracle;\n    }\n\n    /**\n     * 创建新的拍卖合约\n     */\n    function createAuction(\n        address _nftContract,\n        uint256 _tokenId,\n        address _seller,\n        uint256 _startTime,\n        uint256 _endTime\n    ) external onlyOwner returns (address) {\n        require(_nftContract != address(0), \"Invalid NFT contract\");\n        require(_startTime >= block.timestamp, \"Start time must be in the future\");\n        require(_endTime > _startTime, \"End time must be after start time\");\n        \n        require(IERC721(_nftContract).ownerOf(_tokenId) == msg.sender, \"Not owner of NFT\");\n        \n        IERC721(_nftContract).approve(address(this), _tokenId);\n        \n        address auction = Clones.clone(auctionImplementation);\n        \n        Auction(payable(auction)).initialize(\n            _nftContract,\n            _tokenId,\n            _seller,\n            _startTime,\n            _endTime,\n            priceOracle\n        );\n        \n        IERC721(_nftContract).transferFrom(msg.sender, auction, _tokenId);\n        \n        auctions.push(auction);\n        return auction;\n    }\n\n    /**\n     * 获取所有拍卖合约地址\n     */\n    function getAuctions() external view returns (address[] memory) {\n        return auctions;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}"},"contracts/PriceOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\n\ncontract PriceOracle {\n    mapping(address => AggregatorV3Interface) public priceFeeds;\n    \n    // 模拟价格存储（用于测试）\n    mapping(uint256 => uint256) public testEthPrices;\n    mapping(address => uint256) public testTokenPrices;\n\n    constructor(address ethUsdFeed) {\n        // 使用 address(0) 代表 ETH/USD 价格预言机\n        priceFeeds[address(0)] = AggregatorV3Interface(ethUsdFeed); // 使用 address(0) 代表 ETH/USD 价格预言机\n    }\n\n    /**\n     * 设置某个代币的价格预言机地址\n     */\n    function setPriceFeed(address token, address feed) external {\n        priceFeeds[token] = AggregatorV3Interface(feed);\n    }\n\n    /**\n     * 获取某个代币的最新价格\n     */\n    function getLatestPrice(address token) external view returns (int256) {\n        AggregatorV3Interface priceFeed = priceFeeds[token];\n        require(address(priceFeed) != address(0), \"Price feed not set for this token\");\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        return price;\n    }\n\n    /**\n     * 获取 ETH/USD 的最新价格\n    */\n    function getEthUsdPrice() external view returns (int256) {\n        AggregatorV3Interface priceFeed = priceFeeds[address(0)];\n        require(address(priceFeed) != address(0), \"Price feed not set for ETH\");\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        return price;\n    }\n\n    /**\n     * 将某个代币的数量转换为 USD 价值\n     */\n    function convertToUSD(address token, uint256 amount) external view returns (uint256) {\n        if (token == address(0)) {\n            // ETH 直接返回 USD 价值\n            int256 ethPrice = this.getEthUsdPrice();\n            require(ethPrice > 0, \"Invalid ETH price\");\n            return (amount * uint256(ethPrice)) / 1e8; // 假设价格有8位小数\n        } else {\n            // 其他代币需要先获取其价格\n            int256 price = this.getLatestPrice(token);\n            require(price > 0, \"Invalid price\");\n            return (amount * uint256(price)) / 1e8; // 假设价格有8位小数\n        }\n    }\n\n    /**\n     * @dev 设置测试价格（仅用于测试环境）\n     */\n    function setTestPrice(address token, uint256 price) external {\n        if (token == address(0)) {\n            testEthPrices[block.chainid] = price;\n        } else {\n            testTokenPrices[token] = price;\n        }\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nameLocation":"120:21:0","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"155:8:0","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"163:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6,"src":"189:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"189:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"188:7:0"},"scope":45,"src":"146:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"209:11:0","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"220:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11,"src":"246:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"245:15:0"},"scope":45,"src":"200:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"274:7:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"281:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"307:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"306:9:0"},"scope":45,"src":"265:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"329:12:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nameLocation":"354:8:0","nodeType":"VariableDeclaration","scope":31,"src":"347:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"341:25:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nameLocation":"397:7:0","nodeType":"VariableDeclaration","scope":31,"src":"390:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"390:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nameLocation":"413:6:0","nodeType":"VariableDeclaration","scope":31,"src":"406:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"406:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nameLocation":"429:9:0","nodeType":"VariableDeclaration","scope":31,"src":"421:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nameLocation":"448:9:0","nodeType":"VariableDeclaration","scope":31,"src":"440:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nameLocation":"466:15:0","nodeType":"VariableDeclaration","scope":31,"src":"459:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"459:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"389:93:0"},"scope":45,"src":"320:163:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"496:15:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"511:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nameLocation":"556:7:0","nodeType":"VariableDeclaration","scope":44,"src":"549:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"549:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nameLocation":"572:6:0","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nameLocation":"588:9:0","nodeType":"VariableDeclaration","scope":44,"src":"580:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nameLocation":"607:9:0","nodeType":"VariableDeclaration","scope":44,"src":"599:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nameLocation":"625:15:0","nodeType":"VariableDeclaration","scope":44,"src":"618:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"618:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"548:93:0"},"scope":45,"src":"487:155:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"110:534:0","usedErrors":[],"usedEvents":[]}],"src":"32:613:0"},"id":0},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1231],"Initializable":[713],"OwnableUpgradeable":[178]},"id":179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":48,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":179,"sourceUnit":1232,"src":"127:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":179,"sourceUnit":714,"src":"169:63:1","symbolAliases":[{"foreign":{"id":49,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"177:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":52,"name":"Initializable","nameLocations":["769:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"769:13:1"},"id":53,"nodeType":"InheritanceSpecifier","src":"769:13:1"},{"baseName":{"id":54,"name":"ContextUpgradeable","nameLocations":["784:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":1231,"src":"784:18:1"},"id":55,"nodeType":"InheritanceSpecifier","src":"784:18:1"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"234:494:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":178,"linearizedBaseContracts":[178,1231,713],"name":"OwnableUpgradeable","nameLocation":"747:18:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":57,"mutability":"mutable","name":"_owner","nameLocation":"825:6:1","nodeType":"VariableDeclaration","scope":178,"src":"809:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":63,"name":"OwnershipTransferred","nameLocation":"844:20:1","nodeType":"EventDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:1","nodeType":"VariableDeclaration","scope":63,"src":"865:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:1","nodeType":"VariableDeclaration","scope":63,"src":"896:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:1"},"src":"838:84:1"},{"body":{"id":72,"nodeType":"Block","src":"1076:43:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":69,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1086:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"ExpressionStatement","src":"1086:26:1"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"928:91:1","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":73,"implemented":true,"kind":"function","modifiers":[{"id":67,"kind":"modifierInvocation","modifierName":{"id":66,"name":"onlyInitializing","nameLocations":["1059:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"1059:16:1"},"nodeType":"ModifierInvocation","src":"1059:16:1"}],"name":"__Ownable_init","nameLocation":"1033:14:1","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"1047:2:1"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"1076:0:1"},"scope":178,"src":"1024:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"1187:49:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":79,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1216:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":78,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1197:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":82,"nodeType":"ExpressionStatement","src":"1197:32:1"}]},"id":84,"implemented":true,"kind":"function","modifiers":[{"id":76,"kind":"modifierInvocation","modifierName":{"id":75,"name":"onlyInitializing","nameLocations":["1170:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"1170:16:1"},"nodeType":"ModifierInvocation","src":"1170:16:1"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:1","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"1158:2:1"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[],"src":"1187:0:1"},"scope":178,"src":"1125:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":91,"nodeType":"Block","src":"1345:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1355:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"1355:13:1"},{"id":90,"nodeType":"PlaceholderStatement","src":"1378:1:1"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1242:77:1","text":" @dev Throws if called by any account other than the owner."},"id":92,"name":"onlyOwner","nameLocation":"1333:9:1","nodeType":"ModifierDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"1342:2:1"},"src":"1324:62:1","virtual":false,"visibility":"internal"},{"body":{"id":100,"nodeType":"Block","src":"1517:30:1","statements":[{"expression":{"id":98,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1534:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":97,"id":99,"nodeType":"Return","src":"1527:13:1"}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"1392:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":101,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:1","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"1476:2:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":101,"src":"1508:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:1"},"scope":178,"src":"1462:85:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":114,"nodeType":"Block","src":"1665:85:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1683:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":108,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1694:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1675:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":113,"nodeType":"ExpressionStatement","src":"1675:68:1"}]},"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"1553:62:1","text":" @dev Throws if the sender is not the owner."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:1","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[],"src":"1640:2:1"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"1665:0:1"},"scope":178,"src":"1620:130:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":128,"nodeType":"Block","src":"2139:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:1","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2149:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"2149:30:1"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"1756:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":129,"implemented":true,"kind":"function","modifiers":[{"id":119,"kind":"modifierInvocation","modifierName":{"id":118,"name":"onlyOwner","nameLocations":["2129:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"2129:9:1"},"nodeType":"ModifierInvocation","src":"2129:9:1"}],"name":"renounceOwnership","nameLocation":"2094:17:1","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"2111:2:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"2139:0:1"},"scope":178,"src":"2085:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":151,"nodeType":"Block","src":"2405:128:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2423:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:1","typeDescriptions":{}}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2415:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"2415:73:1"},{"expression":{"arguments":[{"id":148,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2517:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":147,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2498:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"ExpressionStatement","src":"2498:28:1"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"2192:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":152,"implemented":true,"kind":"function","modifiers":[{"id":135,"kind":"modifierInvocation","modifierName":{"id":134,"name":"onlyOwner","nameLocations":["2395:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"2395:9:1"},"nodeType":"ModifierInvocation","src":"2395:9:1"}],"name":"transferOwnership","nameLocation":"2344:17:1","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:1","nodeType":"VariableDeclaration","scope":152,"src":"2362:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"2405:0:1"},"scope":178,"src":"2335:198:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":171,"nodeType":"Block","src":"2750:124:1","statements":[{"assignments":[159],"declarations":[{"constant":false,"id":159,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:1","nodeType":"VariableDeclaration","scope":171,"src":"2760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":161,"initialValue":{"id":160,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"2779:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:1"},{"expression":{"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"2795:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":163,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2804:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":165,"nodeType":"ExpressionStatement","src":"2795:17:1"},{"eventCall":{"arguments":[{"id":167,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2848:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":168,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2858:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":166,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2827:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"EmitStatement","src":"2822:45:1"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"2539:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:1","nodeType":"VariableDeclaration","scope":172,"src":"2715:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"2750:0:1"},"scope":178,"src":"2687:187:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"2880:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":177,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:1","nodeType":"VariableDeclaration","scope":178,"src":"3139:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":176,"length":{"hexValue":"3439","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:1","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":179,"src":"729:2438:1","usedErrors":[],"usedEvents":[63,559]}],"src":"102:3066:1"},"id":1},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":180,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"132:133:2","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":199,"linearizedBaseContracts":[199],"name":"IERC1967Upgradeable","nameLocation":"276:19:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"302:68:2","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":186,"name":"Upgraded","nameLocation":"381:8:2","nodeType":"EventDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:2","nodeType":"VariableDeclaration","scope":186,"src":"390:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:2"},"src":"375:47:2"},{"anonymous":false,"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"428:67:2","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":193,"name":"AdminChanged","nameLocation":"506:12:2","nodeType":"EventDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:2","nodeType":"VariableDeclaration","scope":193,"src":"519:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:2","nodeType":"VariableDeclaration","scope":193,"src":"542:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:2"},"src":"500:60:2"},{"anonymous":false,"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"566:59:2","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":198,"name":"BeaconUpgraded","nameLocation":"636:14:2","nodeType":"EventDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:2","nodeType":"VariableDeclaration","scope":198,"src":"651:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:2"},"src":"630:45:2"}],"scope":200,"src":"266:411:2","usedErrors":[],"usedEvents":[186,193,198]}],"src":"107:571:2"},"id":2},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[209]},"id":210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"138:203:3","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":209,"linearizedBaseContracts":[209],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"387:438:3","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:3","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"852:2:3"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"878:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:3"},"scope":209,"src":"830:57:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":210,"src":"342:547:3","usedErrors":[],"usedEvents":[]}],"src":"113:777:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1180],"ERC1967UpgradeUpgradeable":[534],"IBeaconUpgradeable":[544],"IERC1822ProxiableUpgradeable":[209],"IERC1967Upgradeable":[199],"Initializable":[713],"StorageSlotUpgradeable":[1341]},"id":535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":211,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":545,"src":"141:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":200,"src":"184:50:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":210,"src":"235:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":1181,"src":"292:44:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":1342,"src":"337:48:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":535,"sourceUnit":714,"src":"386:57:4","symbolAliases":[{"foreign":{"id":217,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"394:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":220,"name":"Initializable","nameLocations":["677:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"677:13:4"},"id":221,"nodeType":"InheritanceSpecifier","src":"677:13:4"},{"baseName":{"id":222,"name":"IERC1967Upgradeable","nameLocations":["692:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"692:19:4"},"id":223,"nodeType":"InheritanceSpecifier","src":"692:19:4"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"445:184:4","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":534,"linearizedBaseContracts":[534,199,713],"name":"ERC1967UpgradeUpgradeable","nameLocation":"648:25:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"822:14:4","nodeType":"VariableDeclaration","scope":534,"src":"797:108:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"839:66:4","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"912:214:4","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":230,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1157:20:4","nodeType":"VariableDeclaration","scope":534,"src":"1131:115:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1131:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:66:4","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"1312:7:4","statements":[]},"id":236,"implemented":true,"kind":"function","modifiers":[{"id":233,"kind":"modifierInvocation","modifierName":{"id":232,"name":"onlyInitializing","nameLocations":["1295:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"1295:16:4"},"nodeType":"ModifierInvocation","src":"1295:16:4"}],"name":"__ERC1967Upgrade_init","nameLocation":"1262:21:4","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"1283:2:4"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"1312:0:4"},"scope":534,"src":"1253:66:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":241,"nodeType":"Block","src":"1394:7:4","statements":[]},"id":242,"implemented":true,"kind":"function","modifiers":[{"id":239,"kind":"modifierInvocation","modifierName":{"id":238,"name":"onlyInitializing","nameLocations":["1377:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"1377:16:4"},"nodeType":"ModifierInvocation","src":"1377:16:4"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"1334:31:4","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"1365:2:4"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"1394:0:4"},"scope":534,"src":"1325:76:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"1540:89:4","statements":[{"expression":{"expression":{"arguments":[{"id":250,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1595:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":248,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"1557:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1580:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"1557:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1557:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1617:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"1557:65:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":247,"id":253,"nodeType":"Return","src":"1550:72:4"}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"1406:67:4","text":" @dev Returns the current implementation address."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1487:18:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"1505:2:4"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"1531:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1530:9:4"},"scope":534,"src":"1478:151:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":278,"nodeType":"Block","src":"1783:218:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":264,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"1831:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":262,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"1801:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1820:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":868,"src":"1801:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1801:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1851:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1793:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1793:106:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"1793:106:4"},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":272,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1947:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":269,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"1909:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"1909:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1969:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"1909:65:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":275,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"1977:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1909:85:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":277,"nodeType":"ExpressionStatement","src":"1909:85:4"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1635:80:4","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":279,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1729:18:4","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"newImplementation","nameLocation":"1756:17:4","nodeType":"VariableDeclaration","scope":279,"src":"1748:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:27:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"1783:0:4"},"scope":534,"src":"1720:281:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":293,"nodeType":"Block","src":"2163:96:4","statements":[{"expression":{"arguments":[{"id":286,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2192:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":285,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2173:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"2173:37:4"},{"eventCall":{"arguments":[{"id":290,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2234:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":289,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2225:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"EmitStatement","src":"2220:32:4"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2007:95:4","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2116:10:4","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"newImplementation","nameLocation":"2135:17:4","nodeType":"VariableDeclaration","scope":294,"src":"2127:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2126:27:4"},"returnParameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"2163:0:4"},"scope":534,"src":"2107:152:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":323,"nodeType":"Block","src":"2491:178:4","statements":[{"expression":{"arguments":[{"id":305,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2512:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2501:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":307,"nodeType":"ExpressionStatement","src":"2501:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2544:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2549:6:4","memberName":"length","nodeType":"MemberAccess","src":"2544:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2544:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":312,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2563:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2544:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":322,"nodeType":"IfStatement","src":"2540:123:4","trueBody":{"id":321,"nodeType":"Block","src":"2574:89:4","statements":[{"expression":{"arguments":[{"id":317,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2628:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2647:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":314,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"2588:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2607:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"2588:39:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2588:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":320,"nodeType":"ExpressionStatement","src":"2588:64:4"}]}}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"2265:123:4","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2402:17:4","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"newImplementation","nameLocation":"2428:17:4","nodeType":"VariableDeclaration","scope":324,"src":"2420:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"data","nameLocation":"2460:4:4","nodeType":"VariableDeclaration","scope":324,"src":"2447:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"forceCall","nameLocation":"2471:9:4","nodeType":"VariableDeclaration","scope":324,"src":"2466:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":300,"name":"bool","nodeType":"ElementaryTypeName","src":"2466:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2419:62:4"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[],"src":"2491:0:4"},"scope":534,"src":"2393:276:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":376,"nodeType":"Block","src":"2943:842:4","statements":[{"condition":{"expression":{"arguments":[{"id":336,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"3295:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":334,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"3257:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3280:14:4","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1274,"src":"3257:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1240_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1240_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3311:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1239,"src":"3257:59:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":374,"nodeType":"Block","src":"3386:393:4","statements":[{"clauses":[{"block":{"id":359,"nodeType":"Block","src":"3491:115:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3517:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":354,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3525:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3547:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3509:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3509:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"3509:82:4"}]},"errorName":"","id":360,"nodeType":"TryCatchClause","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"slot","nameLocation":"3485:4:4","nodeType":"VariableDeclaration","scope":360,"src":"3477:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3477:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3476:14:4"},"src":"3468:138:4"},{"block":{"id":365,"nodeType":"Block","src":"3613:89:4","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3638:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":361,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3631:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"3631:56:4"}]},"errorName":"","id":366,"nodeType":"TryCatchClause","src":"3607:95:4"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":345,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3433:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":344,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"3404:28:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$209_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$209","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:13:4","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":208,"src":"3404:61:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:63:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":367,"nodeType":"TryStatement","src":"3400:302:4"},{"expression":{"arguments":[{"id":369,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3733:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":370,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3752:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":371,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3758:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":368,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3715:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3715:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"3715:53:4"}]},"id":375,"nodeType":"IfStatement","src":"3253:526:4","trueBody":{"id":343,"nodeType":"Block","src":"3318:62:4","statements":[{"expression":{"arguments":[{"id":340,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3351:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":339,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3332:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"3332:37:4"}]}}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2675:161:4","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":377,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2850:21:4","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"newImplementation","nameLocation":"2880:17:4","nodeType":"VariableDeclaration","scope":377,"src":"2872:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"2872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"data","nameLocation":"2912:4:4","nodeType":"VariableDeclaration","scope":377,"src":"2899:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":328,"name":"bytes","nodeType":"ElementaryTypeName","src":"2899:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"forceCall","nameLocation":"2923:9:4","nodeType":"VariableDeclaration","scope":377,"src":"2918:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":330,"name":"bool","nodeType":"ElementaryTypeName","src":"2918:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2871:62:4"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"2943:0:4"},"scope":534,"src":"2841:944:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"3791:189:4","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":381,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4011:11:4","nodeType":"VariableDeclaration","scope":534,"src":"3985:106:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3985:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:66:4","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":393,"nodeType":"Block","src":"4206:80:4","statements":[{"expression":{"expression":{"arguments":[{"id":389,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4261:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":387,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4223:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"4223:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4274:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"4223:56:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":386,"id":392,"nodeType":"Return","src":"4216:63:4"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"4098:50:4","text":" @dev Returns the current admin."},"id":394,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4162:9:4","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"4171:2:4"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":394,"src":"4197:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"4197:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4196:9:4"},"scope":534,"src":"4153:133:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"4413:167:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4431:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4451:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:4","typeDescriptions":{}}},"id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4431:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4455:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4423:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"4423:73:4"},{"expression":{"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":413,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4544:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":410,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4506:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4529:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"4506:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4506:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4557:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"4506:56:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":416,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4565:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4506:67:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":418,"nodeType":"ExpressionStatement","src":"4506:67:4"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"4292:71:4","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4377:9:4","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"newAdmin","nameLocation":"4395:8:4","nodeType":"VariableDeclaration","scope":420,"src":"4387:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4386:18:4"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"4413:0:4"},"scope":534,"src":"4368:212:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":436,"nodeType":"Block","src":"4740:86:4","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":427,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4768:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":429,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"4781:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":426,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"4755:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4755:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"EmitStatement","src":"4750:40:4"},{"expression":{"arguments":[{"id":433,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"4810:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":432,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"4800:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4800:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"4800:19:4"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"4586:100:4","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":437,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4700:12:4","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"newAdmin","nameLocation":"4721:8:4","nodeType":"VariableDeclaration","scope":437,"src":"4713:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4712:18:4"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"4740:0:4"},"scope":534,"src":"4691:135:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"4832:232:4","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":441,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5095:12:4","nodeType":"VariableDeclaration","scope":534,"src":"5069:107:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5069:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5110:66:4","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":453,"nodeType":"Block","src":"5293:81:4","statements":[{"expression":{"expression":{"arguments":[{"id":449,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"5348:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":447,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5310:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5333:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"5310:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5362:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"5310:57:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":446,"id":452,"nodeType":"Return","src":"5303:64:4"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"5183:51:4","text":" @dev Returns the current beacon."},"id":454,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5248:10:4","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"5258:2:4"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"5284:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5283:9:4"},"scope":534,"src":"5239:135:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"5503:368:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":463,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5551:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":461,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5521:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5540:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":868,"src":"5521:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5563:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5513:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5513:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"5513:90:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":472,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5683:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":471,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5664:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$544_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$544","typeString":"contract IBeaconUpgradeable"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5694:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":543,"src":"5664:44:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":469,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5634:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5653:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":868,"src":"5634:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5634:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5725:50:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5613:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:172:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"5613:172:4"},{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":483,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"5833:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":480,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5795:22:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1341_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5818:14:4","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"5795:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1237_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5795:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5847:5:4","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1236,"src":"5795:57:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":486,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5855:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5795:69:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":488,"nodeType":"ExpressionStatement","src":"5795:69:4"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"5380:71:4","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5465:10:4","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"newBeacon","nameLocation":"5484:9:4","nodeType":"VariableDeclaration","scope":490,"src":"5476:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"5476:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5475:19:4"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"5503:0:4"},"scope":534,"src":"5456:415:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":527,"nodeType":"Block","src":"6270:239:4","statements":[{"expression":{"arguments":[{"id":501,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6291:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6280:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"6280:21:4"},{"eventCall":{"arguments":[{"id":505,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6331:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":504,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"6316:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6316:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"EmitStatement","src":"6311:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6355:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:4","memberName":"length","nodeType":"MemberAccess","src":"6355:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6355:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":512,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"6374:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6355:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"6351:152:4","trueBody":{"id":525,"nodeType":"Block","src":"6385:118:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":518,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"6458:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":517,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"6439:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$544_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6439:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$544","typeString":"contract IBeaconUpgradeable"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6469:14:4","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":543,"src":"6439:44:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6439:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"6487:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":514,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"6399:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6418:20:4","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1067,"src":"6399:39:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6399:93:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":524,"nodeType":"ExpressionStatement","src":"6399:93:4"}]}}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"5877:292:4","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6183:23:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"newBeacon","nameLocation":"6215:9:4","nodeType":"VariableDeclaration","scope":528,"src":"6207:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"data","nameLocation":"6239:4:4","nodeType":"VariableDeclaration","scope":528,"src":"6226:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6226:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"forceCall","nameLocation":"6250:9:4","nodeType":"VariableDeclaration","scope":528,"src":"6245:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":496,"name":"bool","nodeType":"ElementaryTypeName","src":"6245:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6206:54:4"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"6270:0:4"},"scope":534,"src":"6174:335:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"6515:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":533,"mutability":"mutable","name":"__gap","nameLocation":"6794:5:4","nodeType":"VariableDeclaration","scope":534,"src":"6774:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"6774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":532,"length":{"hexValue":"3530","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6782:2:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6774:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":535,"src":"630:6172:4","usedErrors":[],"usedEvents":[186,193,198,559]}],"src":"116:6687:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[544]},"id":545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":536,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"118:79:5","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":544,"linearizedBaseContracts":[544],"name":"IBeaconUpgradeable","nameLocation":"208:18:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":538,"nodeType":"StructuredDocumentation","src":"233:162:5","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":543,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:5","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"423:2:5"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"449:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:5"},"scope":544,"src":"400:58:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":545,"src":"198:262:5","usedErrors":[],"usedEvents":[]}],"src":"93:368:5"},"id":5},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1180],"Initializable":[713]},"id":714,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":546,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":547,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":714,"sourceUnit":1181,"src":"138:44:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"184:2209:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":713,"linearizedBaseContracts":[713],"name":"Initializable","nameLocation":"2412:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"2432:109:6","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":551,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:6","nodeType":"VariableDeclaration","scope":713,"src":"2546:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":550,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"2579:91:6","text":" @dev Indicates that the contract is in the process of being initialized."},"id":554,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:6","nodeType":"VariableDeclaration","scope":713,"src":"2675:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":553,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"2708:90:6","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":559,"name":"Initialized","nameLocation":"2809:11:6","nodeType":"EventDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:6","nodeType":"VariableDeclaration","scope":559,"src":"2821:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":556,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:6"},"src":"2803:33:6"},{"body":{"id":614,"nodeType":"Block","src":"3269:483:6","statements":[{"assignments":[563],"declarations":[{"constant":false,"id":563,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:6","nodeType":"VariableDeclaration","scope":614,"src":"3279:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":566,"initialValue":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:6","subExpression":{"id":564,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3302:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3347:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3365:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:6","subExpression":{"arguments":[{"arguments":[{"id":578,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$713","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$713","typeString":"contract Initializable"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:6","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":574,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3388:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1180_$","typeString":"type(library AddressUpgradeable)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:6","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":868,"src":"3388:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3436:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3325:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"3325:201:6"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"3536:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":594,"nodeType":"ExpressionStatement","src":"3536:16:6"},{"condition":{"id":595,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3566:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"3562:65:6","trueBody":{"id":600,"nodeType":"Block","src":"3582:45:6","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3596:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"ExpressionStatement","src":"3596:20:6"}]}},{"id":602,"nodeType":"PlaceholderStatement","src":"3636:1:6"},{"condition":{"id":603,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3651:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":613,"nodeType":"IfStatement","src":"3647:99:6","trueBody":{"id":612,"nodeType":"Block","src":"3667:79:6","statements":[{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":604,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"3681:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":607,"nodeType":"ExpressionStatement","src":"3681:21:6"},{"eventCall":{"arguments":[{"hexValue":"31","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":608,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3721:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"EmitStatement","src":"3716:19:6"}]}}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"2842:399:6","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":615,"name":"initializer","nameLocation":"3255:11:6","nodeType":"ModifierDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"3266:2:6"},"src":"3246:506:6","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"4863:255:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:6","subExpression":{"id":621,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4882:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":623,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4899:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":624,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4914:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4873:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"4873:99:6"},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"4982:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":631,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"4997:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":633,"nodeType":"ExpressionStatement","src":"4982:22:6"},{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":634,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5014:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":637,"nodeType":"ExpressionStatement","src":"5014:20:6"},{"id":638,"nodeType":"PlaceholderStatement","src":"5044:1:6"},{"expression":{"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":639,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5055:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":642,"nodeType":"ExpressionStatement","src":"5055:21:6"},{"eventCall":{"arguments":[{"id":644,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5103:7:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":643,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"5091:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"EmitStatement","src":"5086:25:6"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"3758:1062:6","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":648,"name":"reinitializer","nameLocation":"4834:13:6","nodeType":"ModifierDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"version","nameLocation":"4854:7:6","nodeType":"VariableDeclaration","scope":648,"src":"4848:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":617,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:6"},"src":"4825:293:6","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"5356:97:6","statements":[{"expression":{"arguments":[{"id":652,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5374:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"5366:69:6"},{"id":656,"nodeType":"PlaceholderStatement","src":"5445:1:6"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"5124:199:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":658,"name":"onlyInitializing","nameLocation":"5337:16:6","nodeType":"ModifierDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"5353:2:6"},"src":"5328:125:6","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"5988:231:6","statements":[{"expression":{"arguments":[{"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:6","subExpression":{"id":663,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6007:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5998:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"5998:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6078:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":670,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:6","memberName":"max","nodeType":"MemberAccess","src":"6094:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":692,"nodeType":"IfStatement","src":"6074:139:6","trueBody":{"id":691,"nodeType":"Block","src":"6111:102:6","statements":[{"expression":{"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6125:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":677,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:6","memberName":"max","nodeType":"MemberAccess","src":"6140:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":682,"nodeType":"ExpressionStatement","src":"6125:30:6"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":685,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:6","memberName":"max","nodeType":"MemberAccess","src":"6186:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":683,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6174:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"EmitStatement","src":"6169:33:6"}]}}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5459:475:6","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":694,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:6","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"5968:2:6"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[],"src":"5988:0:6"},"scope":713,"src":"5939:280:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":702,"nodeType":"Block","src":"6393:36:6","statements":[{"expression":{"id":700,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6410:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":699,"id":701,"nodeType":"Return","src":"6403:19:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"6225:99:6","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":703,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:6","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"6360:2:6"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"6386:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":697,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:6"},"scope":713,"src":"6329:100:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"6601:37:6","statements":[{"expression":{"id":709,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6618:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":708,"id":710,"nodeType":"Return","src":"6611:20:6"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"6435:105:6","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:6","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"6569:2:6"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"6595:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:6"},"scope":713,"src":"6545:93:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":714,"src":"2394:4246:6","usedErrors":[],"usedEvents":[559]}],"src":"113:6528:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1180],"ERC1967UpgradeUpgradeable":[534],"IBeaconUpgradeable":[544],"IERC1822ProxiableUpgradeable":[209],"IERC1967Upgradeable":[199],"Initializable":[713],"StorageSlotUpgradeable":[1341],"UUPSUpgradeable":[850]},"id":851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":715,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":716,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":851,"sourceUnit":210,"src":"140:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":851,"sourceUnit":535,"src":"197:50:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":851,"sourceUnit":714,"src":"248:50:7","symbolAliases":[{"foreign":{"id":718,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"256:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":721,"name":"Initializable","nameLocations":["986:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"986:13:7"},"id":722,"nodeType":"InheritanceSpecifier","src":"986:13:7"},{"baseName":{"id":723,"name":"IERC1822ProxiableUpgradeable","nameLocations":["1001:28:7"],"nodeType":"IdentifierPath","referencedDeclaration":209,"src":"1001:28:7"},"id":724,"nodeType":"InheritanceSpecifier","src":"1001:28:7"},{"baseName":{"id":725,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1031:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":534,"src":"1031:25:7"},"id":726,"nodeType":"InheritanceSpecifier","src":"1031:25:7"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"300:648:7","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":850,"linearizedBaseContracts":[850,534,199,209,713],"name":"UUPSUpgradeable","nameLocation":"967:15:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"1063:87:7","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":733,"mutability":"immutable","name":"__self","nameLocation":"1181:6:7","nodeType":"VariableDeclaration","scope":850,"src":"1155:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1198:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}],"id":730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1190:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:7","typeDescriptions":{}}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":755,"nodeType":"Block","src":"1729:205:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":739,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1755:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1747:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:7","typeDescriptions":{}}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":741,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1764:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1747:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1772:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1739:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1739:80:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"1739:80:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":747,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1837:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":749,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1861:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1837:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1869:46:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1829:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"1829:87:7"},{"id":754,"nodeType":"PlaceholderStatement","src":"1926:1:7"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"1210:493:7","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":756,"name":"onlyProxy","nameLocation":"1717:9:7","nodeType":"ModifierDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"1726:2:7"},"src":"1708:226:7","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"2164:120:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":762,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2190:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$850","typeString":"contract UUPSUpgradeable"}],"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2182:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:7","typeDescriptions":{}}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":764,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"2199:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2182:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:58:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2174:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:92:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"2174:92:7"},{"id":769,"nodeType":"PlaceholderStatement","src":"2276:1:7"}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"1940:195:7","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":771,"name":"notDelegated","nameLocation":"2149:12:7","nodeType":"ModifierDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"2161:2:7"},"src":"2140:144:7","virtual":false,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"2350:7:7","statements":[]},"id":777,"implemented":true,"kind":"function","modifiers":[{"id":774,"kind":"modifierInvocation","modifierName":{"id":773,"name":"onlyInitializing","nameLocations":["2333:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"2333:16:7"},"nodeType":"ModifierInvocation","src":"2333:16:7"}],"name":"__UUPSUpgradeable_init","nameLocation":"2299:22:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"2321:2:7"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"2350:0:7"},"scope":850,"src":"2290:67:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"2433:7:7","statements":[]},"id":783,"implemented":true,"kind":"function","modifiers":[{"id":780,"kind":"modifierInvocation","modifierName":{"id":779,"name":"onlyInitializing","nameLocations":["2416:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"2416:16:7"},"nodeType":"ModifierInvocation","src":"2416:16:7"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"2372:32:7","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"2404:2:7"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"2433:0:7"},"scope":850,"src":"2363:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[208],"body":{"id":794,"nodeType":"Block","src":"3114:44:7","statements":[{"expression":{"id":792,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"3131:20:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":791,"id":793,"nodeType":"Return","src":"3124:27:7"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"2445:577:7","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":795,"implemented":true,"kind":"function","modifiers":[{"id":788,"kind":"modifierInvocation","modifierName":{"id":787,"name":"notDelegated","nameLocations":["3083:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":771,"src":"3083:12:7"},"nodeType":"ModifierInvocation","src":"3083:12:7"}],"name":"proxiableUUID","nameLocation":"3036:13:7","nodeType":"FunctionDefinition","overrides":{"id":786,"nodeType":"OverrideSpecifier","overrides":[],"src":"3074:8:7"},"parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"3049:2:7"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"3105:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3105:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3104:9:7"},"scope":850,"src":"3027:131:7","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":816,"nodeType":"Block","src":"3479:124:7","statements":[{"expression":{"arguments":[{"id":804,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3507:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"3489:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"3489:36:7"},{"expression":{"arguments":[{"id":808,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3557:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3576:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"3580:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":807,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"3535:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3535:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"3535:61:7"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"3164:239:7","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":817,"implemented":true,"kind":"function","modifiers":[{"id":801,"kind":"modifierInvocation","modifierName":{"id":800,"name":"onlyProxy","nameLocations":["3469:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":756,"src":"3469:9:7"},"nodeType":"ModifierInvocation","src":"3469:9:7"}],"name":"upgradeTo","nameLocation":"3417:9:7","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"newImplementation","nameLocation":"3435:17:7","nodeType":"VariableDeclaration","scope":817,"src":"3427:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:27:7"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"3479:0:7"},"scope":850,"src":"3408:195:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":837,"nodeType":"Block","src":"4027:115:7","statements":[{"expression":{"arguments":[{"id":828,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"4055:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":827,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4037:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"4037:36:7"},{"expression":{"arguments":[{"id":832,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"4105:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4124:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4130:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":831,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4083:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"4083:52:7"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"3609:308:7","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":838,"implemented":true,"kind":"function","modifiers":[{"id":825,"kind":"modifierInvocation","modifierName":{"id":824,"name":"onlyProxy","nameLocations":["4017:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":756,"src":"4017:9:7"},"nodeType":"ModifierInvocation","src":"4017:9:7"}],"name":"upgradeToAndCall","nameLocation":"3931:16:7","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"newImplementation","nameLocation":"3956:17:7","nodeType":"VariableDeclaration","scope":838,"src":"3948:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"data","nameLocation":"3988:4:7","nodeType":"VariableDeclaration","scope":838,"src":"3975:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":821,"name":"bytes","nodeType":"ElementaryTypeName","src":"3975:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3947:46:7"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"4027:0:7"},"scope":850,"src":"3922:220:7","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"4148:397:7","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":844,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4559:17:7","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"newImplementation","nameLocation":"4585:17:7","nodeType":"VariableDeclaration","scope":844,"src":"4577:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"4577:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4576:27:7"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"4620:0:7"},"scope":850,"src":"4550:71:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"4627:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":849,"mutability":"mutable","name":"__gap","nameLocation":"4906:5:7","nodeType":"VariableDeclaration","scope":850,"src":"4886:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":848,"length":{"hexValue":"3530","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4886:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":851,"src":"949:3965:7","usedErrors":[],"usedEvents":[186,193,198,559]}],"src":"115:4800:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1180]},"id":1181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":852,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1180,"linearizedBaseContracts":[1180],"name":"AddressUpgradeable","nameLocation":"202:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":867,"nodeType":"Block","src":"1489:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":861,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"1713:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:8","memberName":"code","nodeType":"MemberAccess","src":"1713:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:8","memberName":"length","nodeType":"MemberAccess","src":"1713:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":860,"id":866,"nodeType":"Return","src":"1706:30:8"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"227:1191:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:8","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"account","nameLocation":"1451:7:8","nodeType":"VariableDeclaration","scope":868,"src":"1443:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:8"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"1483:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:8"},"scope":1180,"src":"1423:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":901,"nodeType":"Block","src":"2729:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":879,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1180","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1180","typeString":"library AddressUpgradeable"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:8","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:8","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2739:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":886,"nodeType":"ExpressionStatement","src":"2739:73:8"},{"assignments":[888,null],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"success","nameLocation":"2829:7:8","nodeType":"VariableDeclaration","scope":901,"src":"2824:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":887,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":895,"initialValue":{"arguments":[{"hexValue":"","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":889,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2842:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:8","memberName":"call","nodeType":"MemberAccess","src":"2842:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"2864:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:8"},{"expression":{"arguments":[{"id":897,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"2893:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2885:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"ExpressionStatement","src":"2885:78:8"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1749:904:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:8","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:8","nodeType":"VariableDeclaration","scope":902,"src":"2677:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"amount","nameLocation":"2712:6:8","nodeType":"VariableDeclaration","scope":902,"src":"2704:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"2729:0:8"},"scope":1180,"src":"2658:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"3801:96:8","statements":[{"expression":{"arguments":[{"id":913,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"3840:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"3848:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":912,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[960,1004],"referencedDeclaration":1004,"src":"3818:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":911,"id":918,"nodeType":"Return","src":"3811:79:8"}]},"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"2976:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:8","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"target","nameLocation":"3742:6:8","nodeType":"VariableDeclaration","scope":920,"src":"3734:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"data","nameLocation":"3763:4:8","nodeType":"VariableDeclaration","scope":920,"src":"3750:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":906,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:8"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"3787:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":909,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:8"},"scope":1180,"src":"3712:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":939,"nodeType":"Block","src":"4266:76:8","statements":[{"expression":{"arguments":[{"id":933,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"4305:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4313:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":936,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"4322:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":932,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[960,1004],"referencedDeclaration":1004,"src":"4283:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":931,"id":938,"nodeType":"Return","src":"4276:59:8"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"3903:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":940,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:8","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"target","nameLocation":"4158:6:8","nodeType":"VariableDeclaration","scope":940,"src":"4150:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"data","nameLocation":"4187:4:8","nodeType":"VariableDeclaration","scope":940,"src":"4174:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:8","nodeType":"VariableDeclaration","scope":940,"src":"4201:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":926,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:8"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"4252:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:8"},"scope":1180,"src":"4119:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"4817:111:8","statements":[{"expression":{"arguments":[{"id":953,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4856:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4864:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4870:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":952,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[960,1004],"referencedDeclaration":1004,"src":"4834:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":951,"id":958,"nodeType":"Return","src":"4827:94:8"}]},"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"4348:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:8","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"target","nameLocation":"4743:6:8","nodeType":"VariableDeclaration","scope":960,"src":"4735:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"data","nameLocation":"4764:4:8","nodeType":"VariableDeclaration","scope":960,"src":"4751:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":944,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"value","nameLocation":"4778:5:8","nodeType":"VariableDeclaration","scope":960,"src":"4770:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:8"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"4803:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:8"},"scope":1180,"src":"4704:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1003,"nodeType":"Block","src":"5355:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":977,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1180","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1180","typeString":"library AddressUpgradeable"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:8","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:8","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5398:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5365:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"ExpressionStatement","src":"5365:81:8"},{"assignments":[986,988],"declarations":[{"constant":false,"id":986,"mutability":"mutable","name":"success","nameLocation":"5462:7:8","nodeType":"VariableDeclaration","scope":1003,"src":"5457:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":985,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:8","nodeType":"VariableDeclaration","scope":1003,"src":"5471:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":987,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":995,"initialValue":{"arguments":[{"id":993,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"5524:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":989,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5498:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:8","memberName":"call","nodeType":"MemberAccess","src":"5498:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5517:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:8"},{"expression":{"arguments":[{"id":997,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"5573:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"5581:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":999,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5590:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1000,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5602:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":996,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5546:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":973,"id":1002,"nodeType":"Return","src":"5539:76:8"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"4934:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1004,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:8","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"target","nameLocation":"5224:6:8","nodeType":"VariableDeclaration","scope":1004,"src":"5216:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"data","nameLocation":"5253:4:8","nodeType":"VariableDeclaration","scope":1004,"src":"5240:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":964,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"value","nameLocation":"5275:5:8","nodeType":"VariableDeclaration","scope":1004,"src":"5267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:8","nodeType":"VariableDeclaration","scope":1004,"src":"5290:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":968,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:8"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1004,"src":"5341:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:8"},"scope":1180,"src":"5176:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1020,"nodeType":"Block","src":"5899:97:8","statements":[{"expression":{"arguments":[{"id":1015,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"5935:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1016,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5943:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1014,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1021,1050],"referencedDeclaration":1050,"src":"5916:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1013,"id":1019,"nodeType":"Return","src":"5909:80:8"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"5628:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:8","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"target","nameLocation":"5835:6:8","nodeType":"VariableDeclaration","scope":1021,"src":"5827:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"data","nameLocation":"5856:4:8","nodeType":"VariableDeclaration","scope":1021,"src":"5843:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1008,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:8"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1021,"src":"5885:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:8"},"scope":1180,"src":"5799:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"6338:168:8","statements":[{"assignments":[1034,1036],"declarations":[{"constant":false,"id":1034,"mutability":"mutable","name":"success","nameLocation":"6354:7:8","nodeType":"VariableDeclaration","scope":1049,"src":"6349:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1033,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:8","nodeType":"VariableDeclaration","scope":1049,"src":"6363:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1041,"initialValue":{"arguments":[{"id":1039,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6408:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1037,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6390:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:8"},{"expression":{"arguments":[{"id":1043,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"6457:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6465:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1045,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"6474:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1046,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6486:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1042,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"6430:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1032,"id":1048,"nodeType":"Return","src":"6423:76:8"}]},"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"6002:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:8","nodeType":"FunctionDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"target","nameLocation":"6225:6:8","nodeType":"VariableDeclaration","scope":1050,"src":"6217:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"data","nameLocation":"6254:4:8","nodeType":"VariableDeclaration","scope":1050,"src":"6241:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1025,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:8","nodeType":"VariableDeclaration","scope":1050,"src":"6268:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:8"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"6324:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1030,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:8"},"scope":1180,"src":"6180:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"6782:101:8","statements":[{"expression":{"arguments":[{"id":1061,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6820:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6828:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1060,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1067,1096],"referencedDeclaration":1096,"src":"6799:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1059,"id":1065,"nodeType":"Return","src":"6792:84:8"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"6512:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:8","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"target","nameLocation":"6723:6:8","nodeType":"VariableDeclaration","scope":1067,"src":"6715:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"data","nameLocation":"6744:4:8","nodeType":"VariableDeclaration","scope":1067,"src":"6731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1054,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:8"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1067,"src":"6768:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:8"},"scope":1180,"src":"6685:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"7224:170:8","statements":[{"assignments":[1080,1082],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"success","nameLocation":"7240:7:8","nodeType":"VariableDeclaration","scope":1095,"src":"7235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:8","nodeType":"VariableDeclaration","scope":1095,"src":"7249:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1087,"initialValue":{"arguments":[{"id":1085,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7296:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1083,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7276:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:8"},{"expression":{"arguments":[{"id":1089,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7345:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"7353:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1091,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7362:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1092,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"7374:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1088,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7318:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1078,"id":1094,"nodeType":"Return","src":"7311:76:8"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"6889:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:8","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"target","nameLocation":"7116:6:8","nodeType":"VariableDeclaration","scope":1096,"src":"7108:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"data","nameLocation":"7145:4:8","nodeType":"VariableDeclaration","scope":1096,"src":"7132:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:8","nodeType":"VariableDeclaration","scope":1096,"src":"7159:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1073,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:8"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1096,"src":"7210:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:8"},"scope":1180,"src":"7069:325:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1134,"nodeType":"Block","src":"7876:434:8","statements":[{"condition":{"id":1110,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"7890:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1132,"nodeType":"Block","src":"8246:58:8","statements":[{"expression":{"arguments":[{"id":1128,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"8268:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1129,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"8280:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1127,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8260:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"8260:33:8"}]},"id":1133,"nodeType":"IfStatement","src":"7886:418:8","trueBody":{"id":1126,"nodeType":"Block","src":"7899:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1111,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"7917:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:8","memberName":"length","nodeType":"MemberAccess","src":"7917:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"7913:286:8","trueBody":{"id":1122,"nodeType":"Block","src":"7941:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1117,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"8143:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1116,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8132:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1115,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8124:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"ExpressionStatement","src":"8124:60:8"}]}},{"expression":{"id":1124,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"8219:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1109,"id":1125,"nodeType":"Return","src":"8212:17:8"}]}}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"7400:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:8","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"target","nameLocation":"7735:6:8","nodeType":"VariableDeclaration","scope":1135,"src":"7727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"success","nameLocation":"7756:7:8","nodeType":"VariableDeclaration","scope":1135,"src":"7751:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1100,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:8","nodeType":"VariableDeclaration","scope":1135,"src":"7773:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1102,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:8","nodeType":"VariableDeclaration","scope":1135,"src":"7806:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1104,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:8"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"7862:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:8"},"scope":1180,"src":"7682:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1158,"nodeType":"Block","src":"8691:135:8","statements":[{"condition":{"id":1147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"8705:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1156,"nodeType":"Block","src":"8762:58:8","statements":[{"expression":{"arguments":[{"id":1152,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8784:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1153,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8796:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1151,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"8776:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"8776:33:8"}]},"id":1157,"nodeType":"IfStatement","src":"8701:119:8","trueBody":{"id":1150,"nodeType":"Block","src":"8714:42:8","statements":[{"expression":{"id":1148,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"8735:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1146,"id":1149,"nodeType":"Return","src":"8728:17:8"}]}}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"8316:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:8","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"success","nameLocation":"8571:7:8","nodeType":"VariableDeclaration","scope":1159,"src":"8566:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1137,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:8","nodeType":"VariableDeclaration","scope":1159,"src":"8588:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:8","nodeType":"VariableDeclaration","scope":1159,"src":"8621:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1141,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:8"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"8677:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1144,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:8"},"scope":1180,"src":"8531:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1178,"nodeType":"Block","src":"8915:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1166,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"8991:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:8","memberName":"length","nodeType":"MemberAccess","src":"8991:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1176,"nodeType":"Block","src":"9321:45:8","statements":[{"expression":{"arguments":[{"id":1173,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"9342:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1172,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"9335:20:8"}]},"id":1177,"nodeType":"IfStatement","src":"8987:379:8","trueBody":{"id":1171,"nodeType":"Block","src":"9014:301:8","statements":[{"AST":{"nativeSrc":"9172:133:8","nodeType":"YulBlock","src":"9172:133:8","statements":[{"nativeSrc":"9190:40:8","nodeType":"YulVariableDeclaration","src":"9190:40:8","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:8","nodeType":"YulIdentifier","src":"9219:10:8"}],"functionName":{"name":"mload","nativeSrc":"9213:5:8","nodeType":"YulIdentifier","src":"9213:5:8"},"nativeSrc":"9213:17:8","nodeType":"YulFunctionCall","src":"9213:17:8"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:8","nodeType":"YulTypedName","src":"9194:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:8","nodeType":"YulLiteral","src":"9258:2:8","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:8","nodeType":"YulIdentifier","src":"9262:10:8"}],"functionName":{"name":"add","nativeSrc":"9254:3:8","nodeType":"YulIdentifier","src":"9254:3:8"},"nativeSrc":"9254:19:8","nodeType":"YulFunctionCall","src":"9254:19:8"},{"name":"returndata_size","nativeSrc":"9275:15:8","nodeType":"YulIdentifier","src":"9275:15:8"}],"functionName":{"name":"revert","nativeSrc":"9247:6:8","nodeType":"YulIdentifier","src":"9247:6:8"},"nativeSrc":"9247:44:8","nodeType":"YulFunctionCall","src":"9247:44:8"},"nativeSrc":"9247:44:8","nodeType":"YulExpressionStatement","src":"9247:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1161,"isOffset":false,"isSlot":false,"src":"9219:10:8","valueSize":1},{"declaration":1161,"isOffset":false,"isSlot":false,"src":"9262:10:8","valueSize":1}],"id":1170,"nodeType":"InlineAssembly","src":"9163:142:8"}]}}]},"id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:8","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:8","nodeType":"VariableDeclaration","scope":1179,"src":"8849:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1160,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:8","nodeType":"VariableDeclaration","scope":1179,"src":"8874:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1162,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:8"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"8915:0:8"},"scope":1180,"src":"8832:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1181,"src":"194:9180:8","usedErrors":[],"usedEvents":[]}],"src":"101:9274:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1231],"Initializable":[713]},"id":1232,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:9"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1232,"sourceUnit":714,"src":"125:63:9","symbolAliases":[{"foreign":{"id":1183,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"133:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1186,"name":"Initializable","nameLocations":["727:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"727:13:9"},"id":1187,"nodeType":"InheritanceSpecifier","src":"727:13:9"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"190:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1231,"linearizedBaseContracts":[1231,713],"name":"ContextUpgradeable","nameLocation":"705:18:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1192,"nodeType":"Block","src":"799:7:9","statements":[]},"id":1193,"implemented":true,"kind":"function","modifiers":[{"id":1190,"kind":"modifierInvocation","modifierName":{"id":1189,"name":"onlyInitializing","nameLocations":["782:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"782:16:9"},"nodeType":"ModifierInvocation","src":"782:16:9"}],"name":"__Context_init","nameLocation":"756:14:9","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"770:2:9"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"799:0:9"},"scope":1231,"src":"747:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"874:7:9","statements":[]},"id":1199,"implemented":true,"kind":"function","modifiers":[{"id":1196,"kind":"modifierInvocation","modifierName":{"id":1195,"name":"onlyInitializing","nameLocations":["857:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":658,"src":"857:16:9"},"nodeType":"ModifierInvocation","src":"857:16:9"}],"name":"__Context_init_unchained","nameLocation":"821:24:9","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"845:2:9"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"874:0:9"},"scope":1231,"src":"812:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"948:34:9","statements":[{"expression":{"expression":{"id":1204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:9","memberName":"sender","nodeType":"MemberAccess","src":"965:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1203,"id":1206,"nodeType":"Return","src":"958:17:9"}]},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:9","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"905:2:9"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"939:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:9"},"scope":1231,"src":"886:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"1055:32:9","statements":[{"expression":{"expression":{"id":1213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:9","memberName":"data","nodeType":"MemberAccess","src":"1072:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1212,"id":1215,"nodeType":"Return","src":"1065:15:9"}]},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:9","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"1005:2:9"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"1039:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1210,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:9"},"scope":1231,"src":"988:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1224,"nodeType":"Block","src":"1165:25:9","statements":[{"expression":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1221,"id":1223,"nodeType":"Return","src":"1175:8:9"}]},"id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:9","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"1122:2:9"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"1156:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:9"},"scope":1231,"src":"1093:97:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"1196:254:9","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1230,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:9","nodeType":"VariableDeclaration","scope":1231,"src":"1455:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"length":{"hexValue":"3530","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1232,"src":"687:796:9","usedErrors":[],"usedEvents":[559]}],"src":"101:1383:9"},"id":9},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1341]},"id":1342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1233,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"218:1201:10","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1341,"linearizedBaseContracts":[1341],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1237,"members":[{"constant":false,"id":1236,"mutability":"mutable","name":"value","nameLocation":"1494:5:10","nodeType":"VariableDeclaration","scope":1237,"src":"1486:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:10","nodeType":"StructDefinition","scope":1341,"src":"1457:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1240,"members":[{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"1546:5:10","nodeType":"VariableDeclaration","scope":1240,"src":"1541:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:10","nodeType":"StructDefinition","scope":1341,"src":"1512:46:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1243,"members":[{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"1601:5:10","nodeType":"VariableDeclaration","scope":1243,"src":"1593:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:10","nodeType":"StructDefinition","scope":1341,"src":"1564:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1246,"members":[{"constant":false,"id":1245,"mutability":"mutable","name":"value","nameLocation":"1656:5:10","nodeType":"VariableDeclaration","scope":1246,"src":"1648:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:10","nodeType":"StructDefinition","scope":1341,"src":"1619:49:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1249,"members":[{"constant":false,"id":1248,"mutability":"mutable","name":"value","nameLocation":"1709:5:10","nodeType":"VariableDeclaration","scope":1249,"src":"1702:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:10","nodeType":"StructDefinition","scope":1341,"src":"1674:47:10","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1252,"members":[{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"1760:5:10","nodeType":"VariableDeclaration","scope":1252,"src":"1754:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:10","nodeType":"StructDefinition","scope":1341,"src":"1727:45:10","visibility":"public"},{"body":{"id":1262,"nodeType":"Block","src":"1954:106:10","statements":[{"AST":{"nativeSrc":"2016:38:10","nodeType":"YulBlock","src":"2016:38:10","statements":[{"nativeSrc":"2030:14:10","nodeType":"YulAssignment","src":"2030:14:10","value":{"name":"slot","nativeSrc":"2040:4:10","nodeType":"YulIdentifier","src":"2040:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2030:6:10","nodeType":"YulIdentifier","src":"2030:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1259,"isOffset":false,"isSlot":true,"src":"2030:6:10","suffix":"slot","valueSize":1},{"declaration":1255,"isOffset":false,"isSlot":false,"src":"2040:4:10","valueSize":1}],"id":1261,"nodeType":"InlineAssembly","src":"2007:47:10"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1778:87:10","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:10","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"slot","nameLocation":"1902:4:10","nodeType":"VariableDeclaration","scope":1263,"src":"1894:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:10"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"r","nameLocation":"1951:1:10","nodeType":"VariableDeclaration","scope":1263,"src":"1931:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1258,"nodeType":"UserDefinedTypeName","pathNode":{"id":1257,"name":"AddressSlot","nameLocations":["1931:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1237,"src":"1931:11:10"},"referencedDeclaration":1237,"src":"1931:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1237_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:10"},"scope":1341,"src":"1870:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"2242:106:10","statements":[{"AST":{"nativeSrc":"2304:38:10","nodeType":"YulBlock","src":"2304:38:10","statements":[{"nativeSrc":"2318:14:10","nodeType":"YulAssignment","src":"2318:14:10","value":{"name":"slot","nativeSrc":"2328:4:10","nodeType":"YulIdentifier","src":"2328:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2318:6:10","nodeType":"YulIdentifier","src":"2318:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1270,"isOffset":false,"isSlot":true,"src":"2318:6:10","suffix":"slot","valueSize":1},{"declaration":1266,"isOffset":false,"isSlot":false,"src":"2328:4:10","valueSize":1}],"id":1272,"nodeType":"InlineAssembly","src":"2295:47:10"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"2066:87:10","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:10","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"slot","nameLocation":"2190:4:10","nodeType":"VariableDeclaration","scope":1274,"src":"2182:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:10"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"r","nameLocation":"2239:1:10","nodeType":"VariableDeclaration","scope":1274,"src":"2219:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1240_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1269,"nodeType":"UserDefinedTypeName","pathNode":{"id":1268,"name":"BooleanSlot","nameLocations":["2219:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1240,"src":"2219:11:10"},"referencedDeclaration":1240,"src":"2219:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1240_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:10"},"scope":1341,"src":"2158:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"2530:106:10","statements":[{"AST":{"nativeSrc":"2592:38:10","nodeType":"YulBlock","src":"2592:38:10","statements":[{"nativeSrc":"2606:14:10","nodeType":"YulAssignment","src":"2606:14:10","value":{"name":"slot","nativeSrc":"2616:4:10","nodeType":"YulIdentifier","src":"2616:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2606:6:10","nodeType":"YulIdentifier","src":"2606:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1281,"isOffset":false,"isSlot":true,"src":"2606:6:10","suffix":"slot","valueSize":1},{"declaration":1277,"isOffset":false,"isSlot":false,"src":"2616:4:10","valueSize":1}],"id":1283,"nodeType":"InlineAssembly","src":"2583:47:10"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"2354:87:10","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:10","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"slot","nameLocation":"2478:4:10","nodeType":"VariableDeclaration","scope":1285,"src":"2470:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:10"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"r","nameLocation":"2527:1:10","nodeType":"VariableDeclaration","scope":1285,"src":"2507:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1243_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1280,"nodeType":"UserDefinedTypeName","pathNode":{"id":1279,"name":"Bytes32Slot","nameLocations":["2507:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1243,"src":"2507:11:10"},"referencedDeclaration":1243,"src":"2507:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1243_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:10"},"scope":1341,"src":"2446:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"2818:106:10","statements":[{"AST":{"nativeSrc":"2880:38:10","nodeType":"YulBlock","src":"2880:38:10","statements":[{"nativeSrc":"2894:14:10","nodeType":"YulAssignment","src":"2894:14:10","value":{"name":"slot","nativeSrc":"2904:4:10","nodeType":"YulIdentifier","src":"2904:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"2894:6:10","nodeType":"YulIdentifier","src":"2894:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1292,"isOffset":false,"isSlot":true,"src":"2894:6:10","suffix":"slot","valueSize":1},{"declaration":1288,"isOffset":false,"isSlot":false,"src":"2904:4:10","valueSize":1}],"id":1294,"nodeType":"InlineAssembly","src":"2871:47:10"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"2642:87:10","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:10","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"slot","nameLocation":"2766:4:10","nodeType":"VariableDeclaration","scope":1296,"src":"2758:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:10"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"r","nameLocation":"2815:1:10","nodeType":"VariableDeclaration","scope":1296,"src":"2795:21:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1246_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"Uint256Slot","nameLocations":["2795:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1246,"src":"2795:11:10"},"referencedDeclaration":1246,"src":"2795:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1246_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:10"},"scope":1341,"src":"2734:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"3103:106:10","statements":[{"AST":{"nativeSrc":"3165:38:10","nodeType":"YulBlock","src":"3165:38:10","statements":[{"nativeSrc":"3179:14:10","nodeType":"YulAssignment","src":"3179:14:10","value":{"name":"slot","nativeSrc":"3189:4:10","nodeType":"YulIdentifier","src":"3189:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3179:6:10","nodeType":"YulIdentifier","src":"3179:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1303,"isOffset":false,"isSlot":true,"src":"3179:6:10","suffix":"slot","valueSize":1},{"declaration":1299,"isOffset":false,"isSlot":false,"src":"3189:4:10","valueSize":1}],"id":1305,"nodeType":"InlineAssembly","src":"3156:47:10"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"2930:86:10","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:10","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"slot","nameLocation":"3052:4:10","nodeType":"VariableDeclaration","scope":1307,"src":"3044:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:10"},"returnParameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"r","nameLocation":"3100:1:10","nodeType":"VariableDeclaration","scope":1307,"src":"3081:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1249_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1302,"nodeType":"UserDefinedTypeName","pathNode":{"id":1301,"name":"StringSlot","nameLocations":["3081:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"3081:10:10"},"referencedDeclaration":1249,"src":"3081:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1249_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:10"},"scope":1341,"src":"3021:188:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1317,"nodeType":"Block","src":"3411:112:10","statements":[{"AST":{"nativeSrc":"3473:44:10","nodeType":"YulBlock","src":"3473:44:10","statements":[{"nativeSrc":"3487:20:10","nodeType":"YulAssignment","src":"3487:20:10","value":{"name":"store.slot","nativeSrc":"3497:10:10","nodeType":"YulIdentifier","src":"3497:10:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3487:6:10","nodeType":"YulIdentifier","src":"3487:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1314,"isOffset":false,"isSlot":true,"src":"3487:6:10","suffix":"slot","valueSize":1},{"declaration":1310,"isOffset":false,"isSlot":true,"src":"3497:10:10","suffix":"slot","valueSize":1}],"id":1316,"nodeType":"InlineAssembly","src":"3464:53:10"}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3215:101:10","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:10","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"store","nameLocation":"3359:5:10","nodeType":"VariableDeclaration","scope":1318,"src":"3344:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1309,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:10"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"r","nameLocation":"3408:1:10","nodeType":"VariableDeclaration","scope":1318,"src":"3389:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1249_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1313,"nodeType":"UserDefinedTypeName","pathNode":{"id":1312,"name":"StringSlot","nameLocations":["3389:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"3389:10:10"},"referencedDeclaration":1249,"src":"3389:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1249_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:10"},"scope":1341,"src":"3321:202:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1328,"nodeType":"Block","src":"3699:106:10","statements":[{"AST":{"nativeSrc":"3761:38:10","nodeType":"YulBlock","src":"3761:38:10","statements":[{"nativeSrc":"3775:14:10","nodeType":"YulAssignment","src":"3775:14:10","value":{"name":"slot","nativeSrc":"3785:4:10","nodeType":"YulIdentifier","src":"3785:4:10"},"variableNames":[{"name":"r.slot","nativeSrc":"3775:6:10","nodeType":"YulIdentifier","src":"3775:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1325,"isOffset":false,"isSlot":true,"src":"3775:6:10","suffix":"slot","valueSize":1},{"declaration":1321,"isOffset":false,"isSlot":false,"src":"3785:4:10","valueSize":1}],"id":1327,"nodeType":"InlineAssembly","src":"3752:47:10"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"3529:85:10","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:10","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"slot","nameLocation":"3649:4:10","nodeType":"VariableDeclaration","scope":1329,"src":"3641:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:10"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"r","nameLocation":"3696:1:10","nodeType":"VariableDeclaration","scope":1329,"src":"3678:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1252_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1324,"nodeType":"UserDefinedTypeName","pathNode":{"id":1323,"name":"BytesSlot","nameLocations":["3678:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"3678:9:10"},"referencedDeclaration":1252,"src":"3678:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1252_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:10"},"scope":1341,"src":"3619:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"4002:112:10","statements":[{"AST":{"nativeSrc":"4064:44:10","nodeType":"YulBlock","src":"4064:44:10","statements":[{"nativeSrc":"4078:20:10","nodeType":"YulAssignment","src":"4078:20:10","value":{"name":"store.slot","nativeSrc":"4088:10:10","nodeType":"YulIdentifier","src":"4088:10:10"},"variableNames":[{"name":"r.slot","nativeSrc":"4078:6:10","nodeType":"YulIdentifier","src":"4078:6:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1336,"isOffset":false,"isSlot":true,"src":"4078:6:10","suffix":"slot","valueSize":1},{"declaration":1332,"isOffset":false,"isSlot":true,"src":"4088:10:10","suffix":"slot","valueSize":1}],"id":1338,"nodeType":"InlineAssembly","src":"4055:53:10"}]},"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"3811:99:10","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:10","nodeType":"FunctionDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"store","nameLocation":"3951:5:10","nodeType":"VariableDeclaration","scope":1340,"src":"3937:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:10"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"r","nameLocation":"3999:1:10","nodeType":"VariableDeclaration","scope":1340,"src":"3981:19:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1252_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1335,"nodeType":"UserDefinedTypeName","pathNode":{"id":1334,"name":"BytesSlot","nameLocations":["3981:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":1252,"src":"3981:9:10"},"referencedDeclaration":1252,"src":"3981:9:10","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1252_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:10"},"scope":1341,"src":"3915:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1342,"src":"1420:2696:10","usedErrors":[],"usedEvents":[]}],"src":"193:3924:10"},"id":10},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[1740],"Create2":[2034],"Errors":[2056]},"id":1741,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1343,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"../utils/Create2.sol","id":1345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1741,"sourceUnit":2035,"src":"126:45:11","symbolAliases":[{"foreign":{"id":1344,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"134:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":1347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1741,"sourceUnit":2057,"src":"172:43:11","symbolAliases":[{"foreign":{"id":1346,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"180:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"217:599:11","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":1740,"linearizedBaseContracts":[1740],"name":"Clones","nameLocation":"825:6:11","nodeType":"ContractDefinition","nodes":[{"errorSelector":"94289054","id":1350,"name":"CloneArgumentsTooLong","nameLocation":"844:21:11","nodeType":"ErrorDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"865:2:11"},"src":"838:30:11"},{"body":{"id":1363,"nodeType":"Block","src":"1480:48:11","statements":[{"expression":{"arguments":[{"id":1359,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1503:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1358,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[1364,1409],"referencedDeclaration":1409,"src":"1497:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1357,"id":1362,"nodeType":"Return","src":"1490:31:11"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"874:526:11","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1414:5:11","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"implementation","nameLocation":"1428:14:11","nodeType":"VariableDeclaration","scope":1364,"src":"1420:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1419:24:11"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"instance","nameLocation":"1470:8:11","nodeType":"VariableDeclaration","scope":1364,"src":"1462:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1461:18:11"},"scope":1740,"src":"1405:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1408,"nodeType":"Block","src":"2345:820:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1376,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2367:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2359:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"2359:7:11","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2359:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"2355:123:11","trueBody":{"id":1392,"nodeType":"Block","src":"2390:88:11","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1386,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2446:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:11","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2438:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2461:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1381,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2411:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2418:19:11","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"2411:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1391,"nodeType":"RevertStatement","src":"2404:63:11"}]}},{"AST":{"nativeSrc":"2512:553:11","nodeType":"YulBlock","src":"2512:553:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2717:4:11","nodeType":"YulLiteral","src":"2717:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2730:4:11","nodeType":"YulLiteral","src":"2730:4:11","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"2740:4:11","nodeType":"YulLiteral","src":"2740:4:11","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"2746:14:11","nodeType":"YulIdentifier","src":"2746:14:11"}],"functionName":{"name":"shl","nativeSrc":"2736:3:11","nodeType":"YulIdentifier","src":"2736:3:11"},"nativeSrc":"2736:25:11","nodeType":"YulFunctionCall","src":"2736:25:11"}],"functionName":{"name":"shr","nativeSrc":"2726:3:11","nodeType":"YulIdentifier","src":"2726:3:11"},"nativeSrc":"2726:36:11","nodeType":"YulFunctionCall","src":"2726:36:11"},{"kind":"number","nativeSrc":"2764:48:11","nodeType":"YulLiteral","src":"2764:48:11","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"2723:2:11","nodeType":"YulIdentifier","src":"2723:2:11"},"nativeSrc":"2723:90:11","nodeType":"YulFunctionCall","src":"2723:90:11"}],"functionName":{"name":"mstore","nativeSrc":"2710:6:11","nodeType":"YulIdentifier","src":"2710:6:11"},"nativeSrc":"2710:104:11","nodeType":"YulFunctionCall","src":"2710:104:11"},"nativeSrc":"2710:104:11","nodeType":"YulExpressionStatement","src":"2710:104:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2935:4:11","nodeType":"YulLiteral","src":"2935:4:11","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2948:4:11","nodeType":"YulLiteral","src":"2948:4:11","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"2954:14:11","nodeType":"YulIdentifier","src":"2954:14:11"}],"functionName":{"name":"shl","nativeSrc":"2944:3:11","nodeType":"YulIdentifier","src":"2944:3:11"},"nativeSrc":"2944:25:11","nodeType":"YulFunctionCall","src":"2944:25:11"},{"kind":"number","nativeSrc":"2971:32:11","nodeType":"YulLiteral","src":"2971:32:11","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"2941:2:11","nodeType":"YulIdentifier","src":"2941:2:11"},"nativeSrc":"2941:63:11","nodeType":"YulFunctionCall","src":"2941:63:11"}],"functionName":{"name":"mstore","nativeSrc":"2928:6:11","nodeType":"YulIdentifier","src":"2928:6:11"},"nativeSrc":"2928:77:11","nodeType":"YulFunctionCall","src":"2928:77:11"},"nativeSrc":"2928:77:11","nodeType":"YulExpressionStatement","src":"2928:77:11"},{"nativeSrc":"3018:37:11","nodeType":"YulAssignment","src":"3018:37:11","value":{"arguments":[{"name":"value","nativeSrc":"3037:5:11","nodeType":"YulIdentifier","src":"3037:5:11"},{"kind":"number","nativeSrc":"3044:4:11","nodeType":"YulLiteral","src":"3044:4:11","type":"","value":"0x09"},{"kind":"number","nativeSrc":"3050:4:11","nodeType":"YulLiteral","src":"3050:4:11","type":"","value":"0x37"}],"functionName":{"name":"create","nativeSrc":"3030:6:11","nodeType":"YulIdentifier","src":"3030:6:11"},"nativeSrc":"3030:25:11","nodeType":"YulFunctionCall","src":"3030:25:11"},"variableNames":[{"name":"instance","nativeSrc":"3018:8:11","nodeType":"YulIdentifier","src":"3018:8:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1367,"isOffset":false,"isSlot":false,"src":"2746:14:11","valueSize":1},{"declaration":1367,"isOffset":false,"isSlot":false,"src":"2954:14:11","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"3018:8:11","valueSize":1},{"declaration":1369,"isOffset":false,"isSlot":false,"src":"3037:5:11","valueSize":1}],"flags":["memory-safe"],"id":1394,"nodeType":"InlineAssembly","src":"2487:578:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3078:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3098:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3090:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:11","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3090:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3078:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"nodeType":"IfStatement","src":"3074:85:11","trueBody":{"id":1406,"nodeType":"Block","src":"3102:57:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1401,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3123:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3130:16:11","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"3123:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1405,"nodeType":"RevertStatement","src":"3116:32:11"}]}}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"1534:716:11","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":1409,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"2264:5:11","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"implementation","nameLocation":"2278:14:11","nodeType":"VariableDeclaration","scope":1409,"src":"2270:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"2302:5:11","nodeType":"VariableDeclaration","scope":1409,"src":"2294:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:39:11"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"instance","nameLocation":"2335:8:11","nodeType":"VariableDeclaration","scope":1409,"src":"2327:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2326:18:11"},"scope":1740,"src":"2255:910:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"3977:67:11","statements":[{"expression":{"arguments":[{"id":1420,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"4013:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"4029:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4035:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1419,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[1426,1473],"referencedDeclaration":1473,"src":"3994:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1418,"id":1424,"nodeType":"Return","src":"3987:50:11"}]},"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"3171:699:11","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"3884:18:11","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"implementation","nameLocation":"3911:14:11","nodeType":"VariableDeclaration","scope":1426,"src":"3903:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"salt","nameLocation":"3935:4:11","nodeType":"VariableDeclaration","scope":1426,"src":"3927:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3902:38:11"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"instance","nameLocation":"3967:8:11","nodeType":"VariableDeclaration","scope":1426,"src":"3959:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3958:18:11"},"scope":1740,"src":"3875:169:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1472,"nodeType":"Block","src":"4952:827:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1440,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4974:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4966:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"4966:7:11","typeDescriptions":{}}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4980:7:11","memberName":"balance","nodeType":"MemberAccess","src":"4966:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"4990:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4966:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"4962:123:11","trueBody":{"id":1456,"nodeType":"Block","src":"4997:88:11","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1450,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5053:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5045:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"5045:7:11","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5045:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5059:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5045:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5068:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1445,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5018:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5025:19:11","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"5018:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1455,"nodeType":"RevertStatement","src":"5011:63:11"}]}},{"AST":{"nativeSrc":"5119:560:11","nodeType":"YulBlock","src":"5119:560:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5324:4:11","nodeType":"YulLiteral","src":"5324:4:11","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5337:4:11","nodeType":"YulLiteral","src":"5337:4:11","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"5347:4:11","nodeType":"YulLiteral","src":"5347:4:11","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"5353:14:11","nodeType":"YulIdentifier","src":"5353:14:11"}],"functionName":{"name":"shl","nativeSrc":"5343:3:11","nodeType":"YulIdentifier","src":"5343:3:11"},"nativeSrc":"5343:25:11","nodeType":"YulFunctionCall","src":"5343:25:11"}],"functionName":{"name":"shr","nativeSrc":"5333:3:11","nodeType":"YulIdentifier","src":"5333:3:11"},"nativeSrc":"5333:36:11","nodeType":"YulFunctionCall","src":"5333:36:11"},{"kind":"number","nativeSrc":"5371:48:11","nodeType":"YulLiteral","src":"5371:48:11","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"5330:2:11","nodeType":"YulIdentifier","src":"5330:2:11"},"nativeSrc":"5330:90:11","nodeType":"YulFunctionCall","src":"5330:90:11"}],"functionName":{"name":"mstore","nativeSrc":"5317:6:11","nodeType":"YulIdentifier","src":"5317:6:11"},"nativeSrc":"5317:104:11","nodeType":"YulFunctionCall","src":"5317:104:11"},"nativeSrc":"5317:104:11","nodeType":"YulExpressionStatement","src":"5317:104:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5542:4:11","nodeType":"YulLiteral","src":"5542:4:11","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5555:4:11","nodeType":"YulLiteral","src":"5555:4:11","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"5561:14:11","nodeType":"YulIdentifier","src":"5561:14:11"}],"functionName":{"name":"shl","nativeSrc":"5551:3:11","nodeType":"YulIdentifier","src":"5551:3:11"},"nativeSrc":"5551:25:11","nodeType":"YulFunctionCall","src":"5551:25:11"},{"kind":"number","nativeSrc":"5578:32:11","nodeType":"YulLiteral","src":"5578:32:11","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"5548:2:11","nodeType":"YulIdentifier","src":"5548:2:11"},"nativeSrc":"5548:63:11","nodeType":"YulFunctionCall","src":"5548:63:11"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:11","nodeType":"YulIdentifier","src":"5535:6:11"},"nativeSrc":"5535:77:11","nodeType":"YulFunctionCall","src":"5535:77:11"},"nativeSrc":"5535:77:11","nodeType":"YulExpressionStatement","src":"5535:77:11"},{"nativeSrc":"5625:44:11","nodeType":"YulAssignment","src":"5625:44:11","value":{"arguments":[{"name":"value","nativeSrc":"5645:5:11","nodeType":"YulIdentifier","src":"5645:5:11"},{"kind":"number","nativeSrc":"5652:4:11","nodeType":"YulLiteral","src":"5652:4:11","type":"","value":"0x09"},{"kind":"number","nativeSrc":"5658:4:11","nodeType":"YulLiteral","src":"5658:4:11","type":"","value":"0x37"},{"name":"salt","nativeSrc":"5664:4:11","nodeType":"YulIdentifier","src":"5664:4:11"}],"functionName":{"name":"create2","nativeSrc":"5637:7:11","nodeType":"YulIdentifier","src":"5637:7:11"},"nativeSrc":"5637:32:11","nodeType":"YulFunctionCall","src":"5637:32:11"},"variableNames":[{"name":"instance","nativeSrc":"5625:8:11","nodeType":"YulIdentifier","src":"5625:8:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1429,"isOffset":false,"isSlot":false,"src":"5353:14:11","valueSize":1},{"declaration":1429,"isOffset":false,"isSlot":false,"src":"5561:14:11","valueSize":1},{"declaration":1436,"isOffset":false,"isSlot":false,"src":"5625:8:11","valueSize":1},{"declaration":1431,"isOffset":false,"isSlot":false,"src":"5664:4:11","valueSize":1},{"declaration":1433,"isOffset":false,"isSlot":false,"src":"5645:5:11","valueSize":1}],"flags":["memory-safe"],"id":1458,"nodeType":"InlineAssembly","src":"5094:585:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"5692:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5712:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5704:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"5704:7:11","typeDescriptions":{}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5692:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"IfStatement","src":"5688:85:11","trueBody":{"id":1470,"nodeType":"Block","src":"5716:57:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1465,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5737:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5744:16:11","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"5737:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1469,"nodeType":"RevertStatement","src":"5730:32:11"}]}}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"4050:750:11","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":1473,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"4814:18:11","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"implementation","nameLocation":"4850:14:11","nodeType":"VariableDeclaration","scope":1473,"src":"4842:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"salt","nameLocation":"4882:4:11","nodeType":"VariableDeclaration","scope":1473,"src":"4874:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4874:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"value","nameLocation":"4904:5:11","nodeType":"VariableDeclaration","scope":1473,"src":"4896:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:83:11"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"instance","nameLocation":"4942:8:11","nodeType":"VariableDeclaration","scope":1473,"src":"4934:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4933:18:11"},"scope":1740,"src":"4805:974:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1486,"nodeType":"Block","src":"6054:537:11","statements":[{"AST":{"nativeSrc":"6089:496:11","nodeType":"YulBlock","src":"6089:496:11","statements":[{"nativeSrc":"6103:22:11","nodeType":"YulVariableDeclaration","src":"6103:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"6120:4:11","nodeType":"YulLiteral","src":"6120:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"6114:5:11","nodeType":"YulIdentifier","src":"6114:5:11"},"nativeSrc":"6114:11:11","nodeType":"YulFunctionCall","src":"6114:11:11"},"variables":[{"name":"ptr","nativeSrc":"6107:3:11","nodeType":"YulTypedName","src":"6107:3:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6149:3:11","nodeType":"YulIdentifier","src":"6149:3:11"},{"kind":"number","nativeSrc":"6154:4:11","nodeType":"YulLiteral","src":"6154:4:11","type":"","value":"0x38"}],"functionName":{"name":"add","nativeSrc":"6145:3:11","nodeType":"YulIdentifier","src":"6145:3:11"},"nativeSrc":"6145:14:11","nodeType":"YulFunctionCall","src":"6145:14:11"},{"name":"deployer","nativeSrc":"6161:8:11","nodeType":"YulIdentifier","src":"6161:8:11"}],"functionName":{"name":"mstore","nativeSrc":"6138:6:11","nodeType":"YulIdentifier","src":"6138:6:11"},"nativeSrc":"6138:32:11","nodeType":"YulFunctionCall","src":"6138:32:11"},"nativeSrc":"6138:32:11","nodeType":"YulExpressionStatement","src":"6138:32:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6194:3:11","nodeType":"YulIdentifier","src":"6194:3:11"},{"kind":"number","nativeSrc":"6199:4:11","nodeType":"YulLiteral","src":"6199:4:11","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"6190:3:11","nodeType":"YulIdentifier","src":"6190:3:11"},"nativeSrc":"6190:14:11","nodeType":"YulFunctionCall","src":"6190:14:11"},{"kind":"number","nativeSrc":"6206:34:11","nodeType":"YulLiteral","src":"6206:34:11","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nativeSrc":"6183:6:11","nodeType":"YulIdentifier","src":"6183:6:11"},"nativeSrc":"6183:58:11","nodeType":"YulFunctionCall","src":"6183:58:11"},"nativeSrc":"6183:58:11","nodeType":"YulExpressionStatement","src":"6183:58:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6265:3:11","nodeType":"YulIdentifier","src":"6265:3:11"},{"kind":"number","nativeSrc":"6270:4:11","nodeType":"YulLiteral","src":"6270:4:11","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"6261:3:11","nodeType":"YulIdentifier","src":"6261:3:11"},"nativeSrc":"6261:14:11","nodeType":"YulFunctionCall","src":"6261:14:11"},{"name":"implementation","nativeSrc":"6277:14:11","nodeType":"YulIdentifier","src":"6277:14:11"}],"functionName":{"name":"mstore","nativeSrc":"6254:6:11","nodeType":"YulIdentifier","src":"6254:6:11"},"nativeSrc":"6254:38:11","nodeType":"YulFunctionCall","src":"6254:38:11"},"nativeSrc":"6254:38:11","nodeType":"YulExpressionStatement","src":"6254:38:11"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"6312:3:11","nodeType":"YulIdentifier","src":"6312:3:11"},{"kind":"number","nativeSrc":"6317:42:11","nodeType":"YulLiteral","src":"6317:42:11","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nativeSrc":"6305:6:11","nodeType":"YulIdentifier","src":"6305:6:11"},"nativeSrc":"6305:55:11","nodeType":"YulFunctionCall","src":"6305:55:11"},"nativeSrc":"6305:55:11","nodeType":"YulExpressionStatement","src":"6305:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6384:3:11","nodeType":"YulIdentifier","src":"6384:3:11"},{"kind":"number","nativeSrc":"6389:4:11","nodeType":"YulLiteral","src":"6389:4:11","type":"","value":"0x58"}],"functionName":{"name":"add","nativeSrc":"6380:3:11","nodeType":"YulIdentifier","src":"6380:3:11"},"nativeSrc":"6380:14:11","nodeType":"YulFunctionCall","src":"6380:14:11"},{"name":"salt","nativeSrc":"6396:4:11","nodeType":"YulIdentifier","src":"6396:4:11"}],"functionName":{"name":"mstore","nativeSrc":"6373:6:11","nodeType":"YulIdentifier","src":"6373:6:11"},"nativeSrc":"6373:28:11","nodeType":"YulFunctionCall","src":"6373:28:11"},"nativeSrc":"6373:28:11","nodeType":"YulExpressionStatement","src":"6373:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6425:3:11","nodeType":"YulIdentifier","src":"6425:3:11"},{"kind":"number","nativeSrc":"6430:4:11","nodeType":"YulLiteral","src":"6430:4:11","type":"","value":"0x78"}],"functionName":{"name":"add","nativeSrc":"6421:3:11","nodeType":"YulIdentifier","src":"6421:3:11"},"nativeSrc":"6421:14:11","nodeType":"YulFunctionCall","src":"6421:14:11"},{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6451:3:11","nodeType":"YulIdentifier","src":"6451:3:11"},{"kind":"number","nativeSrc":"6456:4:11","nodeType":"YulLiteral","src":"6456:4:11","type":"","value":"0x0c"}],"functionName":{"name":"add","nativeSrc":"6447:3:11","nodeType":"YulIdentifier","src":"6447:3:11"},"nativeSrc":"6447:14:11","nodeType":"YulFunctionCall","src":"6447:14:11"},{"kind":"number","nativeSrc":"6463:4:11","nodeType":"YulLiteral","src":"6463:4:11","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"6437:9:11","nodeType":"YulIdentifier","src":"6437:9:11"},"nativeSrc":"6437:31:11","nodeType":"YulFunctionCall","src":"6437:31:11"}],"functionName":{"name":"mstore","nativeSrc":"6414:6:11","nodeType":"YulIdentifier","src":"6414:6:11"},"nativeSrc":"6414:55:11","nodeType":"YulFunctionCall","src":"6414:55:11"},"nativeSrc":"6414:55:11","nodeType":"YulExpressionStatement","src":"6414:55:11"},{"nativeSrc":"6482:93:11","nodeType":"YulAssignment","src":"6482:93:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6513:3:11","nodeType":"YulIdentifier","src":"6513:3:11"},{"kind":"number","nativeSrc":"6518:4:11","nodeType":"YulLiteral","src":"6518:4:11","type":"","value":"0x43"}],"functionName":{"name":"add","nativeSrc":"6509:3:11","nodeType":"YulIdentifier","src":"6509:3:11"},"nativeSrc":"6509:14:11","nodeType":"YulFunctionCall","src":"6509:14:11"},{"kind":"number","nativeSrc":"6525:4:11","nodeType":"YulLiteral","src":"6525:4:11","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nativeSrc":"6499:9:11","nodeType":"YulIdentifier","src":"6499:9:11"},"nativeSrc":"6499:31:11","nodeType":"YulFunctionCall","src":"6499:31:11"},{"kind":"number","nativeSrc":"6532:42:11","nodeType":"YulLiteral","src":"6532:42:11","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6495:3:11","nodeType":"YulIdentifier","src":"6495:3:11"},"nativeSrc":"6495:80:11","nodeType":"YulFunctionCall","src":"6495:80:11"},"variableNames":[{"name":"predicted","nativeSrc":"6482:9:11","nodeType":"YulIdentifier","src":"6482:9:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1480,"isOffset":false,"isSlot":false,"src":"6161:8:11","valueSize":1},{"declaration":1476,"isOffset":false,"isSlot":false,"src":"6277:14:11","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"6482:9:11","valueSize":1},{"declaration":1478,"isOffset":false,"isSlot":false,"src":"6396:4:11","valueSize":1}],"flags":["memory-safe"],"id":1485,"nodeType":"InlineAssembly","src":"6064:521:11"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"5785:99:11","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"5898:27:11","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"implementation","nameLocation":"5943:14:11","nodeType":"VariableDeclaration","scope":1487,"src":"5935:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"5935:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"salt","nameLocation":"5975:4:11","nodeType":"VariableDeclaration","scope":1487,"src":"5967:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"deployer","nameLocation":"5997:8:11","nodeType":"VariableDeclaration","scope":1487,"src":"5989:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1479,"name":"address","nodeType":"ElementaryTypeName","src":"5989:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5925:86:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"predicted","nameLocation":"6043:9:11","nodeType":"VariableDeclaration","scope":1487,"src":"6035:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6034:19:11"},"scope":1740,"src":"5889:702:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1506,"nodeType":"Block","src":"6840:88:11","statements":[{"expression":{"arguments":[{"id":1498,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"6885:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6901:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1502,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6915:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6907:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"6907:7:11","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1497,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[1487,1507],"referencedDeclaration":1487,"src":"6857:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1496,"id":1505,"nodeType":"Return","src":"6850:71:11"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"6597:99:11","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"6710:27:11","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"implementation","nameLocation":"6755:14:11","nodeType":"VariableDeclaration","scope":1507,"src":"6747:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"salt","nameLocation":"6787:4:11","nodeType":"VariableDeclaration","scope":1507,"src":"6779:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6779:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6737:60:11"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"predicted","nameLocation":"6829:9:11","nodeType":"VariableDeclaration","scope":1507,"src":"6821:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6820:19:11"},"scope":1740,"src":"6701:227:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"7769:71:11","statements":[{"expression":{"arguments":[{"id":1518,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"7809:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"name":"cloneWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[1524,1578],"referencedDeclaration":1578,"src":"7786:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (address)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1516,"id":1522,"nodeType":"Return","src":"7779:54:11"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"6934:719:11","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"7667:22:11","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"implementation","nameLocation":"7698:14:11","nodeType":"VariableDeclaration","scope":1524,"src":"7690:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"7690:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"args","nameLocation":"7727:4:11","nodeType":"VariableDeclaration","scope":1524,"src":"7714:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1511,"name":"bytes","nodeType":"ElementaryTypeName","src":"7714:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7689:43:11"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"instance","nameLocation":"7759:8:11","nodeType":"VariableDeclaration","scope":1524,"src":"7751:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"7751:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7750:18:11"},"scope":1740,"src":"7658:182:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"8763:437:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8785:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8777:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"8777:7:11","typeDescriptions":{}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8777:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8791:7:11","memberName":"balance","nodeType":"MemberAccess","src":"8777:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8801:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8777:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"8773:123:11","trueBody":{"id":1554,"nodeType":"Block","src":"8808:88:11","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1548,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8864:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8856:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:11","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8856:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8870:7:11","memberName":"balance","nodeType":"MemberAccess","src":"8856:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"8879:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1543,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"8829:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8836:19:11","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"8829:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1553,"nodeType":"RevertStatement","src":"8822:63:11"}]}},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"bytecode","nameLocation":"8918:8:11","nodeType":"VariableDeclaration","scope":1577,"src":"8905:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1556,"name":"bytes","nodeType":"ElementaryTypeName","src":"8905:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1562,"initialValue":{"arguments":[{"id":1559,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"8957:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1560,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"8973:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1558,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"8929:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8905:73:11"},{"AST":{"nativeSrc":"9013:87:11","nodeType":"YulBlock","src":"9013:87:11","statements":[{"nativeSrc":"9027:63:11","nodeType":"YulAssignment","src":"9027:63:11","value":{"arguments":[{"name":"value","nativeSrc":"9046:5:11","nodeType":"YulIdentifier","src":"9046:5:11"},{"arguments":[{"name":"bytecode","nativeSrc":"9057:8:11","nodeType":"YulIdentifier","src":"9057:8:11"},{"kind":"number","nativeSrc":"9067:4:11","nodeType":"YulLiteral","src":"9067:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9053:3:11","nodeType":"YulIdentifier","src":"9053:3:11"},"nativeSrc":"9053:19:11","nodeType":"YulFunctionCall","src":"9053:19:11"},{"arguments":[{"name":"bytecode","nativeSrc":"9080:8:11","nodeType":"YulIdentifier","src":"9080:8:11"}],"functionName":{"name":"mload","nativeSrc":"9074:5:11","nodeType":"YulIdentifier","src":"9074:5:11"},"nativeSrc":"9074:15:11","nodeType":"YulFunctionCall","src":"9074:15:11"}],"functionName":{"name":"create","nativeSrc":"9039:6:11","nodeType":"YulIdentifier","src":"9039:6:11"},"nativeSrc":"9039:51:11","nodeType":"YulFunctionCall","src":"9039:51:11"},"variableNames":[{"name":"instance","nativeSrc":"9027:8:11","nodeType":"YulIdentifier","src":"9027:8:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"9057:8:11","valueSize":1},{"declaration":1557,"isOffset":false,"isSlot":false,"src":"9080:8:11","valueSize":1},{"declaration":1534,"isOffset":false,"isSlot":false,"src":"9027:8:11","valueSize":1},{"declaration":1531,"isOffset":false,"isSlot":false,"src":"9046:5:11","valueSize":1}],"flags":["memory-safe"],"id":1563,"nodeType":"InlineAssembly","src":"8988:112:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"9113:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9133:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9125:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"9125:7:11","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9125:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9113:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"IfStatement","src":"9109:85:11","trueBody":{"id":1575,"nodeType":"Block","src":"9137:57:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1570,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"9158:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:16:11","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"9158:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9158:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1574,"nodeType":"RevertStatement","src":"9151:32:11"}]}}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"7846:756:11","text":" @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"8616:22:11","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"implementation","nameLocation":"8656:14:11","nodeType":"VariableDeclaration","scope":1578,"src":"8648:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"args","nameLocation":"8693:4:11","nodeType":"VariableDeclaration","scope":1578,"src":"8680:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1528,"name":"bytes","nodeType":"ElementaryTypeName","src":"8680:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"8715:5:11","nodeType":"VariableDeclaration","scope":1578,"src":"8707:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8638:88:11"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"instance","nameLocation":"8753:8:11","nodeType":"VariableDeclaration","scope":1578,"src":"8745:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"8745:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8744:18:11"},"scope":1740,"src":"8607:593:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1597,"nodeType":"Block","src":"10279:90:11","statements":[{"expression":{"arguments":[{"id":1591,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"10332:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1592,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"10348:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1593,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"10354:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1590,"name":"cloneDeterministicWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[1598,1627],"referencedDeclaration":1627,"src":"10296:35:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,uint256) returns (address)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1589,"id":1596,"nodeType":"Return","src":"10289:73:11"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"9206:900:11","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":1598,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"10120:35:11","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"implementation","nameLocation":"10173:14:11","nodeType":"VariableDeclaration","scope":1598,"src":"10165:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"10165:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"args","nameLocation":"10210:4:11","nodeType":"VariableDeclaration","scope":1598,"src":"10197:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"10197:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"salt","nameLocation":"10232:4:11","nodeType":"VariableDeclaration","scope":1598,"src":"10224:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10224:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10155:87:11"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"instance","nameLocation":"10269:8:11","nodeType":"VariableDeclaration","scope":1598,"src":"10261:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"10261:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10260:18:11"},"scope":1740,"src":"10111:258:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"11361:144:11","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"bytecode","nameLocation":"11384:8:11","nodeType":"VariableDeclaration","scope":1626,"src":"11371:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"11371:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"11423:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11439:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1614,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"11395:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11371:73:11"},{"expression":{"arguments":[{"id":1621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11476:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1622,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11483:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1623,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11489:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1619,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$2034_$","typeString":"type(library Create2)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11469:6:11","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"11461:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1611,"id":1625,"nodeType":"Return","src":"11454:44:11"}]},"documentation":{"id":1599,"nodeType":"StructuredDocumentation","src":"10375:790:11","text":" @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"11179:35:11","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"implementation","nameLocation":"11232:14:11","nodeType":"VariableDeclaration","scope":1627,"src":"11224:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"11224:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"args","nameLocation":"11269:4:11","nodeType":"VariableDeclaration","scope":1627,"src":"11256:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"11256:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"salt","nameLocation":"11291:4:11","nodeType":"VariableDeclaration","scope":1627,"src":"11283:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11283:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"value","nameLocation":"11313:5:11","nodeType":"VariableDeclaration","scope":1627,"src":"11305:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11305:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11214:110:11"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"instance","nameLocation":"11351:8:11","nodeType":"VariableDeclaration","scope":1627,"src":"11343:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"11343:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11342:18:11"},"scope":1740,"src":"11170:335:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"11841:166:11","statements":[{"assignments":[1642],"declarations":[{"constant":false,"id":1642,"mutability":"mutable","name":"bytecode","nameLocation":"11864:8:11","nodeType":"VariableDeclaration","scope":1657,"src":"11851:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"11851:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1647,"initialValue":{"arguments":[{"id":1644,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"11903:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11919:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1643,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"11875:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11875:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11851:73:11"},{"expression":{"arguments":[{"id":1650,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"11964:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1652,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"11980:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1651,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11970:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11970:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1654,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11991:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1648,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11941:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$2034_$","typeString":"type(library Create2)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11949:14:11","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"11941:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11941:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1640,"id":1656,"nodeType":"Return","src":"11934:66:11"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"11511:116:11","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"11641:44:11","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"implementation","nameLocation":"11703:14:11","nodeType":"VariableDeclaration","scope":1658,"src":"11695:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"11695:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"args","nameLocation":"11740:4:11","nodeType":"VariableDeclaration","scope":1658,"src":"11727:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"11727:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"salt","nameLocation":"11762:4:11","nodeType":"VariableDeclaration","scope":1658,"src":"11754:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11754:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"deployer","nameLocation":"11784:8:11","nodeType":"VariableDeclaration","scope":1658,"src":"11776:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"11776:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11685:113:11"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"predicted","nameLocation":"11830:9:11","nodeType":"VariableDeclaration","scope":1658,"src":"11822:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"11822:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11821:19:11"},"scope":1740,"src":"11632:375:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"12317:111:11","statements":[{"expression":{"arguments":[{"id":1671,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"12379:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1672,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"12395:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1673,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"12401:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1676,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12415:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1740","typeString":"library Clones"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"12407:7:11","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12407:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1670,"name":"predictDeterministicAddressWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[1658,1681],"referencedDeclaration":1658,"src":"12334:44:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,address) pure returns (address)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12334:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1669,"id":1679,"nodeType":"Return","src":"12327:94:11"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"12013:116:11","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"12143:44:11","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"implementation","nameLocation":"12205:14:11","nodeType":"VariableDeclaration","scope":1681,"src":"12197:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"12197:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"args","nameLocation":"12242:4:11","nodeType":"VariableDeclaration","scope":1681,"src":"12229:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"12229:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"salt","nameLocation":"12264:4:11","nodeType":"VariableDeclaration","scope":1681,"src":"12256:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12256:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12187:87:11"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"predicted","nameLocation":"12306:9:11","nodeType":"VariableDeclaration","scope":1681,"src":"12298:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"12298:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12297:19:11"},"scope":1740,"src":"12134:294:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1703,"nodeType":"Block","src":"13121:246:11","statements":[{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"result","nameLocation":"13144:6:11","nodeType":"VariableDeclaration","scope":1703,"src":"13131:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"13131:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1699,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1693,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"13163:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13172:4:11","memberName":"code","nodeType":"MemberAccess","src":"13163:13:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13177:6:11","memberName":"length","nodeType":"MemberAccess","src":"13163:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13186:2:11","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"13163:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13153:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1691,"name":"bytes","nodeType":"ElementaryTypeName","src":"13157:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13131:58:11"},{"AST":{"nativeSrc":"13257:81:11","nodeType":"YulBlock","src":"13257:81:11","statements":[{"expression":{"arguments":[{"name":"instance","nativeSrc":"13283:8:11","nodeType":"YulIdentifier","src":"13283:8:11"},{"arguments":[{"name":"result","nativeSrc":"13297:6:11","nodeType":"YulIdentifier","src":"13297:6:11"},{"kind":"number","nativeSrc":"13305:2:11","nodeType":"YulLiteral","src":"13305:2:11","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13293:3:11","nodeType":"YulIdentifier","src":"13293:3:11"},"nativeSrc":"13293:15:11","nodeType":"YulFunctionCall","src":"13293:15:11"},{"kind":"number","nativeSrc":"13310:2:11","nodeType":"YulLiteral","src":"13310:2:11","type":"","value":"45"},{"arguments":[{"name":"result","nativeSrc":"13320:6:11","nodeType":"YulIdentifier","src":"13320:6:11"}],"functionName":{"name":"mload","nativeSrc":"13314:5:11","nodeType":"YulIdentifier","src":"13314:5:11"},"nativeSrc":"13314:13:11","nodeType":"YulFunctionCall","src":"13314:13:11"}],"functionName":{"name":"extcodecopy","nativeSrc":"13271:11:11","nodeType":"YulIdentifier","src":"13271:11:11"},"nativeSrc":"13271:57:11","nodeType":"YulFunctionCall","src":"13271:57:11"},"nativeSrc":"13271:57:11","nodeType":"YulExpressionStatement","src":"13271:57:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1684,"isOffset":false,"isSlot":false,"src":"13283:8:11","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"13297:6:11","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"13320:6:11","valueSize":1}],"flags":["memory-safe"],"id":1700,"nodeType":"InlineAssembly","src":"13232:106:11"},{"expression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"13354:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1688,"id":1702,"nodeType":"Return","src":"13347:13:11"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"12434:603:11","text":" @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"fetchCloneArgs","nameLocation":"13051:14:11","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"instance","nameLocation":"13074:8:11","nodeType":"VariableDeclaration","scope":1704,"src":"13066:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1683,"name":"address","nodeType":"ElementaryTypeName","src":"13066:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13065:18:11"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"13107:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"13107:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13106:14:11"},"scope":1740,"src":"13042:325:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"14156:362:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1714,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"14170:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14175:6:11","memberName":"length","nodeType":"MemberAccess","src":"14170:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234353331","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14184:5:11","typeDescriptions":{"typeIdentifier":"t_rational_24531_by_1","typeString":"int_const 24531"},"value":"24531"},"src":"14170:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"14166:55:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1718,"name":"CloneArgumentsTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"14198:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14198:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1720,"nodeType":"RevertStatement","src":"14191:30:11"}},{"expression":{"arguments":[{"hexValue":"61","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14284:7:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1727,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"14316:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14321:6:11","memberName":"length","nodeType":"MemberAccess","src":"14316:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3435","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14330:2:11","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"14316:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1725,"name":"uint16","nodeType":"ElementaryTypeName","src":"14309:6:11","typeDescriptions":{}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"3d81600a3d39f3363d3d373d3d3d363d73","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14351:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""}},{"id":1733,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"14408:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14440:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"id":1735,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"14493:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1722,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14250:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14254:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"14250:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:261:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1713,"id":1737,"nodeType":"Return","src":"14231:280:11"}]},"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"13373:640:11","text":" @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"_cloneCodeWithImmutableArgs","nameLocation":"14027:27:11","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"implementation","nameLocation":"14072:14:11","nodeType":"VariableDeclaration","scope":1739,"src":"14064:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"14064:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"args","nameLocation":"14109:4:11","nodeType":"VariableDeclaration","scope":1739,"src":"14096:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1708,"name":"bytes","nodeType":"ElementaryTypeName","src":"14096:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14054:65:11"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"14142:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1711,"name":"bytes","nodeType":"ElementaryTypeName","src":"14142:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14141:14:11"},"scope":1740,"src":"14018:500:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1741,"src":"817:13703:11","usedErrors":[1350],"usedEvents":[]}],"src":"100:14421:11"},"id":11},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1818]},"id":1819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1742,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"133:71:12","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1818,"linearizedBaseContracts":[1818],"name":"IERC20","nameLocation":"215:6:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"228:158:12","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1752,"name":"Transfer","nameLocation":"397:8:12","nodeType":"EventDefinition","parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:12","nodeType":"VariableDeclaration","scope":1752,"src":"406:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:12","nodeType":"VariableDeclaration","scope":1752,"src":"428:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1750,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:12","nodeType":"VariableDeclaration","scope":1752,"src":"448:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:12"},"src":"391:72:12"},{"anonymous":false,"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"469:148:12","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1761,"name":"Approval","nameLocation":"628:8:12","nodeType":"EventDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:12","nodeType":"VariableDeclaration","scope":1761,"src":"637:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:12","nodeType":"VariableDeclaration","scope":1761,"src":"660:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1759,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:12","nodeType":"VariableDeclaration","scope":1761,"src":"685:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:12"},"src":"622:78:12"},{"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"706:65:12","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1767,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:12","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[],"src":"796:2:12"},"returnParameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"822:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:12"},"scope":1818,"src":"776:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"837:71:12","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1775,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:12","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"account","nameLocation":"940:7:12","nodeType":"VariableDeclaration","scope":1775,"src":"932:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:12"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"972:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:12"},"scope":1818,"src":"913:68:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"987:213:12","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1785,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:12","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"to","nameLocation":"1231:2:12","nodeType":"VariableDeclaration","scope":1785,"src":"1223:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"value","nameLocation":"1243:5:12","nodeType":"VariableDeclaration","scope":1785,"src":"1235:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:12"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1782,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:12"},"scope":1818,"src":"1205:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"1280:264:12","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:12","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"owner","nameLocation":"1576:5:12","nodeType":"VariableDeclaration","scope":1795,"src":"1568:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"spender","nameLocation":"1591:7:12","nodeType":"VariableDeclaration","scope":1795,"src":"1583:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:12"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"1623:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:12"},"scope":1818,"src":"1549:83:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"1638:667:12","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1805,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:12","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"spender","nameLocation":"2335:7:12","nodeType":"VariableDeclaration","scope":1805,"src":"2327:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"value","nameLocation":"2352:5:12","nodeType":"VariableDeclaration","scope":1805,"src":"2344:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:12"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"2377:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1802,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:12"},"scope":1818,"src":"2310:73:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"2389:297:12","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1817,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:12","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"from","nameLocation":"2721:4:12","nodeType":"VariableDeclaration","scope":1817,"src":"2713:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"to","nameLocation":"2735:2:12","nodeType":"VariableDeclaration","scope":1817,"src":"2727:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"value","nameLocation":"2747:5:12","nodeType":"VariableDeclaration","scope":1817,"src":"2739:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:12"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1817,"src":"2772:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1814,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:12"},"scope":1818,"src":"2691:87:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1819,"src":"205:2575:12","usedErrors":[],"usedEvents":[1752,1761]}],"src":"106:2675:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2068],"IERC721":[1935]},"id":1936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1820,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1936,"sourceUnit":2069,"src":"134:62:13","symbolAliases":[{"foreign":{"id":1821,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"142:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1824,"name":"IERC165","nameLocations":["288:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2068,"src":"288:7:13"},"id":1825,"nodeType":"InheritanceSpecifier","src":"288:7:13"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"198:68:13","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1935,"linearizedBaseContracts":[1935,2068],"name":"IERC721","nameLocation":"277:7:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"302:88:13","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1834,"name":"Transfer","nameLocation":"401:8:13","nodeType":"EventDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:13","nodeType":"VariableDeclaration","scope":1834,"src":"410:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:13","nodeType":"VariableDeclaration","scope":1834,"src":"432:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:13","nodeType":"VariableDeclaration","scope":1834,"src":"452:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:13"},"src":"395:82:13"},{"anonymous":false,"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"483:94:13","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1843,"name":"Approval","nameLocation":"588:8:13","nodeType":"EventDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:13","nodeType":"VariableDeclaration","scope":1843,"src":"597:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:13","nodeType":"VariableDeclaration","scope":1843,"src":"620:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1841,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:13","nodeType":"VariableDeclaration","scope":1843,"src":"646:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:13"},"src":"582:89:13"},{"anonymous":false,"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"677:117:13","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1852,"name":"ApprovalForAll","nameLocation":"805:14:13","nodeType":"EventDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:13","nodeType":"VariableDeclaration","scope":1852,"src":"820:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:13","nodeType":"VariableDeclaration","scope":1852,"src":"843:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:13","nodeType":"VariableDeclaration","scope":1852,"src":"869:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1849,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:13"},"src":"799:85:13"},{"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"890:76:13","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1860,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:13","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"owner","nameLocation":"998:5:13","nodeType":"VariableDeclaration","scope":1860,"src":"990:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:13"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"balance","nameLocation":"1036:7:13","nodeType":"VariableDeclaration","scope":1860,"src":"1028:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:13"},"scope":1935,"src":"971:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"1051:131:13","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1868,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:13","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:13","nodeType":"VariableDeclaration","scope":1868,"src":"1204:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:13"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"owner","nameLocation":"1252:5:13","nodeType":"VariableDeclaration","scope":1868,"src":"1244:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:13"},"scope":1935,"src":"1187:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"1265:565:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1880,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:13","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"from","nameLocation":"1869:4:13","nodeType":"VariableDeclaration","scope":1880,"src":"1861:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"to","nameLocation":"1883:2:13","nodeType":"VariableDeclaration","scope":1880,"src":"1875:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:13","nodeType":"VariableDeclaration","scope":1880,"src":"1887:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"data","nameLocation":"1919:4:13","nodeType":"VariableDeclaration","scope":1880,"src":"1904:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:13"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"1933:0:13"},"scope":1935,"src":"1835:99:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"1940:706:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1890,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:13","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"from","nameLocation":"2685:4:13","nodeType":"VariableDeclaration","scope":1890,"src":"2677:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"to","nameLocation":"2699:2:13","nodeType":"VariableDeclaration","scope":1890,"src":"2691:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:13","nodeType":"VariableDeclaration","scope":1890,"src":"2703:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:13"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"2728:0:13"},"scope":1935,"src":"2651:78:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"2735:733:13","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1900,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:13","nodeType":"FunctionDefinition","parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"from","nameLocation":"3503:4:13","nodeType":"VariableDeclaration","scope":1900,"src":"3495:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"to","nameLocation":"3517:2:13","nodeType":"VariableDeclaration","scope":1900,"src":"3509:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:13","nodeType":"VariableDeclaration","scope":1900,"src":"3521:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:13"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"3546:0:13"},"scope":1935,"src":"3473:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"3553:452:13","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1908,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:13","nodeType":"FunctionDefinition","parameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"to","nameLocation":"4035:2:13","nodeType":"VariableDeclaration","scope":1908,"src":"4027:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:13","nodeType":"VariableDeclaration","scope":1908,"src":"4039:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:13"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"4064:0:13"},"scope":1935,"src":"4010:55:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"4071:315:13","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1916,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:13","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"operator","nameLocation":"4426:8:13","nodeType":"VariableDeclaration","scope":1916,"src":"4418:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"approved","nameLocation":"4441:8:13","nodeType":"VariableDeclaration","scope":1916,"src":"4436:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1912,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:13"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"4459:0:13"},"scope":1935,"src":"4391:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"4466:139:13","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1924,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:13","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:13","nodeType":"VariableDeclaration","scope":1924,"src":"4631:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:13"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"operator","nameLocation":"4679:8:13","nodeType":"VariableDeclaration","scope":1924,"src":"4671:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:13"},"scope":1935,"src":"4610:79:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"4695:138:13","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1934,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:13","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"owner","nameLocation":"4872:5:13","nodeType":"VariableDeclaration","scope":1934,"src":"4864:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"operator","nameLocation":"4887:8:13","nodeType":"VariableDeclaration","scope":1934,"src":"4879:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:13"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1934,"src":"4920:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:13"},"scope":1935,"src":"4838:88:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1936,"src":"267:4661:13","usedErrors":[],"usedEvents":[1834,1843,1852]}],"src":"108:4821:13"},"id":13},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[2034],"Errors":[2056]},"id":2035,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1937,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":1939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2035,"sourceUnit":2057,"src":"127:36:14","symbolAliases":[{"foreign":{"id":1938,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"135:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"165:367:14","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":2034,"linearizedBaseContracts":[2034],"name":"Create2","nameLocation":"541:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"555:50:14","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":1943,"name":"Create2EmptyBytecode","nameLocation":"616:20:14","nodeType":"ErrorDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[],"src":"636:2:14"},"src":"610:29:14"},{"body":{"id":1998,"nodeType":"Block","src":"1311:746:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1957,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:14","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:14","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1960,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1349:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"1321:125:14","trueBody":{"id":1973,"nodeType":"Block","src":"1357:89:14","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1967,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:14","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:14","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1970,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"1428:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1962,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1378:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:14","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"1378:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1972,"nodeType":"RevertStatement","src":"1371:64:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1975,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1459:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:14","memberName":"length","nodeType":"MemberAccess","src":"1459:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1983,"nodeType":"IfStatement","src":"1455:80:14","trueBody":{"id":1982,"nodeType":"Block","src":"1481:54:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1979,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1502:20:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1981,"nodeType":"RevertStatement","src":"1495:29:14"}]}},{"AST":{"nativeSrc":"1569:392:14","nodeType":"YulBlock","src":"1569:392:14","statements":[{"nativeSrc":"1583:67:14","nodeType":"YulAssignment","src":"1583:67:14","value":{"arguments":[{"name":"amount","nativeSrc":"1599:6:14","nodeType":"YulIdentifier","src":"1599:6:14"},{"arguments":[{"name":"bytecode","nativeSrc":"1611:8:14","nodeType":"YulIdentifier","src":"1611:8:14"},{"kind":"number","nativeSrc":"1621:4:14","nodeType":"YulLiteral","src":"1621:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:14","nodeType":"YulIdentifier","src":"1607:3:14"},"nativeSrc":"1607:19:14","nodeType":"YulFunctionCall","src":"1607:19:14"},{"arguments":[{"name":"bytecode","nativeSrc":"1634:8:14","nodeType":"YulIdentifier","src":"1634:8:14"}],"functionName":{"name":"mload","nativeSrc":"1628:5:14","nodeType":"YulIdentifier","src":"1628:5:14"},"nativeSrc":"1628:15:14","nodeType":"YulFunctionCall","src":"1628:15:14"},{"name":"salt","nativeSrc":"1645:4:14","nodeType":"YulIdentifier","src":"1645:4:14"}],"functionName":{"name":"create2","nativeSrc":"1591:7:14","nodeType":"YulIdentifier","src":"1591:7:14"},"nativeSrc":"1591:59:14","nodeType":"YulFunctionCall","src":"1591:59:14"},"variableNames":[{"name":"addr","nativeSrc":"1583:4:14","nodeType":"YulIdentifier","src":"1583:4:14"}]},{"body":{"nativeSrc":"1800:151:14","nodeType":"YulBlock","src":"1800:151:14","statements":[{"nativeSrc":"1818:20:14","nodeType":"YulVariableDeclaration","src":"1818:20:14","value":{"arguments":[{"kind":"number","nativeSrc":"1833:4:14","nodeType":"YulLiteral","src":"1833:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1827:5:14","nodeType":"YulIdentifier","src":"1827:5:14"},"nativeSrc":"1827:11:14","nodeType":"YulFunctionCall","src":"1827:11:14"},"variables":[{"name":"p","nativeSrc":"1822:1:14","nodeType":"YulTypedName","src":"1822:1:14","type":""}]},{"expression":{"arguments":[{"name":"p","nativeSrc":"1870:1:14","nodeType":"YulIdentifier","src":"1870:1:14"},{"kind":"number","nativeSrc":"1873:1:14","nodeType":"YulLiteral","src":"1873:1:14","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1876:14:14","nodeType":"YulIdentifier","src":"1876:14:14"},"nativeSrc":"1876:16:14","nodeType":"YulFunctionCall","src":"1876:16:14"}],"functionName":{"name":"returndatacopy","nativeSrc":"1855:14:14","nodeType":"YulIdentifier","src":"1855:14:14"},"nativeSrc":"1855:38:14","nodeType":"YulFunctionCall","src":"1855:38:14"},"nativeSrc":"1855:38:14","nodeType":"YulExpressionStatement","src":"1855:38:14"},{"expression":{"arguments":[{"name":"p","nativeSrc":"1917:1:14","nodeType":"YulIdentifier","src":"1917:1:14"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1920:14:14","nodeType":"YulIdentifier","src":"1920:14:14"},"nativeSrc":"1920:16:14","nodeType":"YulFunctionCall","src":"1920:16:14"}],"functionName":{"name":"revert","nativeSrc":"1910:6:14","nodeType":"YulIdentifier","src":"1910:6:14"},"nativeSrc":"1910:27:14","nodeType":"YulFunctionCall","src":"1910:27:14"},"nativeSrc":"1910:27:14","nodeType":"YulExpressionStatement","src":"1910:27:14"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nativeSrc":"1762:4:14","nodeType":"YulIdentifier","src":"1762:4:14"}],"functionName":{"name":"iszero","nativeSrc":"1755:6:14","nodeType":"YulIdentifier","src":"1755:6:14"},"nativeSrc":"1755:12:14","nodeType":"YulFunctionCall","src":"1755:12:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1780:14:14","nodeType":"YulIdentifier","src":"1780:14:14"},"nativeSrc":"1780:16:14","nodeType":"YulFunctionCall","src":"1780:16:14"}],"functionName":{"name":"iszero","nativeSrc":"1773:6:14","nodeType":"YulIdentifier","src":"1773:6:14"},"nativeSrc":"1773:24:14","nodeType":"YulFunctionCall","src":"1773:24:14"}],"functionName":{"name":"not","nativeSrc":"1769:3:14","nodeType":"YulIdentifier","src":"1769:3:14"},"nativeSrc":"1769:29:14","nodeType":"YulFunctionCall","src":"1769:29:14"}],"functionName":{"name":"and","nativeSrc":"1751:3:14","nodeType":"YulIdentifier","src":"1751:3:14"},"nativeSrc":"1751:48:14","nodeType":"YulFunctionCall","src":"1751:48:14"},"nativeSrc":"1748:203:14","nodeType":"YulIf","src":"1748:203:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1953,"isOffset":false,"isSlot":false,"src":"1583:4:14","valueSize":1},{"declaration":1953,"isOffset":false,"isSlot":false,"src":"1762:4:14","valueSize":1},{"declaration":1946,"isOffset":false,"isSlot":false,"src":"1599:6:14","valueSize":1},{"declaration":1950,"isOffset":false,"isSlot":false,"src":"1611:8:14","valueSize":1},{"declaration":1950,"isOffset":false,"isSlot":false,"src":"1634:8:14","valueSize":1},{"declaration":1948,"isOffset":false,"isSlot":false,"src":"1645:4:14","valueSize":1}],"flags":["memory-safe"],"id":1984,"nodeType":"InlineAssembly","src":"1544:417:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:14","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1997,"nodeType":"IfStatement","src":"1970:81:14","trueBody":{"id":1996,"nodeType":"Block","src":"1994:57:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1991,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2015:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$2056_$","typeString":"type(library Errors)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:14","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"2015:23:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1995,"nodeType":"RevertStatement","src":"2008:32:14"}]}}]},"documentation":{"id":1944,"nodeType":"StructuredDocumentation","src":"645:560:14","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:14","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"amount","nameLocation":"1234:6:14","nodeType":"VariableDeclaration","scope":1999,"src":"1226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1948,"mutability":"mutable","name":"salt","nameLocation":"1250:4:14","nodeType":"VariableDeclaration","scope":1999,"src":"1242:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:14","nodeType":"VariableDeclaration","scope":1999,"src":"1256:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:14"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"addr","nameLocation":"1305:4:14","nodeType":"VariableDeclaration","scope":1999,"src":"1297:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:14"},"scope":2034,"src":"1210:847:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2018,"nodeType":"Block","src":"2353:73:14","statements":[{"expression":{"arguments":[{"id":2010,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2385:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2011,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2391:12:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2014,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$2034","typeString":"library Create2"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:14","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2009,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[2019,2033],"referencedDeclaration":2033,"src":"2370:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2008,"id":2017,"nodeType":"Return","src":"2363:56:14"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"2063:193:14","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":2019,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:14","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"salt","nameLocation":"2293:4:14","nodeType":"VariableDeclaration","scope":2019,"src":"2285:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:14","nodeType":"VariableDeclaration","scope":2019,"src":"2299:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:14"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2019,"src":"2344:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:14"},"scope":2034,"src":"2261:165:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"2784:1679:14","statements":[{"AST":{"nativeSrc":"2819:1638:14","nodeType":"YulBlock","src":"2819:1638:14","statements":[{"nativeSrc":"2833:22:14","nodeType":"YulVariableDeclaration","src":"2833:22:14","value":{"arguments":[{"kind":"number","nativeSrc":"2850:4:14","nodeType":"YulLiteral","src":"2850:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2844:5:14","nodeType":"YulIdentifier","src":"2844:5:14"},"nativeSrc":"2844:11:14","nodeType":"YulFunctionCall","src":"2844:11:14"},"variables":[{"name":"ptr","nativeSrc":"2837:3:14","nodeType":"YulTypedName","src":"2837:3:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4057:3:14","nodeType":"YulIdentifier","src":"4057:3:14"},{"kind":"number","nativeSrc":"4062:4:14","nodeType":"YulLiteral","src":"4062:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4053:3:14","nodeType":"YulIdentifier","src":"4053:3:14"},"nativeSrc":"4053:14:14","nodeType":"YulFunctionCall","src":"4053:14:14"},{"name":"bytecodeHash","nativeSrc":"4069:12:14","nodeType":"YulIdentifier","src":"4069:12:14"}],"functionName":{"name":"mstore","nativeSrc":"4046:6:14","nodeType":"YulIdentifier","src":"4046:6:14"},"nativeSrc":"4046:36:14","nodeType":"YulFunctionCall","src":"4046:36:14"},"nativeSrc":"4046:36:14","nodeType":"YulExpressionStatement","src":"4046:36:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4106:3:14","nodeType":"YulIdentifier","src":"4106:3:14"},{"kind":"number","nativeSrc":"4111:4:14","nodeType":"YulLiteral","src":"4111:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4102:3:14","nodeType":"YulIdentifier","src":"4102:3:14"},"nativeSrc":"4102:14:14","nodeType":"YulFunctionCall","src":"4102:14:14"},{"name":"salt","nativeSrc":"4118:4:14","nodeType":"YulIdentifier","src":"4118:4:14"}],"functionName":{"name":"mstore","nativeSrc":"4095:6:14","nodeType":"YulIdentifier","src":"4095:6:14"},"nativeSrc":"4095:28:14","nodeType":"YulFunctionCall","src":"4095:28:14"},"nativeSrc":"4095:28:14","nodeType":"YulExpressionStatement","src":"4095:28:14"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4143:3:14","nodeType":"YulIdentifier","src":"4143:3:14"},{"name":"deployer","nativeSrc":"4148:8:14","nodeType":"YulIdentifier","src":"4148:8:14"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:14","nodeType":"YulIdentifier","src":"4136:6:14"},"nativeSrc":"4136:21:14","nodeType":"YulFunctionCall","src":"4136:21:14"},"nativeSrc":"4136:21:14","nodeType":"YulExpressionStatement","src":"4136:21:14"},{"nativeSrc":"4219:27:14","nodeType":"YulVariableDeclaration","src":"4219:27:14","value":{"arguments":[{"name":"ptr","nativeSrc":"4236:3:14","nodeType":"YulIdentifier","src":"4236:3:14"},{"kind":"number","nativeSrc":"4241:4:14","nodeType":"YulLiteral","src":"4241:4:14","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4232:3:14","nodeType":"YulIdentifier","src":"4232:3:14"},"nativeSrc":"4232:14:14","nodeType":"YulFunctionCall","src":"4232:14:14"},"variables":[{"name":"start","nativeSrc":"4223:5:14","nodeType":"YulTypedName","src":"4223:5:14","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4345:5:14","nodeType":"YulIdentifier","src":"4345:5:14"},{"kind":"number","nativeSrc":"4352:4:14","nodeType":"YulLiteral","src":"4352:4:14","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4337:7:14","nodeType":"YulIdentifier","src":"4337:7:14"},"nativeSrc":"4337:20:14","nodeType":"YulFunctionCall","src":"4337:20:14"},"nativeSrc":"4337:20:14","nodeType":"YulExpressionStatement","src":"4337:20:14"},{"nativeSrc":"4370:77:14","nodeType":"YulAssignment","src":"4370:77:14","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"4392:5:14","nodeType":"YulIdentifier","src":"4392:5:14"},{"kind":"number","nativeSrc":"4399:2:14","nodeType":"YulLiteral","src":"4399:2:14","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4382:9:14","nodeType":"YulIdentifier","src":"4382:9:14"},"nativeSrc":"4382:20:14","nodeType":"YulFunctionCall","src":"4382:20:14"},{"kind":"number","nativeSrc":"4404:42:14","nodeType":"YulLiteral","src":"4404:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4378:3:14","nodeType":"YulIdentifier","src":"4378:3:14"},"nativeSrc":"4378:69:14","nodeType":"YulFunctionCall","src":"4378:69:14"},"variableNames":[{"name":"addr","nativeSrc":"4370:4:14","nodeType":"YulIdentifier","src":"4370:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2029,"isOffset":false,"isSlot":false,"src":"4370:4:14","valueSize":1},{"declaration":2024,"isOffset":false,"isSlot":false,"src":"4069:12:14","valueSize":1},{"declaration":2026,"isOffset":false,"isSlot":false,"src":"4148:8:14","valueSize":1},{"declaration":2022,"isOffset":false,"isSlot":false,"src":"4118:4:14","valueSize":1}],"flags":["memory-safe"],"id":2031,"nodeType":"InlineAssembly","src":"2794:1663:14"}]},"documentation":{"id":2020,"nodeType":"StructuredDocumentation","src":"2432:232:14","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:14","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"salt","nameLocation":"2701:4:14","nodeType":"VariableDeclaration","scope":2033,"src":"2693:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:14","nodeType":"VariableDeclaration","scope":2033,"src":"2707:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:14","nodeType":"VariableDeclaration","scope":2033,"src":"2729:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:14"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"addr","nameLocation":"2778:4:14","nodeType":"VariableDeclaration","scope":2033,"src":"2770:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:14"},"scope":2034,"src":"2669:1794:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2035,"src":"533:3932:14","usedErrors":[1943],"usedEvents":[]}],"src":"101:4365:14"},"id":14},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[2056]},"id":2057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2036,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"126:284:15","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":2056,"linearizedBaseContracts":[2056],"name":"Errors","nameLocation":"419:6:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"432:94:15","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":2044,"name":"InsufficientBalance","nameLocation":"537:19:15","nodeType":"ErrorDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"balance","nameLocation":"565:7:15","nodeType":"VariableDeclaration","scope":2044,"src":"557:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"needed","nameLocation":"582:6:15","nodeType":"VariableDeclaration","scope":2044,"src":"574:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:15"},"src":"531:59:15"},{"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"596:89:15","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":2047,"name":"FailedCall","nameLocation":"696:10:15","nodeType":"ErrorDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[],"src":"706:2:15"},"src":"690:19:15"},{"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"715:46:15","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":2050,"name":"FailedDeployment","nameLocation":"772:16:15","nodeType":"ErrorDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"788:2:15"},"src":"766:25:15"},{"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"797:58:15","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":2055,"name":"MissingPrecompile","nameLocation":"866:17:15","nodeType":"ErrorDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"884:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:15"},"src":"860:33:15"}],"scope":2057,"src":"411:484:15","usedErrors":[2044,2047,2050,2055],"usedEvents":[]}],"src":"100:796:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2068]},"id":2069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2058,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"142:280:16","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2068,"linearizedBaseContracts":[2068],"name":"IERC165","nameLocation":"433:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"447:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2067,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:16","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:16","nodeType":"VariableDeclaration","scope":2067,"src":"819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2061,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:16"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"862:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2064,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:16"},"scope":2068,"src":"792:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2069,"src":"423:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:756:16"},"id":16},"contracts/Auction.sol":{"ast":{"absolutePath":"contracts/Auction.sol","exportedSymbols":{"AddressUpgradeable":[1180],"AggregatorV3Interface":[45],"Auction":[2531],"ContextUpgradeable":[1231],"ERC1967UpgradeUpgradeable":[534],"IBeaconUpgradeable":[544],"IERC165":[2068],"IERC1822ProxiableUpgradeable":[209],"IERC1967Upgradeable":[199],"IERC20":[1818],"IERC721":[1935],"Initializable":[713],"OwnableUpgradeable":[178],"PriceOracle":[2956],"StorageSlotUpgradeable":[1341],"UUPSUpgradeable":[850]},"id":2532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2070,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":714,"src":"57:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":179,"src":"133:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":851,"src":"209:77:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":1936,"src":"287:58:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":1819,"src":"346:56:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/PriceOracle.sol","file":"./PriceOracle.sol","id":2076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2532,"sourceUnit":2957,"src":"403:27:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2077,"name":"Initializable","nameLocations":["452:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"452:13:17"},"id":2078,"nodeType":"InheritanceSpecifier","src":"452:13:17"},{"baseName":{"id":2079,"name":"OwnableUpgradeable","nameLocations":["467:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"467:18:17"},"id":2080,"nodeType":"InheritanceSpecifier","src":"467:18:17"},{"baseName":{"id":2081,"name":"UUPSUpgradeable","nameLocations":["487:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"487:15:17"},"id":2082,"nodeType":"InheritanceSpecifier","src":"487:15:17"}],"canonicalName":"Auction","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2531,"linearizedBaseContracts":[2531,850,534,199,209,178,1231,713],"name":"Auction","nameLocation":"441:7:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Auction.AuctionItem","id":2095,"members":[{"constant":false,"id":2084,"mutability":"mutable","name":"nftContract","nameLocation":"587:11:17","nodeType":"VariableDeclaration","scope":2095,"src":"579:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"tokenId","nameLocation":"640:7:17","nodeType":"VariableDeclaration","scope":2095,"src":"632:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"seller","nameLocation":"690:6:17","nodeType":"VariableDeclaration","scope":2095,"src":"682:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"startTime","nameLocation":"739:9:17","nodeType":"VariableDeclaration","scope":2095,"src":"731:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"endTime","nameLocation":"794:7:17","nodeType":"VariableDeclaration","scope":2095,"src":"786:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"ended","nameLocation":"846:5:17","nodeType":"VariableDeclaration","scope":2095,"src":"841:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2093,"name":"bool","nodeType":"ElementaryTypeName","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AuctionItem","nameLocation":"521:11:17","nodeType":"StructDefinition","scope":2531,"src":"514:379:17","visibility":"public"},{"canonicalName":"Auction.Bid","id":2104,"members":[{"constant":false,"id":2097,"mutability":"mutable","name":"bidder","nameLocation":"958:6:17","nodeType":"VariableDeclaration","scope":2104,"src":"950:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"950:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"token","nameLocation":"1010:5:17","nodeType":"VariableDeclaration","scope":2104,"src":"1002:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"amount","nameLocation":"1094:6:17","nodeType":"VariableDeclaration","scope":2104,"src":"1086:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2103,"mutability":"mutable","name":"timestamp","nameLocation":"1157:9:17","nodeType":"VariableDeclaration","scope":2104,"src":"1149:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bid","nameLocation":"906:3:17","nodeType":"StructDefinition","scope":2531,"src":"899:299:17","visibility":"public"},{"constant":false,"functionSelector":"d57bde79","id":2107,"mutability":"mutable","name":"highestBid","nameLocation":"1215:10:17","nodeType":"VariableDeclaration","scope":2531,"src":"1204:21:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid"},"typeName":{"id":2106,"nodeType":"UserDefinedTypeName","pathNode":{"id":2105,"name":"Bid","nameLocations":["1204:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":2104,"src":"1204:3:17"},"referencedDeclaration":2104,"src":"1204:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage_ptr","typeString":"struct Auction.Bid"}},"visibility":"public"},{"constant":false,"functionSelector":"c2c042ca","id":2110,"mutability":"mutable","name":"auctionItem","nameLocation":"1285:11:17","nodeType":"VariableDeclaration","scope":2531,"src":"1266:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem"},"typeName":{"id":2109,"nodeType":"UserDefinedTypeName","pathNode":{"id":2108,"name":"AuctionItem","nameLocations":["1266:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"1266:11:17"},"referencedDeclaration":2095,"src":"1266:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage_ptr","typeString":"struct Auction.AuctionItem"}},"visibility":"public"},{"constant":false,"functionSelector":"2630c12f","id":2113,"mutability":"mutable","name":"priceOracle","nameLocation":"1353:11:17","nodeType":"VariableDeclaration","scope":2531,"src":"1334:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"PriceOracle","nameLocations":["1334:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2956,"src":"1334:11:17"},"referencedDeclaration":2956,"src":"1334:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"visibility":"public"},{"body":{"id":2120,"nodeType":"Block","src":"1473:39:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2117,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1483:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2119,"nodeType":"ExpressionStatement","src":"1483:22:17"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1406:48:17","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":2121,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"1470:2:17"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"1473:0:17"},"scope":2531,"src":"1459:53:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2207,"nodeType":"Block","src":"1768:777:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2139,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1778:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"1778:16:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1804:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"ExpressionStatement","src":"1804:24:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"1886:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1910:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1902:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:17","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1886:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204e465420636f6e74726163742061646472657373","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1914:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31","typeString":"literal_string \"Invalid NFT contract address\""},"value":"Invalid NFT contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31","typeString":"literal_string \"Invalid NFT contract address\""}],"id":2145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1878:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"1878:67:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"1963:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1974:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:17","typeDescriptions":{}}},"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1963:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656c6c65722061646472657373","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1986:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4","typeString":"literal_string \"Invalid seller address\""},"value":"Invalid seller address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4","typeString":"literal_string \"Invalid seller address\""}],"id":2155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1955:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1955:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"ExpressionStatement","src":"1955:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2029:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2167,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2043:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2049:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2043:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2029:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d65206d75737420626520696e2074686520667574757265","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2060:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","typeString":"literal_string \"Start time must be in the future\""},"value":"Start time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","typeString":"literal_string \"Start time must be in the future\""}],"id":2165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2021:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2021:74:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"2021:74:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2113:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2175,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2124:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e642074696d65206d7573742062652061667465722073746172742074696d65","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2136:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","typeString":"literal_string \"End time must be after start time\""},"value":"End time must be after start time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","typeString":"literal_string \"End time must be after start time\""}],"id":2173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2105:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"2105:67:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"2190:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2214:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2206:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:17","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2206:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2190:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365206f7261636c652061646472657373","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3","typeString":"literal_string \"Invalid price oracle address\""},"value":"Invalid price oracle address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3","typeString":"literal_string \"Invalid price oracle address\""}],"id":2180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2182:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"2182:67:17"},{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2190,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2260:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2192,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"2313:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2193,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"2348:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2194,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"2378:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2195,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"2410:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2196,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"2443:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2472:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2191,"name":"AuctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2274:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AuctionItem_$2095_storage_ptr_$","typeString":"type(struct Auction.AuctionItem storage pointer)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2300:11:17","2339:7:17","2370:6:17","2399:9:17","2434:7:17","2465:5:17"],"names":["nftContract","tokenId","seller","startTime","endTime","ended"],"nodeType":"FunctionCall","src":"2274:214:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_memory_ptr","typeString":"struct Auction.AuctionItem memory"}},"src":"2260:228:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2200,"nodeType":"ExpressionStatement","src":"2260:228:17"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2499:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2203,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"2525:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2202,"name":"PriceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2513:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PriceOracle_$2956_$","typeString":"type(contract PriceOracle)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2513:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"src":"2499:39:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2206,"nodeType":"ExpressionStatement","src":"2499:39:17"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"1518:40:17","text":" 初始化拍卖合约"},"functionSelector":"871b6236","id":2208,"implemented":true,"kind":"function","modifiers":[{"id":2137,"kind":"modifierInvocation","modifierName":{"id":2136,"name":"initializer","nameLocations":["1756:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"1756:11:17"},"nodeType":"ModifierInvocation","src":"1756:11:17"}],"name":"initialize","nameLocation":"1572:10:17","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"_nftContract","nameLocation":"1600:12:17","nodeType":"VariableDeclaration","scope":2208,"src":"1592:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"_tokenId","nameLocation":"1630:8:17","nodeType":"VariableDeclaration","scope":2208,"src":"1622:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"_seller","nameLocation":"1656:7:17","nodeType":"VariableDeclaration","scope":2208,"src":"1648:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"_startTime","nameLocation":"1681:10:17","nodeType":"VariableDeclaration","scope":2208,"src":"1673:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"_endTime","nameLocation":"1709:8:17","nodeType":"VariableDeclaration","scope":2208,"src":"1701:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"_priceOracle","nameLocation":"1735:12:17","nodeType":"VariableDeclaration","scope":2208,"src":"1727:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1582:166:17"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"1768:0:17"},"scope":2531,"src":"1563:982:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2386,"nodeType":"Block","src":"2695:1801:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2217,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2713:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2719:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2713:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2219,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2732:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2744:9:17","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":2090,"src":"2732:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2713:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e206e6f74207374617274656420796574","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2755:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2","typeString":"literal_string \"Auction not started yet\""},"value":"Auction not started yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2","typeString":"literal_string \"Auction not started yet\""}],"id":2216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2705:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2705:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"ExpressionStatement","src":"2705:76:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2226,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2799:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2805:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"2799:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2228,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2818:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2830:7:17","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"2818:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2799:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e20616c726561647920656e646564","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2839:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","typeString":"literal_string \"Auction already ended\""},"value":"Auction already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","typeString":"literal_string \"Auction already ended\""}],"id":2225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2791:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"ExpressionStatement","src":"2791:72:17"},{"expression":{"arguments":[{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2881:18:17","subExpression":{"expression":{"id":2235,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2882:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2894:5:17","memberName":"ended","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"2882:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e2068617320656e646564","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2901:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""},"value":"Auction has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","typeString":"literal_string \"Auction has ended\""}],"id":2234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2873:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2873:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"ExpressionStatement","src":"2873:48:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"2939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2939:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2952:38:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570","typeString":"literal_string \"Bid amount must be greater than zero\""},"value":"Bid amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570","typeString":"literal_string \"Bid amount must be greater than zero\""}],"id":2241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2931:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"ExpressionStatement","src":"2931:60:17"},{"assignments":[2249],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"usdAmount","nameLocation":"3034:9:17","nodeType":"VariableDeclaration","scope":2386,"src":"3026:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3026:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2250,"nodeType":"VariableDeclarationStatement","src":"3026:17:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"3057:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3067:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"3067:7:17","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3067:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3057:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2306,"nodeType":"Block","src":"3270:267:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3332:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3336:5:17","memberName":"value","nodeType":"MemberAccess","src":"3332:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3332:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448206e6f7420616363657074656420666f722045524332302062696473","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3348:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227","typeString":"literal_string \"ETH not accepted for ERC20 bids\""},"value":"ETH not accepted for ERC20 bids"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227","typeString":"literal_string \"ETH not accepted for ERC20 bids\""}],"id":2277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3324:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3324:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"ExpressionStatement","src":"3324:58:17"},{"expression":{"arguments":[{"expression":{"id":2289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3424:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3428:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3424:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2293,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3444:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3436:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"3436:7:17","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3436:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2295,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3451:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2286,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"3403:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2285,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"3396:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1818_$","typeString":"type(contract IERC20)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1818","typeString":"contract IERC20"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3411:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1817,"src":"3396:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"ExpressionStatement","src":"3396:63:17"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2298,"name":"usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"3473:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2301,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"3510:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2302,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3518:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2299,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3485:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3497:12:17","memberName":"convertToUSD","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"3485:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3485:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3473:53:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"3473:53:17"}]},"id":2307,"nodeType":"IfStatement","src":"3053:484:17","trueBody":{"id":2276,"nodeType":"Block","src":"3079:185:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3138:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3142:5:17","memberName":"value","nodeType":"MemberAccess","src":"3138:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2260,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3151:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3138:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820616d6f756e74206d69736d61746368","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3160:21:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7","typeString":"literal_string \"ETH amount mismatch\""},"value":"ETH amount mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7","typeString":"literal_string \"ETH amount mismatch\""}],"id":2257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3130:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3130:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2264,"nodeType":"ExpressionStatement","src":"3130:52:17"},{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2265,"name":"usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"3196:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3241:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3233:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:17","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3233:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2272,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3245:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2266,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3208:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3220:12:17","memberName":"convertToUSD","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"3208:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3196:57:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"3196:57:17"}]}},{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"currentHighestUSD","nameLocation":"3626:17:17","nodeType":"VariableDeclaration","scope":2386,"src":"3618:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3618:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"initialValue":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3646:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3618:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2312,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3661:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3672:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"3661:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3661:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2327,"nodeType":"IfStatement","src":"3657:133:17","trueBody":{"id":2326,"nodeType":"Block","src":"3684:106:17","statements":[{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2316,"name":"currentHighestUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3698:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2319,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3743:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3754:5:17","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"3743:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2321,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3761:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3772:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"3761:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2317,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3718:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3730:12:17","memberName":"convertToUSD","nodeType":"MemberAccess","referencedDeclaration":2924,"src":"3718:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3718:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3698:81:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"3698:81:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"3807:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2330,"name":"currentHighestUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3819:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3807:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e74206869676865737420626964","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:45:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""},"value":"Bid must be higher than current highest bid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","typeString":"literal_string \"Bid must be higher than current highest bid\""}],"id":2328,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3799:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:85:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2334,"nodeType":"ExpressionStatement","src":"3799:85:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2335,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3935:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3946:6:17","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"3935:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3964:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3956:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"3956:7:17","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3935:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2374,"nodeType":"IfStatement","src":"3931:362:17","trueBody":{"id":2373,"nodeType":"Block","src":"3968:325:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2342,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"3986:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3997:5:17","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"3986:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4014:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4006:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:17","typeDescriptions":{}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4006:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3986:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2371,"nodeType":"Block","src":"4141:142:17","statements":[{"expression":{"arguments":[{"expression":{"id":2365,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4231:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4242:6:17","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"4231:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2367,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4250:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4261:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"4250:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2361,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4204:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4215:5:17","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"4204:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2360,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"4197:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1818_$","typeString":"type(contract IERC20)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1818","typeString":"contract IERC20"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"4197:33:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2370,"nodeType":"ExpressionStatement","src":"4197:71:17"}]},"id":2372,"nodeType":"IfStatement","src":"3982:301:17","trueBody":{"id":2359,"nodeType":"Block","src":"4018:117:17","statements":[{"expression":{"arguments":[{"expression":{"id":2355,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4102:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4113:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"4102:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2351,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4074:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4085:6:17","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"4074:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4066:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"4066:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4093:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"4066:35:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4066:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"ExpressionStatement","src":"4066:54:17"}]}}]}},{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4333:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2377,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4372:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4376:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4372:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"4403:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2380,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"4431:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2381,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4463:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4469:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4463:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2376,"name":"Bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"4346:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bid_$2104_storage_ptr_$","typeString":"type(struct Auction.Bid storage pointer)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4364:6:17","4396:5:17","4423:6:17","4452:9:17"],"names":["bidder","token","amount","timestamp"],"nodeType":"FunctionCall","src":"4346:143:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_memory_ptr","typeString":"struct Auction.Bid memory"}},"src":"4333:156:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2385,"nodeType":"ExpressionStatement","src":"4333:156:17"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"2551:71:17","text":" 出价函数，支持以太坊和 ERC20 代币出价"},"functionSelector":"d98b9bb5","id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"placeBid","nameLocation":"2636:8:17","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"_token","nameLocation":"2653:6:17","nodeType":"VariableDeclaration","scope":2387,"src":"2645:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"_amount","nameLocation":"2669:7:17","nodeType":"VariableDeclaration","scope":2387,"src":"2661:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2644:33:17"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"2695:0:17"},"scope":2531,"src":"2627:1869:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2496,"nodeType":"Block","src":"4569:995:17","statements":[{"expression":{"arguments":[{"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4587:18:17","subExpression":{"expression":{"id":2392,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4588:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4600:5:17","memberName":"ended","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"4588:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e20616c726561647920656e646564","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4607:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","typeString":"literal_string \"Auction already ended\""},"value":"Auction already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","typeString":"literal_string \"Auction already ended\""}],"id":2391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4579:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4579:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2397,"nodeType":"ExpressionStatement","src":"4579:52:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2399,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4649:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4655:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4649:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2401,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4668:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4680:7:17","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"4668:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4649:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2404,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4692:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4698:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4692:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2406,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4711:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4723:9:17","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":2090,"src":"4711:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4692:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2409,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4736:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4747:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"4736:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4756:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4736:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4692:65:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4691:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4649:109:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41756374696f6e206e6f7420656e64656420796574","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4777:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00","typeString":"literal_string \"Auction not ended yet\""},"value":"Auction not ended yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00","typeString":"literal_string \"Auction not ended yet\""}],"id":2398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4641:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4641:160:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"4641:160:17"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2419,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4814:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4826:5:17","memberName":"ended","nodeType":"MemberAccess","referencedDeclaration":2094,"src":"4814:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4834:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4814:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"ExpressionStatement","src":"4814:24:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2425,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4882:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4893:6:17","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"4882:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4911:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4903:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"4903:7:17","typeDescriptions":{}}},"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4903:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4882:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2494,"nodeType":"Block","src":"5382:176:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2486,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5500:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}],"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5492:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"5492:7:17","typeDescriptions":{}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2488,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5507:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5519:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"5507:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2490,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5527:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5539:7:17","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"5527:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2480,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5454:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5466:11:17","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"5454:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2479,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"5446:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1935_$","typeString":"type(contract IERC721)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5446:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1935","typeString":"contract IERC721"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5479:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1900,"src":"5446:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5446:101:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"5446:101:17"}]},"id":2495,"nodeType":"IfStatement","src":"4878:680:17","trueBody":{"id":2478,"nodeType":"Block","src":"4915:461:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2439,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5028:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5020:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"5020:7:17","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2441,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5035:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5046:6:17","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":2097,"src":"5035:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2443,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5054:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5066:7:17","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2086,"src":"5054:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2433,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"4982:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4994:11:17","memberName":"nftContract","nodeType":"MemberAccess","referencedDeclaration":2084,"src":"4982:23:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2432,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4974:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1935_$","typeString":"type(contract IERC721)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1935","typeString":"contract IERC721"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5007:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1900,"src":"4974:45:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:100:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2446,"nodeType":"ExpressionStatement","src":"4974:100:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2447,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5135:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5146:5:17","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"5135:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5163:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5155:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"5155:7:17","typeDescriptions":{}}},"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5155:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5135:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2476,"nodeType":"Block","src":"5261:105:17","statements":[{"expression":{"arguments":[{"expression":{"id":2470,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5313:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5325:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"5313:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2472,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5333:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5344:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"5333:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2466,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5286:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5297:5:17","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"5286:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"5279:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1818_$","typeString":"type(contract IERC20)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5279:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1818","typeString":"contract IERC20"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5304:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"5279:33:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5279:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"ExpressionStatement","src":"5279:72:17"}]},"id":2477,"nodeType":"IfStatement","src":"5131:235:17","trueBody":{"id":2464,"nodeType":"Block","src":"5167:88:17","statements":[{"expression":{"arguments":[{"expression":{"id":2460,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5222:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5233:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":2101,"src":"5222:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":2456,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5193:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"id":2457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5205:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2088,"src":"5193:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5185:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"5185:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5185:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5213:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"5185:36:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5185:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2463,"nodeType":"ExpressionStatement","src":"5185:55:17"}]}}]}}]},"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"4502:31:17","text":" 结束拍卖"},"functionSelector":"fe67a54b","id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"endAuction","nameLocation":"4547:10:17","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"4557:2:17"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[],"src":"4569:0:17"},"scope":2531,"src":"4538:1026:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2506,"nodeType":"Block","src":"5672:34:17","statements":[{"expression":{"id":2504,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5689:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage","typeString":"struct Auction.Bid storage ref"}},"functionReturnParameters":2503,"id":2505,"nodeType":"Return","src":"5682:17:17"}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"5570:37:17","text":" 获取最高出价"},"functionSelector":"4979440a","id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"getHighestBid","nameLocation":"5621:13:17","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"5634:2:17"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"5660:10:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_memory_ptr","typeString":"struct Auction.Bid"},"typeName":{"id":2501,"nodeType":"UserDefinedTypeName","pathNode":{"id":2500,"name":"Bid","nameLocations":["5660:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":2104,"src":"5660:3:17"},"referencedDeclaration":2104,"src":"5660:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$2104_storage_ptr","typeString":"struct Auction.Bid"}},"visibility":"internal"}],"src":"5659:12:17"},"scope":2531,"src":"5612:94:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2516,"nodeType":"Block","src":"5829:35:17","statements":[{"expression":{"id":2514,"name":"auctionItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5846:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage","typeString":"struct Auction.AuctionItem storage ref"}},"functionReturnParameters":2513,"id":2515,"nodeType":"Return","src":"5839:18:17"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"5712:43:17","text":" 获取拍卖项目信息"},"functionSelector":"04de63a5","id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"getAuctionItem","nameLocation":"5769:14:17","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[],"src":"5783:2:17"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"5809:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_memory_ptr","typeString":"struct Auction.AuctionItem"},"typeName":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"AuctionItem","nameLocations":["5809:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"5809:11:17"},"referencedDeclaration":2095,"src":"5809:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuctionItem_$2095_storage_ptr","typeString":"struct Auction.AuctionItem"}},"visibility":"internal"}],"src":"5808:20:17"},"scope":2531,"src":"5760:104:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[844],"body":{"id":2525,"nodeType":"Block","src":"5960:2:17","statements":[]},"id":2526,"implemented":true,"kind":"function","modifiers":[{"id":2523,"kind":"modifierInvocation","modifierName":{"id":2522,"name":"onlyOwner","nameLocations":["5950:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"5950:9:17"},"nodeType":"ModifierInvocation","src":"5950:9:17"}],"name":"_authorizeUpgrade","nameLocation":"5879:17:17","nodeType":"FunctionDefinition","overrides":{"id":2521,"nodeType":"OverrideSpecifier","overrides":[],"src":"5941:8:17"},"parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"newImplementation","nameLocation":"5905:17:17","nodeType":"VariableDeclaration","scope":2526,"src":"5897:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"5897:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5896:27:17"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"5960:0:17"},"scope":2531,"src":"5870:92:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2529,"nodeType":"Block","src":"6024:2:17","statements":[]},"id":2530,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[],"src":"6004:2:17"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"6024:0:17"},"scope":2531,"src":"5997:29:17","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2532,"src":"432:5596:17","usedErrors":[],"usedEvents":[63,186,193,198,559]}],"src":"32:5999:17"},"id":17},"contracts/AuctionFactory.sol":{"ast":{"absolutePath":"contracts/AuctionFactory.sol","exportedSymbols":{"AddressUpgradeable":[1180],"AggregatorV3Interface":[45],"Auction":[2531],"AuctionFactory":[2731],"Clones":[1740],"ContextUpgradeable":[1231],"Create2":[2034],"ERC1967UpgradeUpgradeable":[534],"Errors":[2056],"IBeaconUpgradeable":[544],"IERC165":[2068],"IERC1822ProxiableUpgradeable":[209],"IERC1967Upgradeable":[199],"IERC20":[1818],"IERC721":[1935],"Initializable":[713],"OwnableUpgradeable":[178],"PriceOracle":[2956],"StorageSlotUpgradeable":[1341],"UUPSUpgradeable":[850]},"id":2732,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2533,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":714,"src":"57:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":179,"src":"133:75:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":851,"src":"209:77:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":2537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":1741,"src":"287:50:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Auction.sol","file":"./Auction.sol","id":2538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2732,"sourceUnit":2532,"src":"338:23:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2539,"name":"Initializable","nameLocations":["390:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"390:13:18"},"id":2540,"nodeType":"InheritanceSpecifier","src":"390:13:18"},{"baseName":{"id":2541,"name":"OwnableUpgradeable","nameLocations":["405:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"405:18:18"},"id":2542,"nodeType":"InheritanceSpecifier","src":"405:18:18"},{"baseName":{"id":2543,"name":"UUPSUpgradeable","nameLocations":["425:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":850,"src":"425:15:18"},"id":2544,"nodeType":"InheritanceSpecifier","src":"425:15:18"}],"canonicalName":"AuctionFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2731,"linearizedBaseContracts":[2731,850,534,199,209,178,1231,713],"name":"AuctionFactory","nameLocation":"372:14:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"571a26a0","id":2547,"mutability":"mutable","name":"auctions","nameLocation":"464:8:18","nodeType":"VariableDeclaration","scope":2731,"src":"447:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2546,"nodeType":"ArrayTypeName","src":"447:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2630c12f","id":2549,"mutability":"mutable","name":"priceOracle","nameLocation":"528:11:18","nodeType":"VariableDeclaration","scope":2731,"src":"513:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"6a7f3f6c","id":2551,"mutability":"mutable","name":"auctionImplementation","nameLocation":"599:21:18","nodeType":"VariableDeclaration","scope":2731,"src":"584:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"584:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":2558,"nodeType":"Block","src":"722:39:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2555,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"732:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"732:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2557,"nodeType":"ExpressionStatement","src":"732:22:18"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"655:48:18","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":2559,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"719:2:18"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"722:0:18"},"scope":2731,"src":"708:53:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2602,"nodeType":"Block","src":"860:318:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2568,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"870:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"870:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2570,"nodeType":"ExpressionStatement","src":"870:16:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2571,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"896:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"896:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2573,"nodeType":"ExpressionStatement","src":"896:24:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"_auctionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"938:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"972:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"964:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2576,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:18","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"964:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"938:36:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061756374696f6e20696d706c656d656e746174696f6e","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"976:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927","typeString":"literal_string \"Invalid auction implementation\""},"value":"Invalid auction implementation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927","typeString":"literal_string \"Invalid auction implementation\""}],"id":2574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"930:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:79:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2583,"nodeType":"ExpressionStatement","src":"930:79:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1027:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2586,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{}}},"id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1043:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1027:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365206f7261636c65","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1055:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","typeString":"literal_string \"Invalid price oracle\""},"value":"Invalid price oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","typeString":"literal_string \"Invalid price oracle\""}],"id":2584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1019:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1019:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2593,"nodeType":"ExpressionStatement","src":"1019:59:18"},{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2594,"name":"auctionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1089:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2595,"name":"_auctionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"1113:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1089:46:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2597,"nodeType":"ExpressionStatement","src":"1089:46:18"},{"expression":{"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2598,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"1145:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2599,"name":"_priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"1159:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1145:26:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2601,"nodeType":"ExpressionStatement","src":"1145:26:18"}]},"functionSelector":"485cc955","id":2603,"implemented":true,"kind":"function","modifiers":[{"id":2566,"kind":"modifierInvocation","modifierName":{"id":2565,"name":"initializer","nameLocations":["848:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":615,"src":"848:11:18"},"nodeType":"ModifierInvocation","src":"848:11:18"}],"name":"initialize","nameLocation":"776:10:18","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"_auctionImplementation","nameLocation":"795:22:18","nodeType":"VariableDeclaration","scope":2603,"src":"787:30:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"_priceOracle","nameLocation":"827:12:18","nodeType":"VariableDeclaration","scope":2603,"src":"819:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"786:54:18"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"860:0:18"},"scope":2731,"src":"767:411:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2710,"nodeType":"Block","src":"1433:837:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"1451:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1475:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1467:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:18","typeDescriptions":{}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1467:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1451:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204e465420636f6e7472616374","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1479:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","typeString":"literal_string \"Invalid NFT contract\""},"value":"Invalid NFT contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","typeString":"literal_string \"Invalid NFT contract\""}],"id":2621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1443:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1443:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2630,"nodeType":"ExpressionStatement","src":"1443:59:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1520:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2633,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1534:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1540:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"1534:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1520:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d65206d75737420626520696e2074686520667574757265","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1551:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","typeString":"literal_string \"Start time must be in the future\""},"value":"Start time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","typeString":"literal_string \"Start time must be in the future\""}],"id":2631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1512:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1512:74:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"1512:74:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"1604:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2641,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1615:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1604:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e642074696d65206d7573742062652061667465722073746172742074696d65","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1627:35:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","typeString":"literal_string \"End time must be after start time\""},"value":"End time must be after start time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","typeString":"literal_string \"End time must be after start time\""}],"id":2639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1596:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1596:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"ExpressionStatement","src":"1596:67:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2651,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"1720:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2648,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"1698:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2647,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1690:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1935_$","typeString":"type(contract IERC721)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1690:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1935","typeString":"contract IERC721"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1712:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"1690:29:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1690:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1733:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1733:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1690:53:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572206f66204e4654","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1745:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721","typeString":"literal_string \"Not owner of NFT\""},"value":"Not owner of NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721","typeString":"literal_string \"Not owner of NFT\""}],"id":2646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1682:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1682:82:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"1682:82:18"},{"expression":{"arguments":[{"arguments":[{"id":2665,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1821:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuctionFactory_$2731","typeString":"contract AuctionFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AuctionFactory_$2731","typeString":"contract AuctionFactory"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1813:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:18","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1813:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2667,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"1828:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2660,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"1791:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2659,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1783:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1935_$","typeString":"type(contract IERC721)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1935","typeString":"contract IERC721"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1805:7:18","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1908,"src":"1783:29:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1783:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2669,"nodeType":"ExpressionStatement","src":"1783:54:18"},{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"auction","nameLocation":"1864:7:18","nodeType":"VariableDeclaration","scope":2710,"src":"1856:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2676,"initialValue":{"arguments":[{"id":2674,"name":"auctionImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1887:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2672,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1874:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$1740_$","typeString":"type(library Clones)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1881:5:18","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"1874:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1856:53:18"},{"expression":{"arguments":[{"id":2684,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"1978:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2685,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"2004:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2686,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"2026:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2687,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"2047:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2688,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"2071:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2689,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2093:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":2680,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1944:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1936:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"1936:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2677,"name":"Auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"1928:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Auction_$2531_$","typeString":"type(contract Auction)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Auction_$2531","typeString":"contract Auction"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1954:10:18","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":2208,"src":"1928:36:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address,uint256,uint256,address) external"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:186:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2691,"nodeType":"ExpressionStatement","src":"1928:186:18"},{"expression":{"arguments":[{"expression":{"id":2696,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2168:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2168:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2698,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"2180:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2699,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"2189:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2693,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"2141:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2692,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2133:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1935_$","typeString":"type(contract IERC721)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1935","typeString":"contract IERC721"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2155:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1900,"src":"2133:34:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2701,"nodeType":"ExpressionStatement","src":"2133:65:18"},{"expression":{"arguments":[{"id":2705,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2702,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2217:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2226:4:18","memberName":"push","nodeType":"MemberAccess","src":"2217:13:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"ExpressionStatement","src":"2217:22:18"},{"expression":{"id":2708,"name":"auction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"2256:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2620,"id":2709,"nodeType":"Return","src":"2249:14:18"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"1184:43:18","text":" 创建新的拍卖合约"},"functionSelector":"f2df5047","id":2711,"implemented":true,"kind":"function","modifiers":[{"id":2617,"kind":"modifierInvocation","modifierName":{"id":2616,"name":"onlyOwner","nameLocations":["1405:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"1405:9:18"},"nodeType":"ModifierInvocation","src":"1405:9:18"}],"name":"createAuction","nameLocation":"1241:13:18","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"_nftContract","nameLocation":"1272:12:18","nodeType":"VariableDeclaration","scope":2711,"src":"1264:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"_tokenId","nameLocation":"1302:8:18","nodeType":"VariableDeclaration","scope":2711,"src":"1294:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"_seller","nameLocation":"1328:7:18","nodeType":"VariableDeclaration","scope":2711,"src":"1320:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"_startTime","nameLocation":"1353:10:18","nodeType":"VariableDeclaration","scope":2711,"src":"1345:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"_endTime","nameLocation":"1381:8:18","nodeType":"VariableDeclaration","scope":2711,"src":"1373:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1254:141:18"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"1424:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1423:9:18"},"scope":2731,"src":"1232:1038:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2720,"nodeType":"Block","src":"2394:32:18","statements":[{"expression":{"id":2718,"name":"auctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2411:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":2717,"id":2719,"nodeType":"Return","src":"2404:15:18"}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"2276:49:18","text":" 获取所有拍卖合约地址"},"functionSelector":"d7c06919","id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"getAuctions","nameLocation":"2339:11:18","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"2350:2:18"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"2376:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2715,"nodeType":"ArrayTypeName","src":"2376:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2375:18:18"},"scope":2731,"src":"2330:96:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[844],"body":{"id":2729,"nodeType":"Block","src":"2514:2:18","statements":[]},"id":2730,"implemented":true,"kind":"function","modifiers":[{"id":2727,"kind":"modifierInvocation","modifierName":{"id":2726,"name":"onlyOwner","nameLocations":["2504:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"2504:9:18"},"nodeType":"ModifierInvocation","src":"2504:9:18"}],"name":"_authorizeUpgrade","nameLocation":"2441:17:18","nodeType":"FunctionDefinition","overrides":{"id":2725,"nodeType":"OverrideSpecifier","overrides":[],"src":"2495:8:18"},"parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"newImplementation","nameLocation":"2467:17:18","nodeType":"VariableDeclaration","scope":2730,"src":"2459:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2458:27:18"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"2514:0:18"},"scope":2731,"src":"2432:84:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2732,"src":"363:2155:18","usedErrors":[2044,2050],"usedEvents":[63,186,193,198,559]}],"src":"32:2486:18"},"id":18},"contracts/PriceOracle.sol":{"ast":{"absolutePath":"contracts/PriceOracle.sol","exportedSymbols":{"AggregatorV3Interface":[45],"PriceOracle":[2956]},"id":2957,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2733,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","id":2735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2957,"sourceUnit":46,"src":"57:112:19","symbolAliases":[{"foreign":{"id":2734,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"65:21:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PriceOracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2956,"linearizedBaseContracts":[2956],"name":"PriceOracle","nameLocation":"180:11:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9dcb511a","id":2740,"mutability":"mutable","name":"priceFeeds","nameLocation":"247:10:19","nodeType":"VariableDeclaration","scope":2956,"src":"198:59:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"},"typeName":{"id":2739,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"198:41:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2738,"nodeType":"UserDefinedTypeName","pathNode":{"id":2737,"name":"AggregatorV3Interface","nameLocations":["217:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"217:21:19"},"referencedDeclaration":45,"src":"217:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}},"visibility":"public"},{"constant":false,"functionSelector":"23ebc76e","id":2744,"mutability":"mutable","name":"testEthPrices","nameLocation":"347:13:19","nodeType":"VariableDeclaration","scope":2956,"src":"312:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2743,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"312:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"d2fe1631","id":2748,"mutability":"mutable","name":"testTokenPrices","nameLocation":"401:15:19","nodeType":"VariableDeclaration","scope":2956,"src":"366:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2747,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2745,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"366:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":2764,"nodeType":"Block","src":"455:187:19","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2753,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"525:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"}},"id":2758,"indexExpression":{"arguments":[{"hexValue":"30","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"544:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"536:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:19","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"536:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"525:22:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2760,"name":"ethUsdFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"572:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2759,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"550:21:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"550:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"525:58:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2763,"nodeType":"ExpressionStatement","src":"525:58:19"}]},"id":2765,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"ethUsdFeed","nameLocation":"443:10:19","nodeType":"VariableDeclaration","scope":2765,"src":"435:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2749,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:20:19"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"455:0:19"},"scope":2956,"src":"423:219:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2781,"nodeType":"Block","src":"774:64:19","statements":[{"expression":{"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2773,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"784:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"}},"id":2775,"indexExpression":{"id":2774,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"795:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"784:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2777,"name":"feed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"826:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2776,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"804:21:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"784:47:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2780,"nodeType":"ExpressionStatement","src":"784:47:19"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"648:61:19","text":" 设置某个代币的价格预言机地址"},"functionSelector":"76e11286","id":2782,"implemented":true,"kind":"function","modifiers":[],"name":"setPriceFeed","nameLocation":"723:12:19","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"token","nameLocation":"744:5:19","nodeType":"VariableDeclaration","scope":2782,"src":"736:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"feed","nameLocation":"759:4:19","nodeType":"VariableDeclaration","scope":2782,"src":"751:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"735:29:19"},"returnParameters":{"id":2772,"nodeType":"ParameterList","parameters":[],"src":"774:0:19"},"scope":2956,"src":"714:124:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2818,"nodeType":"Block","src":"971:240:19","statements":[{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"priceFeed","nameLocation":"1003:9:19","nodeType":"VariableDeclaration","scope":2818,"src":"981:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2791,"nodeType":"UserDefinedTypeName","pathNode":{"id":2790,"name":"AggregatorV3Interface","nameLocations":["981:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"981:21:19"},"referencedDeclaration":45,"src":"981:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2796,"initialValue":{"baseExpression":{"id":2793,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1015:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"}},"id":2795,"indexExpression":{"id":2794,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"1026:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1015:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"981:51:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2800,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"1058:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1050:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:19","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1080:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1072:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2802,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:19","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1072:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1050:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726963652066656564206e6f742073657420666f72207468697320746f6b656e","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934","typeString":"literal_string \"Price feed not set for this token\""},"value":"Price feed not set for this token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934","typeString":"literal_string \"Price feed not set for this token\""}],"id":2797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1042:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2809,"nodeType":"ExpressionStatement","src":"1042:78:19"},{"assignments":[null,2811,null,null,null],"declarations":[null,{"constant":false,"id":2811,"mutability":"mutable","name":"price","nameLocation":"1140:5:19","nodeType":"VariableDeclaration","scope":2818,"src":"1133:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2810,"name":"int256","nodeType":"ElementaryTypeName","src":"1133:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2815,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2812,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"1155:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1165:15:19","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1155:25:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1130:52:19"},{"expression":{"id":2816,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"1199:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2789,"id":2817,"nodeType":"Return","src":"1192:12:19"}]},"documentation":{"id":2783,"nodeType":"StructuredDocumentation","src":"844:52:19","text":" 获取某个代币的最新价格"},"functionSelector":"16345f18","id":2819,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestPrice","nameLocation":"910:14:19","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"token","nameLocation":"933:5:19","nodeType":"VariableDeclaration","scope":2819,"src":"925:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2784,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"924:15:19"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2819,"src":"963:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2787,"name":"int256","nodeType":"ElementaryTypeName","src":"963:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"962:8:19"},"scope":2956,"src":"901:310:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2856,"nodeType":"Block","src":"1327:238:19","statements":[{"assignments":[2827],"declarations":[{"constant":false,"id":2827,"mutability":"mutable","name":"priceFeed","nameLocation":"1359:9:19","nodeType":"VariableDeclaration","scope":2856,"src":"1337:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2826,"nodeType":"UserDefinedTypeName","pathNode":{"id":2825,"name":"AggregatorV3Interface","nameLocations":["1337:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"1337:21:19"},"referencedDeclaration":45,"src":"1337:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":2834,"initialValue":{"baseExpression":{"id":2828,"name":"priceFeeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1371:10:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_AggregatorV3Interface_$45_$","typeString":"mapping(address => contract AggregatorV3Interface)"}},"id":2833,"indexExpression":{"arguments":[{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1382:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:19","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1382:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1371:22:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"1337:56:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2838,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1419:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1411:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"1411:7:19","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1441:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1433:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:19","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1411:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726963652066656564206e6f742073657420666f7220455448","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1445:28:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d","typeString":"literal_string \"Price feed not set for ETH\""},"value":"Price feed not set for ETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d","typeString":"literal_string \"Price feed not set for ETH\""}],"id":2835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1403:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"1403:71:19"},{"assignments":[null,2849,null,null,null],"declarations":[null,{"constant":false,"id":2849,"mutability":"mutable","name":"price","nameLocation":"1494:5:19","nodeType":"VariableDeclaration","scope":2856,"src":"1487:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2848,"name":"int256","nodeType":"ElementaryTypeName","src":"1487:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":2853,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2850,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"1509:9:19","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1519:15:19","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1509:25:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1509:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1484:52:19"},{"expression":{"id":2854,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1553:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2824,"id":2855,"nodeType":"Return","src":"1546:12:19"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"1217:48:19","text":" 获取 ETH/USD 的最新价格"},"functionSelector":"a0a8045e","id":2857,"implemented":true,"kind":"function","modifiers":[],"name":"getEthUsdPrice","nameLocation":"1279:14:19","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[],"src":"1293:2:19"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2857,"src":"1319:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2822,"name":"int256","nodeType":"ElementaryTypeName","src":"1319:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1318:8:19"},"scope":2956,"src":"1270:295:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2923,"nodeType":"Block","src":"1724:542:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"1738:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1747:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2868,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:19","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1738:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2921,"nodeType":"Block","src":"2012:248:19","statements":[{"assignments":[2898],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"price","nameLocation":"2085:5:19","nodeType":"VariableDeclaration","scope":2921,"src":"2078:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2897,"name":"int256","nodeType":"ElementaryTypeName","src":"2078:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2903,"initialValue":{"arguments":[{"id":2901,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"2113:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2899,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2093:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2098:14:19","memberName":"getLatestPrice","nodeType":"MemberAccess","referencedDeclaration":2819,"src":"2093:19:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_int256_$","typeString":"function (address) view external returns (int256)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2078:41:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2141:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2149:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2141:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2152:15:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":2904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2133:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"ExpressionStatement","src":"2133:35:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"2190:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2914,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"2207:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2199:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"2199:7:19","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2189:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"316538","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2217:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"src":"2189:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2866,"id":2920,"nodeType":"Return","src":"2182:38:19"}]},"id":2922,"nodeType":"IfStatement","src":"1734:526:19","trueBody":{"id":2896,"nodeType":"Block","src":"1759:247:19","statements":[{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"ethPrice","nameLocation":"1823:8:19","nodeType":"VariableDeclaration","scope":2896,"src":"1816:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2873,"name":"int256","nodeType":"ElementaryTypeName","src":"1816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2878,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2875,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1834:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_PriceOracle_$2956","typeString":"contract PriceOracle"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1839:14:19","memberName":"getEthUsdPrice","nodeType":"MemberAccess","referencedDeclaration":2857,"src":"1834:19:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_int256_$","typeString":"function () view external returns (int256)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1834:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1816:39:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"ethPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1877:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1877:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420455448207072696365","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1891:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff","typeString":"literal_string \"Invalid ETH price\""},"value":"Invalid ETH price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff","typeString":"literal_string \"Invalid ETH price\""}],"id":2879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1869:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1869:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2885,"nodeType":"ExpressionStatement","src":"1869:42:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"1933:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2889,"name":"ethPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1950:8:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1942:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1942:7:19","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1932:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"316538","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:3:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"src":"1932:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2866,"id":2895,"nodeType":"Return","src":"1925:41:19"}]}}]},"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"1571:63:19","text":" 将某个代币的数量转换为 USD 价值"},"functionSelector":"f08a25ed","id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"convertToUSD","nameLocation":"1648:12:19","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"token","nameLocation":"1669:5:19","nodeType":"VariableDeclaration","scope":2924,"src":"1661:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"amount","nameLocation":"1684:6:19","nodeType":"VariableDeclaration","scope":2924,"src":"1676:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1660:31:19"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2924,"src":"1715:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:9:19"},"scope":2956,"src":"1639:627:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2954,"nodeType":"Block","src":"2407:163:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2421:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2438:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2421:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2952,"nodeType":"Block","src":"2509:55:19","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2946,"name":"testTokenPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"2523:15:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2948,"indexExpression":{"id":2947,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2539:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2523:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2949,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2548:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2523:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"2523:30:19"}]},"id":2953,"nodeType":"IfStatement","src":"2417:147:19","trueBody":{"id":2945,"nodeType":"Block","src":"2442:61:19","statements":[{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2938,"name":"testEthPrices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2456:13:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2941,"indexExpression":{"expression":{"id":2939,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2470:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2476:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"2470:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2456:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2942,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"2487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2456:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"2456:36:19"}]}}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"2272:69:19","text":" @dev 设置测试价格（仅用于测试环境）"},"functionSelector":"332c6397","id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"setTestPrice","nameLocation":"2355:12:19","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"token","nameLocation":"2376:5:19","nodeType":"VariableDeclaration","scope":2955,"src":"2368:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2926,"name":"address","nodeType":"ElementaryTypeName","src":"2368:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"price","nameLocation":"2391:5:19","nodeType":"VariableDeclaration","scope":2955,"src":"2383:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2367:30:19"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[],"src":"2407:0:19"},"scope":2956,"src":"2346:224:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2957,"src":"171:2401:19","usedErrors":[],"usedEvents":[]}],"src":"32:2540:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1230,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":57,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":177,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":533,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":533,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":849,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064a207bb73937457909e56560f68307dbc4058acdf73ab096caa860b70a2973364736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA207BB7393 PUSH21 0x57909E56560F68307DBC4058ACDF73AB096CAA860B PUSH17 0xA2973364736F6C634300081C0033000000 ","sourceMap":"194:9180:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064a207bb73937457909e56560f68307dbc4058acdf73ab096caa860b70a2973364736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA207BB7393 PUSH21 0x57909E56560F68307DBC4058ACDF73AB096CAA860B PUSH17 0xA2973364736F6C634300081C0033000000 ","sourceMap":"194:9180:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1230,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf641fc356eb3f019a3bb2ef8b42565510db1df9e173fff65fcb8089d08de78164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH5 0x1FC356EB3F ADD SWAP11 EXTCODESIZE 0xB2 0xEF DUP12 TIMESTAMP JUMP SSTORE LT 0xDB SAR 0xF9 0xE1 PUSH20 0xFFF65FCB8089D08DE78164736F6C634300081C00 CALLER ","sourceMap":"1420:2696:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf641fc356eb3f019a3bb2ef8b42565510db1df9e173fff65fcb8089d08de78164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH5 0x1FC356EB3F ADD SWAP11 EXTCODESIZE 0xB2 0xEF DUP12 TIMESTAMP JUMP SSTORE LT 0xDB SAR 0xF9 0xE1 PUSH20 0xFFF65FCB8089D08DE78164736F6C634300081C00 CALLER ","sourceMap":"1420:2696:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"CloneArgumentsTooLong","type":"error"}],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220012663f8fc328718f21f980cc1210587838b5808d0a15da25e1c0d1ea0d1decc64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x26 PUSH4 0xF8FC3287 XOR CALLCODE 0x1F SWAP9 0xC 0xC1 0x21 SDIV DUP8 DUP4 DUP12 PC ADDMOD 0xD0 LOG1 TSTORE LOG2 MCOPY SHR 0xD 0x1E LOG0 0xD1 0xDE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"817:13703:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220012663f8fc328718f21f980cc1210587838b5808d0a15da25e1c0d1ea0d1decc64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0x26 PUSH4 0xF8FC3287 XOR CALLCODE 0x1F SWAP9 0xC 0xC1 0x21 SDIV DUP8 DUP4 DUP12 PC ADDMOD 0xD0 LOG1 TSTORE LOG2 MCOPY SHR 0xD 0x1E LOG0 0xD1 0xDE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"817:13703:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_cloneCodeWithImmutableArgs(address,bytes memory)":"infinite","clone(address)":"infinite","clone(address,uint256)":"infinite","cloneDeterministic(address,bytes32)":"infinite","cloneDeterministic(address,bytes32,uint256)":"infinite","cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)":"infinite","cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)":"infinite","cloneWithImmutableArgs(address,bytes memory)":"infinite","cloneWithImmutableArgs(address,bytes memory,uint256)":"infinite","fetchCloneArgs(address)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite","predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)":"infinite","predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Create2} from \\\"../utils/Create2.sol\\\";\\nimport {Errors} from \\\"../utils/Errors.sol\\\";\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n */\\nlibrary Clones {\\n    error CloneArgumentsTooLong();\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        return clone(implementation, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\\n     * to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function clone(address implementation, uint256 value) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(value, 0x09, 0x37)\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        return cloneDeterministic(implementation, salt, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\\n     * a `value` parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneDeterministic(\\n        address implementation,\\n        bytes32 salt,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(value, 0x09, 0x37, salt)\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\\n     * access the arguments within the implementation, use {fetchCloneArgs}.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\\n        return cloneWithImmutableArgs(implementation, args, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\\n     * parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        assembly (\\\"memory-safe\\\") {\\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\\n     * access the arguments within the implementation, use {fetchCloneArgs}.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\\n     * at the same address.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneDeterministicWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt\\n    ) internal returns (address instance) {\\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\\n     * but with a `value` parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneDeterministicWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        return Create2.deploy(value, salt, bytecode);\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\\n     */\\n    function predictDeterministicAddressWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\\n     */\\n    function predictDeterministicAddressWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\\n    }\\n\\n    /**\\n     * @dev Get the immutable args attached to a clone.\\n     *\\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\\n     *   function will return an empty array.\\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\\n     *   creation.\\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\\n     *   function should only be used to check addresses that are known to be clones.\\n     */\\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\\n        assembly (\\\"memory-safe\\\") {\\n            extcodecopy(instance, add(result, 32), 45, mload(result))\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\\n     *\\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\\n     * abi.encodePacked is more expensive but also more portable and easier to review.\\n     *\\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\\n     */\\n    function _cloneCodeWithImmutableArgs(\\n        address implementation,\\n        bytes memory args\\n    ) private pure returns (bytes memory) {\\n        if (args.length > 24531) revert CloneArgumentsTooLong();\\n        return\\n            abi.encodePacked(\\n                hex\\\"61\\\",\\n                uint16(args.length + 45),\\n                hex\\\"3d81600a3d39f3363d3d373d3d3d363d73\\\",\\n                implementation,\\n                hex\\\"5af43d82803e903d91602b57fd5bf3\\\",\\n                args\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev There's no code to deploy.\\n     */\\n    error Create2EmptyBytecode();\\n\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n        if (bytecode.length == 0) {\\n            revert Create2EmptyBytecode();\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n            // if no address was created, and returndata is not empty, bubble revert\\n            if and(iszero(addr), not(iszero(returndatasize()))) {\\n                let p := mload(0x40)\\n                returndatacopy(p, 0, returndatasize())\\n                revert(p, returndatasize())\\n            }\\n        }\\n        if (addr == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"devdoc":{"details":"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.","errors":{"Create2EmptyBytecode()":[{"details":"There's no code to deploy."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ae0b5bbb1b557c27547e4ccdaf8a820395c3e0f2ec86803b6ccf050571f495f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xE0 0xB5 0xBB 0xB1 0xB5 JUMPI 0xC2 PUSH22 0x47E4CCDAF8A820395C3E0F2EC86803B6CCF050571F49 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"533:3932:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ae0b5bbb1b557c27547e4ccdaf8a820395c3e0f2ec86803b6ccf050571f495f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xE0 0xB5 0xBB 0xB1 0xB5 JUMPI 0xC2 PUSH22 0x47E4CCDAF8A820395C3E0F2EC86803B6CCF050571F49 PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"533:3932:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"computeAddress(bytes32,bytes32)":"infinite","computeAddress(bytes32,bytes32,address)":"infinite","deploy(uint256,bytes32,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev There's no code to deploy.\\n     */\\n    error Create2EmptyBytecode();\\n\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n        if (bytecode.length == 0) {\\n            revert Create2EmptyBytecode();\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n            // if no address was created, and returndata is not empty, bubble revert\\n            if and(iszero(addr), not(iszero(returndatasize()))) {\\n                let p := mload(0x40)\\n                returndatacopy(p, 0, returndatasize())\\n                revert(p, returndatasize())\\n            }\\n        }\\n        if (addr == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220071306b615c3ce71af0f41f90e219ff99db8f44aabf8991f6a3a690127422a0464736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SGT MOD 0xB6 ISZERO 0xC3 0xCE PUSH18 0xAF0F41F90E219FF99DB8F44AABF8991F6A3A PUSH10 0x127422A0464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220071306b615c3ce71af0f41f90e219ff99db8f44aabf8991f6a3a690127422a0464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SGT MOD 0xB6 ISZERO 0xC3 0xCE PUSH18 0xAF0F41F90E219FF99DB8F44AABF8991F6A3A PUSH10 0x127422A0464736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"411:484:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Auction.sol":{"Auction":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"auctionItem","outputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"ended","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endAuction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuctionItem","outputs":[{"components":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"bool","name":"ended","type":"bool"}],"internalType":"struct Auction.AuctionItem","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getHighestBid","outputs":[{"components":[{"internalType":"address","name":"bidder","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct Auction.Bid","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highestBid","outputs":[{"internalType":"address","name":"bidder","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_seller","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"address","name":"_priceOracle","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"priceOracle","outputs":[{"internalType":"contract PriceOracle","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2121":{"entryPoint":null,"id":2121,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_694":{"entryPoint":87,"id":694,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":455,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":470,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":279,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":442,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":296,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1638:20","nodeType":"YulBlock","src":"0:1638:20","statements":[{"body":{"nativeSrc":"103:73:20","nodeType":"YulBlock","src":"103:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"120:3:20","nodeType":"YulIdentifier","src":"120:3:20"},{"name":"length","nativeSrc":"125:6:20","nodeType":"YulIdentifier","src":"125:6:20"}],"functionName":{"name":"mstore","nativeSrc":"113:6:20","nodeType":"YulIdentifier","src":"113:6:20"},"nativeSrc":"113:19:20","nodeType":"YulFunctionCall","src":"113:19:20"},"nativeSrc":"113:19:20","nodeType":"YulExpressionStatement","src":"113:19:20"},{"nativeSrc":"141:29:20","nodeType":"YulAssignment","src":"141:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"160:3:20","nodeType":"YulIdentifier","src":"160:3:20"},{"kind":"number","nativeSrc":"165:4:20","nodeType":"YulLiteral","src":"165:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"156:3:20","nodeType":"YulIdentifier","src":"156:3:20"},"nativeSrc":"156:14:20","nodeType":"YulFunctionCall","src":"156:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"141:11:20","nodeType":"YulIdentifier","src":"141:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"75:3:20","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nativeSrc":"80:6:20","nodeType":"YulTypedName","src":"80:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"91:11:20","nodeType":"YulTypedName","src":"91:11:20","type":""}],"src":"7:169:20"},{"body":{"nativeSrc":"288:120:20","nodeType":"YulBlock","src":"288:120:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},{"kind":"number","nativeSrc":"318:1:20","nodeType":"YulLiteral","src":"318:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"306:3:20","nodeType":"YulIdentifier","src":"306:3:20"},"nativeSrc":"306:14:20","nodeType":"YulFunctionCall","src":"306:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nativeSrc":"322:34:20","nodeType":"YulLiteral","src":"322:34:20","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nativeSrc":"299:6:20","nodeType":"YulIdentifier","src":"299:6:20"},"nativeSrc":"299:58:20","nodeType":"YulFunctionCall","src":"299:58:20"},"nativeSrc":"299:58:20","nodeType":"YulExpressionStatement","src":"299:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"378:6:20","nodeType":"YulIdentifier","src":"378:6:20"},{"kind":"number","nativeSrc":"386:2:20","nodeType":"YulLiteral","src":"386:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"374:3:20","nodeType":"YulIdentifier","src":"374:3:20"},"nativeSrc":"374:15:20","nodeType":"YulFunctionCall","src":"374:15:20"},{"hexValue":"616c697a696e67","kind":"string","nativeSrc":"391:9:20","nodeType":"YulLiteral","src":"391:9:20","type":"","value":"alizing"}],"functionName":{"name":"mstore","nativeSrc":"367:6:20","nodeType":"YulIdentifier","src":"367:6:20"},"nativeSrc":"367:34:20","nodeType":"YulFunctionCall","src":"367:34:20"},"nativeSrc":"367:34:20","nodeType":"YulExpressionStatement","src":"367:34:20"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nativeSrc":"182:226:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"280:6:20","nodeType":"YulTypedName","src":"280:6:20","type":""}],"src":"182:226:20"},{"body":{"nativeSrc":"560:220:20","nodeType":"YulBlock","src":"560:220:20","statements":[{"nativeSrc":"570:74:20","nodeType":"YulAssignment","src":"570:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"636:3:20","nodeType":"YulIdentifier","src":"636:3:20"},{"kind":"number","nativeSrc":"641:2:20","nodeType":"YulLiteral","src":"641:2:20","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"577:58:20","nodeType":"YulIdentifier","src":"577:58:20"},"nativeSrc":"577:67:20","nodeType":"YulFunctionCall","src":"577:67:20"},"variableNames":[{"name":"pos","nativeSrc":"570:3:20","nodeType":"YulIdentifier","src":"570:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"742:3:20","nodeType":"YulIdentifier","src":"742:3:20"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nativeSrc":"653:88:20","nodeType":"YulIdentifier","src":"653:88:20"},"nativeSrc":"653:93:20","nodeType":"YulFunctionCall","src":"653:93:20"},"nativeSrc":"653:93:20","nodeType":"YulExpressionStatement","src":"653:93:20"},{"nativeSrc":"755:19:20","nodeType":"YulAssignment","src":"755:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"766:3:20","nodeType":"YulIdentifier","src":"766:3:20"},{"kind":"number","nativeSrc":"771:2:20","nodeType":"YulLiteral","src":"771:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"762:3:20","nodeType":"YulIdentifier","src":"762:3:20"},"nativeSrc":"762:12:20","nodeType":"YulFunctionCall","src":"762:12:20"},"variableNames":[{"name":"end","nativeSrc":"755:3:20","nodeType":"YulIdentifier","src":"755:3:20"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nativeSrc":"414:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"548:3:20","nodeType":"YulTypedName","src":"548:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"556:3:20","nodeType":"YulTypedName","src":"556:3:20","type":""}],"src":"414:366:20"},{"body":{"nativeSrc":"957:248:20","nodeType":"YulBlock","src":"957:248:20","statements":[{"nativeSrc":"967:26:20","nodeType":"YulAssignment","src":"967:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"979:9:20","nodeType":"YulIdentifier","src":"979:9:20"},{"kind":"number","nativeSrc":"990:2:20","nodeType":"YulLiteral","src":"990:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:20","nodeType":"YulIdentifier","src":"975:3:20"},"nativeSrc":"975:18:20","nodeType":"YulFunctionCall","src":"975:18:20"},"variableNames":[{"name":"tail","nativeSrc":"967:4:20","nodeType":"YulIdentifier","src":"967:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1014:9:20","nodeType":"YulIdentifier","src":"1014:9:20"},{"kind":"number","nativeSrc":"1025:1:20","nodeType":"YulLiteral","src":"1025:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1010:3:20","nodeType":"YulIdentifier","src":"1010:3:20"},"nativeSrc":"1010:17:20","nodeType":"YulFunctionCall","src":"1010:17:20"},{"arguments":[{"name":"tail","nativeSrc":"1033:4:20","nodeType":"YulIdentifier","src":"1033:4:20"},{"name":"headStart","nativeSrc":"1039:9:20","nodeType":"YulIdentifier","src":"1039:9:20"}],"functionName":{"name":"sub","nativeSrc":"1029:3:20","nodeType":"YulIdentifier","src":"1029:3:20"},"nativeSrc":"1029:20:20","nodeType":"YulFunctionCall","src":"1029:20:20"}],"functionName":{"name":"mstore","nativeSrc":"1003:6:20","nodeType":"YulIdentifier","src":"1003:6:20"},"nativeSrc":"1003:47:20","nodeType":"YulFunctionCall","src":"1003:47:20"},"nativeSrc":"1003:47:20","nodeType":"YulExpressionStatement","src":"1003:47:20"},{"nativeSrc":"1059:139:20","nodeType":"YulAssignment","src":"1059:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"1193:4:20","nodeType":"YulIdentifier","src":"1193:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nativeSrc":"1067:124:20","nodeType":"YulIdentifier","src":"1067:124:20"},"nativeSrc":"1067:131:20","nodeType":"YulFunctionCall","src":"1067:131:20"},"variableNames":[{"name":"tail","nativeSrc":"1059:4:20","nodeType":"YulIdentifier","src":"1059:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"786:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"937:9:20","nodeType":"YulTypedName","src":"937:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"952:4:20","nodeType":"YulTypedName","src":"952:4:20","type":""}],"src":"786:419:20"},{"body":{"nativeSrc":"1254:43:20","nodeType":"YulBlock","src":"1254:43:20","statements":[{"nativeSrc":"1264:27:20","nodeType":"YulAssignment","src":"1264:27:20","value":{"arguments":[{"name":"value","nativeSrc":"1279:5:20","nodeType":"YulIdentifier","src":"1279:5:20"},{"kind":"number","nativeSrc":"1286:4:20","nodeType":"YulLiteral","src":"1286:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1275:3:20","nodeType":"YulIdentifier","src":"1275:3:20"},"nativeSrc":"1275:16:20","nodeType":"YulFunctionCall","src":"1275:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1264:7:20","nodeType":"YulIdentifier","src":"1264:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"1211:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1236:5:20","nodeType":"YulTypedName","src":"1236:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1246:7:20","nodeType":"YulTypedName","src":"1246:7:20","type":""}],"src":"1211:86:20"},{"body":{"nativeSrc":"1364:51:20","nodeType":"YulBlock","src":"1364:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1381:3:20","nodeType":"YulIdentifier","src":"1381:3:20"},{"arguments":[{"name":"value","nativeSrc":"1402:5:20","nodeType":"YulIdentifier","src":"1402:5:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"1386:15:20","nodeType":"YulIdentifier","src":"1386:15:20"},"nativeSrc":"1386:22:20","nodeType":"YulFunctionCall","src":"1386:22:20"}],"functionName":{"name":"mstore","nativeSrc":"1374:6:20","nodeType":"YulIdentifier","src":"1374:6:20"},"nativeSrc":"1374:35:20","nodeType":"YulFunctionCall","src":"1374:35:20"},"nativeSrc":"1374:35:20","nodeType":"YulExpressionStatement","src":"1374:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"1303:112:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1352:5:20","nodeType":"YulTypedName","src":"1352:5:20","type":""},{"name":"pos","nativeSrc":"1359:3:20","nodeType":"YulTypedName","src":"1359:3:20","type":""}],"src":"1303:112:20"},{"body":{"nativeSrc":"1515:120:20","nodeType":"YulBlock","src":"1515:120:20","statements":[{"nativeSrc":"1525:26:20","nodeType":"YulAssignment","src":"1525:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1537:9:20","nodeType":"YulIdentifier","src":"1537:9:20"},{"kind":"number","nativeSrc":"1548:2:20","nodeType":"YulLiteral","src":"1548:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1533:3:20","nodeType":"YulIdentifier","src":"1533:3:20"},"nativeSrc":"1533:18:20","nodeType":"YulFunctionCall","src":"1533:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1525:4:20","nodeType":"YulIdentifier","src":"1525:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1601:6:20","nodeType":"YulIdentifier","src":"1601:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"1614:9:20","nodeType":"YulIdentifier","src":"1614:9:20"},{"kind":"number","nativeSrc":"1625:1:20","nodeType":"YulLiteral","src":"1625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1610:3:20","nodeType":"YulIdentifier","src":"1610:3:20"},"nativeSrc":"1610:17:20","nodeType":"YulFunctionCall","src":"1610:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"1561:39:20","nodeType":"YulIdentifier","src":"1561:39:20"},"nativeSrc":"1561:67:20","nodeType":"YulFunctionCall","src":"1561:67:20"},"nativeSrc":"1561:67:20","nodeType":"YulExpressionStatement","src":"1561:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1421:214:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1487:9:20","nodeType":"YulTypedName","src":"1487:9:20","type":""},{"name":"value0","nativeSrc":"1499:6:20","nodeType":"YulTypedName","src":"1499:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1510:4:20","nodeType":"YulTypedName","src":"1510:4:20","type":""}],"src":"1421:214:20"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101f1565b600060019054906101000a900460ff16156100a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009e9061019a565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff16146101155760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff60405161010c91906101d6565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b6000610184602783610117565b915061018f82610128565b604082019050919050565b600060208201905081810360008301526101b381610177565b9050919050565b600060ff82169050919050565b6101d0816101ba565b82525050565b60006020820190506101eb60008301846101c7565b92915050565b6080516137886102286000396000818161042a015281816104b80152818161068c0152818161071a01526107ca01526137886000f3fe6080604052600436106100e15760003560e01c8063871b62361161007f578063d57bde7911610059578063d57bde7914610279578063d98b9bb5146102a7578063f2fde38b146102c3578063fe67a54b146102ec576100e8565b8063871b6236146101f55780638da5cb5b1461021e578063c2c042ca14610249576100e8565b80634979440a116100bb5780634979440a1461016c5780634f1ef2861461019757806352d1902d146101b3578063715018a6146101de576100e8565b806304de63a5146100ed5780632630c12f146101185780633659cfe614610143576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610102610303565b60405161010f919061235e565b60405180910390f35b34801561012457600080fd5b5061012d610402565b60405161013a91906123d8565b60405180910390f35b34801561014f57600080fd5b5061016a60048036038101906101659190612433565b610428565b005b34801561017857600080fd5b506101816105b0565b60405161018e91906124b5565b60405180910390f35b6101b160048036038101906101ac9190612616565b61068a565b005b3480156101bf57600080fd5b506101c86107c6565b6040516101d5919061268b565b60405180910390f35b3480156101ea57600080fd5b506101f361087f565b005b34801561020157600080fd5b5061021c600480360381019061021791906126d2565b610893565b005b34801561022a57600080fd5b50610233610d1f565b604051610240919061276e565b60405180910390f35b34801561025557600080fd5b5061025e610d49565b604051610270969594939291906127a7565b60405180910390f35b34801561028557600080fd5b5061028e610dc0565b60405161029e9493929190612808565b60405180910390f35b6102c160048036038101906102bc919061284d565b610e1e565b005b3480156102cf57600080fd5b506102ea60048036038101906102e59190612433565b6115d4565b005b3480156102f857600080fd5b50610301611657565b005b61030b6121b6565b60cd6040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905090565b60d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90612910565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104f5611aac565b73ffffffffffffffffffffffffffffffffffffffff161461054b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610542906129a2565b60405180910390fd5b61055481611b03565b6105ad81600067ffffffffffffffff811115610573576105726124eb565b5b6040519080825280601f01601f1916602001820160405280156105a55781602001600182028036833780820191505090505b506000611b0e565b50565b6105b861221a565b60c96040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481525050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f90612910565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610757611aac565b73ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a4906129a2565b60405180910390fd5b6107b682611b03565b6107c282826001611b0e565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90612a34565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610887611c7c565b6108916000611cfa565b565b60008060019054906101000a900460ff161590508080156108c45750600160008054906101000a900460ff1660ff16105b806108f157506108d330611dc0565b1580156108f05750600160008054906101000a900460ff1660ff16145b5b610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790612ac6565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561096d576001600060016101000a81548160ff0219169083151502179055505b610975611de3565b61097d611e3c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e390612b32565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290612b9e565b60405180910390fd5b42841015610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590612c0a565b60405180910390fd5b838311610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad790612c9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690612d08565b60405180910390fd5b6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581525060cd60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508160d360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d165760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610d0d9190612d70565b60405180910390a15b50505050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cd8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16905086565b60c98060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60cd60030154421015610e66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5d90612dd7565b60405180910390fd5b60cd60040154421115610eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea590612e43565b60405180910390fd5b60cd60050160009054906101000a900460ff1615610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612eaf565b60405180910390fd5b60008111610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90612f41565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106157813414610fbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb290612fad565b60405180910390fd5b60d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed6000846040518363ffffffff1660e01b8152600401611019929190612fcd565b602060405180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a919061300b565b90506111c6565b600034146110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90613084565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110e1939291906130a4565b6020604051808303816000875af1158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190613107565b5060d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed84846040518363ffffffff1660e01b8152600401611182929190612fcd565b602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c3919061300b565b90505b60008060c96002015411156112a05760d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b815260040161125c929190612fcd565b602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d919061300b565b90505b8082116112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d9906131a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114da57600073ffffffffffffffffffffffffffffffffffffffff1660c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361140a5760c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60c9600201549081150290604051600060405180830381858888f19350505050158015611404573d6000803e3d6000fd5b506114d9565b60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b8152600401611494929190612fcd565b6020604051808303816000875af11580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d79190613107565b505b5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525060c960008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015590505050505050565b6115dc611c7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290613238565b60405180910390fd5b61165481611cfa565b50565b60cd60050160009054906101000a900460ff16156116aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a190612e43565b60405180910390fd5b60cd60040154421015806116d4575060cd6003015442101580156116d35750600060c960020154115b5b611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170a906132a4565b60405180910390fd5b600160cd60050160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff1660c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119eb5760cd60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660cd600101546040518463ffffffff1660e01b8152600401611816939291906130a4565b600060405180830381600087803b15801561183057600080fd5b505af1158015611844573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff1660c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119175760cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60c9600201549081150290604051600060405180830381858888f19350505050158015611911573d6000803e3d6000fd5b506119e6565b60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b81526004016119a1929190612fcd565b6020604051808303816000875af11580156119c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e49190613107565b505b611aaa565b60cd60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660cd600101546040518463ffffffff1660e01b8152600401611a77939291906130a4565b600060405180830381600087803b158015611a9157600080fd5b505af1158015611aa5573d6000803e3d6000fd5b505050505b565b6000611ada7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e8d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611b0b611c7c565b50565b611b3a7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611e97565b60000160009054906101000a900460ff1615611b5e57611b5983611ea1565b611c77565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611bc657506040513d601f19601f82011682018060405250810190611bc391906132f0565b60015b611c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bfc9061338f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6190613421565b60405180910390fd5b50611c76838383611f5a565b5b505050565b611c84611f86565b73ffffffffffffffffffffffffffffffffffffffff16611ca2610d1f565b73ffffffffffffffffffffffffffffffffffffffff1614611cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cef9061348d565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e299061351f565b60405180910390fd5b611e3a611f8e565b565b600060019054906101000a900460ff16611e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e829061351f565b60405180910390fd5b565b6000819050919050565b6000819050919050565b611eaa81611dc0565b611ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee0906135b1565b60405180910390fd5b80611f167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e8d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611f6383611fef565b600082511180611f705750805b15611f8157611f7f838361203e565b505b505050565b600033905090565b600060019054906101000a900460ff16611fdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd49061351f565b60405180910390fd5b611fed611fe8611f86565b611cfa565b565b611ff881611ea1565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060612063838360405180606001604052806027815260200161372c6027913961206b565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516120959190613642565b600060405180830381855af49150503d80600081146120d0576040519150601f19603f3d011682016040523d82523d6000602084013e6120d5565b606091505b50915091506120e6868383876120f1565b925050509392505050565b6060831561215357600083510361214b5761210b85611dc0565b61214a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612141906136a5565b60405180910390fd5b5b82905061215e565b61215d8383612166565b5b949350505050565b6000825111156121795781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ad9190613709565b60405180910390fd5b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122998261226e565b9050919050565b6122a98161228e565b82525050565b6000819050919050565b6122c2816122af565b82525050565b60008115159050919050565b6122dd816122c8565b82525050565b60c0820160008201516122f960008501826122a0565b50602082015161230c60208501826122b9565b50604082015161231f60408501826122a0565b50606082015161233260608501826122b9565b50608082015161234560808501826122b9565b5060a082015161235860a08501826122d4565b50505050565b600060c08201905061237360008301846122e3565b92915050565b6000819050919050565b600061239e6123996123948461226e565b612379565b61226e565b9050919050565b60006123b082612383565b9050919050565b60006123c2826123a5565b9050919050565b6123d2816123b7565b82525050565b60006020820190506123ed60008301846123c9565b92915050565b6000604051905090565b600080fd5b600080fd5b6124108161228e565b811461241b57600080fd5b50565b60008135905061242d81612407565b92915050565b600060208284031215612449576124486123fd565b5b60006124578482850161241e565b91505092915050565b60808201600082015161247660008501826122a0565b50602082015161248960208501826122a0565b50604082015161249c60408501826122b9565b5060608201516124af60608501826122b9565b50505050565b60006080820190506124ca6000830184612460565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612523826124da565b810181811067ffffffffffffffff82111715612542576125416124eb565b5b80604052505050565b60006125556123f3565b9050612561828261251a565b919050565b600067ffffffffffffffff821115612581576125806124eb565b5b61258a826124da565b9050602081019050919050565b82818337600083830152505050565b60006125b96125b484612566565b61254b565b9050828152602081018484840111156125d5576125d46124d5565b5b6125e0848285612597565b509392505050565b600082601f8301126125fd576125fc6124d0565b5b813561260d8482602086016125a6565b91505092915050565b6000806040838503121561262d5761262c6123fd565b5b600061263b8582860161241e565b925050602083013567ffffffffffffffff81111561265c5761265b612402565b5b612668858286016125e8565b9150509250929050565b6000819050919050565b61268581612672565b82525050565b60006020820190506126a0600083018461267c565b92915050565b6126af816122af565b81146126ba57600080fd5b50565b6000813590506126cc816126a6565b92915050565b60008060008060008060c087890312156126ef576126ee6123fd565b5b60006126fd89828a0161241e565b965050602061270e89828a016126bd565b955050604061271f89828a0161241e565b945050606061273089828a016126bd565b935050608061274189828a016126bd565b92505060a061275289828a0161241e565b9150509295509295509295565b6127688161228e565b82525050565b6000602082019050612783600083018461275f565b92915050565b612792816122af565b82525050565b6127a1816122c8565b82525050565b600060c0820190506127bc600083018961275f565b6127c96020830188612789565b6127d6604083018761275f565b6127e36060830186612789565b6127f06080830185612789565b6127fd60a0830184612798565b979650505050505050565b600060808201905061281d600083018761275f565b61282a602083018661275f565b6128376040830185612789565b6128446060830184612789565b95945050505050565b60008060408385031215612864576128636123fd565b5b60006128728582860161241e565b9250506020612883858286016126bd565b9150509250929050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006128fa602c8361288d565b91506129058261289e565b604082019050919050565b60006020820190508181036000830152612929816128ed565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b600061298c602c8361288d565b915061299782612930565b604082019050919050565b600060208201905081810360008301526129bb8161297f565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000612a1e60388361288d565b9150612a29826129c2565b604082019050919050565b60006020820190508181036000830152612a4d81612a11565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612ab0602e8361288d565b9150612abb82612a54565b604082019050919050565b60006020820190508181036000830152612adf81612aa3565b9050919050565b7f496e76616c6964204e465420636f6e7472616374206164647265737300000000600082015250565b6000612b1c601c8361288d565b9150612b2782612ae6565b602082019050919050565b60006020820190508181036000830152612b4b81612b0f565b9050919050565b7f496e76616c69642073656c6c6572206164647265737300000000000000000000600082015250565b6000612b8860168361288d565b9150612b9382612b52565b602082019050919050565b60006020820190508181036000830152612bb781612b7b565b9050919050565b7f53746172742074696d65206d75737420626520696e2074686520667574757265600082015250565b6000612bf460208361288d565b9150612bff82612bbe565b602082019050919050565b60006020820190508181036000830152612c2381612be7565b9050919050565b7f456e642074696d65206d7573742062652061667465722073746172742074696d60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8660218361288d565b9150612c9182612c2a565b604082019050919050565b60006020820190508181036000830152612cb581612c79565b9050919050565b7f496e76616c6964207072696365206f7261636c65206164647265737300000000600082015250565b6000612cf2601c8361288d565b9150612cfd82612cbc565b602082019050919050565b60006020820190508181036000830152612d2181612ce5565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612d5a612d55612d5084612d28565b612379565b612d32565b9050919050565b612d6a81612d3f565b82525050565b6000602082019050612d856000830184612d61565b92915050565b7f41756374696f6e206e6f74207374617274656420796574000000000000000000600082015250565b6000612dc160178361288d565b9150612dcc82612d8b565b602082019050919050565b60006020820190508181036000830152612df081612db4565b9050919050565b7f41756374696f6e20616c726561647920656e6465640000000000000000000000600082015250565b6000612e2d60158361288d565b9150612e3882612df7565b602082019050919050565b60006020820190508181036000830152612e5c81612e20565b9050919050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000612e9960118361288d565b9150612ea482612e63565b602082019050919050565b60006020820190508181036000830152612ec881612e8c565b9050919050565b7f42696420616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000612f2b60248361288d565b9150612f3682612ecf565b604082019050919050565b60006020820190508181036000830152612f5a81612f1e565b9050919050565b7f45544820616d6f756e74206d69736d6174636800000000000000000000000000600082015250565b6000612f9760138361288d565b9150612fa282612f61565b602082019050919050565b60006020820190508181036000830152612fc681612f8a565b9050919050565b6000604082019050612fe2600083018561275f565b612fef6020830184612789565b9392505050565b600081519050613005816126a6565b92915050565b600060208284031215613021576130206123fd565b5b600061302f84828501612ff6565b91505092915050565b7f455448206e6f7420616363657074656420666f72204552433230206269647300600082015250565b600061306e601f8361288d565b915061307982613038565b602082019050919050565b6000602082019050818103600083015261309d81613061565b9050919050565b60006060820190506130b9600083018661275f565b6130c6602083018561275f565b6130d36040830184612789565b949350505050565b6130e4816122c8565b81146130ef57600080fd5b50565b600081519050613101816130db565b92915050565b60006020828403121561311d5761311c6123fd565b5b600061312b848285016130f2565b91505092915050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b6000613190602b8361288d565b915061319b82613134565b604082019050919050565b600060208201905081810360008301526131bf81613183565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061322260268361288d565b915061322d826131c6565b604082019050919050565b6000602082019050818103600083015261325181613215565b9050919050565b7f41756374696f6e206e6f7420656e646564207965740000000000000000000000600082015250565b600061328e60158361288d565b915061329982613258565b602082019050919050565b600060208201905081810360008301526132bd81613281565b9050919050565b6132cd81612672565b81146132d857600080fd5b50565b6000815190506132ea816132c4565b92915050565b600060208284031215613306576133056123fd565b5b6000613314848285016132db565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000613379602e8361288d565b91506133848261331d565b604082019050919050565b600060208201905081810360008301526133a88161336c565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b600061340b60298361288d565b9150613416826133af565b604082019050919050565b6000602082019050818103600083015261343a816133fe565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061347760208361288d565b915061348282613441565b602082019050919050565b600060208201905081810360008301526134a68161346a565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613509602b8361288d565b9150613514826134ad565b604082019050919050565b60006020820190508181036000830152613538816134fc565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061359b602d8361288d565b91506135a68261353f565b604082019050919050565b600060208201905081810360008301526135ca8161358e565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156136055780820151818401526020810190506135ea565b60008484015250505050565b600061361c826135d1565b61362681856135dc565b93506136368185602086016135e7565b80840191505092915050565b600061364e8284613611565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061368f601d8361288d565b915061369a82613659565b602082019050919050565b600060208201905081810360008301526136be81613682565b9050919050565b600081519050919050565b60006136db826136c5565b6136e5818561288d565b93506136f58185602086016135e7565b6136fe816124da565b840191505092915050565b6000602082019050818103600083015261372381846136d0565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207d609c61f0ac0a557941610e4d1dc8d72d2170379ca81afe2c38fc5bc51d7be364736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x115 JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184 PUSH1 0x27 DUP4 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F DUP3 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3 DUP2 PUSH2 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3788 PUSH2 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x42A ADD MSTORE DUP2 DUP2 PUSH2 0x4B8 ADD MSTORE DUP2 DUP2 PUSH2 0x68C ADD MSTORE DUP2 DUP2 PUSH2 0x71A ADD MSTORE PUSH2 0x7CA ADD MSTORE PUSH2 0x3788 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x871B6236 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD57BDE79 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD98B9BB5 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x2EC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x871B6236 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xC2C042CA EQ PUSH2 0x249 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x4979440A GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x4979440A EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x4DE63A5 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x143 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x26D2 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x284D JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x1657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F5 PUSH2 0x1AAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x5AD DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x573 JUMPI PUSH2 0x572 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0x1B0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x221A JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x757 PUSH2 0x1AAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x7C2 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1B0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP1 PUSH2 0x2A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x891 PUSH1 0x0 PUSH2 0x1CFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x8F1 JUMPI POP PUSH2 0x8D3 ADDRESS PUSH2 0x1DC0 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x8F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x975 PUSH2 0x1DE3 JUMP JUMPDEST PUSH2 0x97D PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x2C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 GT PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD7 SWAP1 PUSH2 0x2C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x2D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xCD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xD3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x2D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCD DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0xC9 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF8 SWAP1 PUSH2 0x2EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP1 PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1061 JUMPI DUP2 CALLVALUE EQ PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1100 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1182 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC9 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 GT PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D9 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14DA JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140A JUMPI PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xC9 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0xC9 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15DC PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1642 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1654 DUP2 PUSH2 0x1CFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x16D4 JUMPI POP PUSH1 0xCD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x0 PUSH1 0xC9 PUSH1 0x2 ADD SLOAD GT JUMPDEST JUMPDEST PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19EB JUMPI PUSH1 0xCD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1816 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1844 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1917 JUMPI PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xC9 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E4 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1C7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B3A PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B5E JUMPI PUSH2 0x1B59 DUP4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x1C77 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1BC6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFC SWAP1 PUSH2 0x338F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C61 SWAP1 PUSH2 0x3421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1C76 DUP4 DUP4 DUP4 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C84 PUSH2 0x1F86 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA2 PUSH2 0xD1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEF SWAP1 PUSH2 0x348D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E29 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E3A PUSH2 0x1F8E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E82 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP1 PUSH2 0x35B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F16 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1F63 DUP4 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1F70 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1F81 JUMPI PUSH2 0x1F7F DUP4 DUP4 PUSH2 0x203E JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD4 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FED PUSH2 0x1FE8 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x1CFA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2063 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x372C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2095 SWAP2 SWAP1 PUSH2 0x3642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20E6 DUP7 DUP4 DUP4 DUP8 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2153 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x214B JUMPI PUSH2 0x210B DUP6 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x214A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2141 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x215E JUMP JUMPDEST PUSH2 0x215D DUP4 DUP4 PUSH2 0x2166 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2179 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AD SWAP2 SWAP1 PUSH2 0x3709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2299 DUP3 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22F9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x230C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x231F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2332 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2345 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2358 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x22D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2373 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E PUSH2 0x2399 PUSH2 0x2394 DUP5 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x226E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B0 DUP3 PUSH2 0x2383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C2 DUP3 PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D2 DUP2 PUSH2 0x23B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2410 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP2 EQ PUSH2 0x241B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242D DUP2 PUSH2 0x2407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2449 JUMPI PUSH2 0x2448 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP5 DUP3 DUP6 ADD PUSH2 0x241E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2476 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2489 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x249C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24AF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2523 DUP3 PUSH2 0x24DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2555 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2561 DUP3 DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2581 JUMPI PUSH2 0x2580 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH2 0x258A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B9 PUSH2 0x25B4 DUP5 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0x254B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D4 PUSH2 0x24D5 JUMP JUMPDEST JUMPDEST PUSH2 0x25E0 DUP5 DUP3 DUP6 PUSH2 0x2597 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25FD JUMPI PUSH2 0x25FC PUSH2 0x24D0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x260D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x262D JUMPI PUSH2 0x262C PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263B DUP6 DUP3 DUP7 ADD PUSH2 0x241E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265B PUSH2 0x2402 JUMP JUMPDEST JUMPDEST PUSH2 0x2668 DUP6 DUP3 DUP7 ADD PUSH2 0x25E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2685 DUP2 PUSH2 0x2672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x267C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26AF DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP2 EQ PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26CC DUP2 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26FD DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x270E DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x271F DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2730 DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2741 DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2752 DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x2768 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2783 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x275F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2792 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27A1 DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x27BC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27C9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27D6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27E3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27F0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27FD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2798 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x281D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x282A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2837 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH2 0x2863 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2872 DUP6 DUP3 DUP7 ADD PUSH2 0x241E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2883 DUP6 DUP3 DUP7 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FA PUSH1 0x2C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2905 DUP3 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2929 DUP2 PUSH2 0x28ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298C PUSH1 0x2C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2997 DUP3 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BB DUP2 PUSH2 0x297F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1E PUSH1 0x38 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A29 DUP3 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A4D DUP2 PUSH2 0x2A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB0 PUSH1 0x2E DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABB DUP3 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADF DUP2 PUSH2 0x2AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204E465420636F6E7472616374206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1C PUSH1 0x1C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B27 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656C6C6572206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B88 PUSH1 0x16 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP3 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BB7 DUP2 PUSH2 0x2B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 PUSH1 0x20 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFF DUP3 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C23 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C86 PUSH1 0x21 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C91 DUP3 PUSH2 0x2C2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB5 DUP2 PUSH2 0x2C79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207072696365206F7261636C65206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF2 PUSH1 0x1C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFD DUP3 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D21 DUP2 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5A PUSH2 0x2D55 PUSH2 0x2D50 DUP5 PUSH2 0x2D28 JUMP JUMPDEST PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x2D32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D6A DUP2 PUSH2 0x2D3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E206E6F74207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC1 PUSH1 0x17 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCC DUP3 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF0 DUP2 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20616C726561647920656E6465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2D PUSH1 0x15 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E38 DUP3 PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5C DUP2 PUSH2 0x2E20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E99 PUSH1 0x11 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA4 DUP3 PUSH2 0x2E63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC8 DUP2 PUSH2 0x2E8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42696420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2B PUSH1 0x24 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2F36 DUP3 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F5A DUP2 PUSH2 0x2F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F97 PUSH1 0x13 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA2 DUP3 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC6 DUP2 PUSH2 0x2F8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2FEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3005 DUP2 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3021 JUMPI PUSH2 0x3020 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302F DUP5 DUP3 DUP6 ADD PUSH2 0x2FF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448206E6F7420616363657074656420666F72204552433230206269647300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x306E PUSH1 0x1F DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3079 DUP3 PUSH2 0x3038 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309D DUP2 PUSH2 0x3061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30B9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x30C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x30D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30E4 DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x30EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3101 DUP2 PUSH2 0x30DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x311D JUMPI PUSH2 0x311C PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x312B DUP5 DUP3 DUP6 ADD PUSH2 0x30F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3190 PUSH1 0x2B DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x319B DUP3 PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31BF DUP2 PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3222 PUSH1 0x26 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x322D DUP3 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3251 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E206E6F7420656E646564207965740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328E PUSH1 0x15 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3299 DUP3 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BD DUP2 PUSH2 0x3281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32CD DUP2 PUSH2 0x2672 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32EA DUP2 PUSH2 0x32C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3314 DUP5 DUP3 DUP6 ADD PUSH2 0x32DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3379 PUSH1 0x2E DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3384 DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A8 DUP2 PUSH2 0x336C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340B PUSH1 0x29 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3416 DUP3 PUSH2 0x33AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x343A DUP2 PUSH2 0x33FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3477 PUSH1 0x20 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3482 DUP3 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A6 DUP2 PUSH2 0x346A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3509 PUSH1 0x2B DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3514 DUP3 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3538 DUP2 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359B PUSH1 0x2D DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x35A6 DUP3 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CA DUP2 PUSH2 0x358E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3605 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361C DUP3 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x3626 DUP2 DUP6 PUSH2 0x35DC JUMP JUMPDEST SWAP4 POP PUSH2 0x3636 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x35E7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364E DUP3 DUP5 PUSH2 0x3611 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368F PUSH1 0x1D DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x369A DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BE DUP2 PUSH2 0x3682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36DB DUP3 PUSH2 0x36C5 JUMP JUMPDEST PUSH2 0x36E5 DUP2 DUP6 PUSH2 0x288D JUMP JUMPDEST SWAP4 POP PUSH2 0x36F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x36FE DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3723 DUP2 DUP5 PUSH2 0x36D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212207D609C PUSH2 0xF0AC EXP SSTORE PUSH26 0x41610E4D1DC8D72D2170379CA81AFE2C38FC5BC51D7BE364736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"432:5596:17:-:0;;;1198:4:7;1155:48;;;;;;;;;1459:53:17;;;;;;;;;;1483:22;:20;;;:22;;:::i;:::-;432:5596;;5939:280:6;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:20:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;432:5596:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_2530":{"entryPoint":null,"id":2530,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_73":{"entryPoint":7651,"id":73,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_84":{"entryPoint":8078,"id":84,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_777":{"entryPoint":7740,"id":777,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2526":{"entryPoint":6915,"id":2526,"parameterSlots":1,"returnSlots":0},"@_checkOwner_115":{"entryPoint":7292,"id":115,"parameterSlots":0,"returnSlots":0},"@_getImplementation_255":{"entryPoint":6828,"id":255,"parameterSlots":0,"returnSlots":1},"@_msgSender_1208":{"entryPoint":8070,"id":1208,"parameterSlots":0,"returnSlots":1},"@_revert_1179":{"entryPoint":8550,"id":1179,"parameterSlots":2,"returnSlots":0},"@_setImplementation_279":{"entryPoint":7841,"id":279,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_172":{"entryPoint":7418,"id":172,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_377":{"entryPoint":6926,"id":377,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_324":{"entryPoint":8026,"id":324,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_294":{"entryPoint":8175,"id":294,"parameterSlots":1,"returnSlots":0},"@auctionItem_2110":{"entryPoint":3401,"id":2110,"parameterSlots":0,"returnSlots":0},"@endAuction_2497":{"entryPoint":5719,"id":2497,"parameterSlots":0,"returnSlots":0},"@functionDelegateCall_1067":{"entryPoint":8254,"id":1067,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1096":{"entryPoint":8299,"id":1096,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1263":{"entryPoint":7821,"id":1263,"parameterSlots":1,"returnSlots":1},"@getAuctionItem_2517":{"entryPoint":771,"id":2517,"parameterSlots":0,"returnSlots":1},"@getBooleanSlot_1274":{"entryPoint":7831,"id":1274,"parameterSlots":1,"returnSlots":1},"@getHighestBid_2507":{"entryPoint":1456,"id":2507,"parameterSlots":0,"returnSlots":1},"@highestBid_2107":{"entryPoint":3520,"id":2107,"parameterSlots":0,"returnSlots":0},"@initialize_2208":{"entryPoint":2195,"id":2208,"parameterSlots":6,"returnSlots":0},"@isContract_868":{"entryPoint":7616,"id":868,"parameterSlots":1,"returnSlots":1},"@owner_101":{"entryPoint":3359,"id":101,"parameterSlots":0,"returnSlots":1},"@placeBid_2387":{"entryPoint":3614,"id":2387,"parameterSlots":2,"returnSlots":0},"@priceOracle_2113":{"entryPoint":1026,"id":2113,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_795":{"entryPoint":1990,"id":795,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_129":{"entryPoint":2175,"id":129,"parameterSlots":0,"returnSlots":0},"@transferOwnership_152":{"entryPoint":5588,"id":152,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_838":{"entryPoint":1674,"id":838,"parameterSlots":2,"returnSlots":0},"@upgradeTo_817":{"entryPoint":1064,"id":817,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1135":{"entryPoint":8433,"id":1135,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9638,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":12530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":13019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":9750,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10317,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_address":{"entryPoint":9938,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":12551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":13040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":8864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":8916,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10136,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9852,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_PriceOracle_$2956_to_t_address_fromStack":{"entryPoint":9161,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":11617,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227_to_t_string_memory_ptr_fromStack":{"entryPoint":12385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack":{"entryPoint":12675,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006_to_t_string_memory_ptr_fromStack":{"entryPoint":11808,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack":{"entryPoint":10477,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570_to_t_string_memory_ptr_fromStack":{"entryPoint":12062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack":{"entryPoint":10623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack":{"entryPoint":11916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00_to_t_string_memory_ptr_fromStack":{"entryPoint":12929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack":{"entryPoint":12170,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack":{"entryPoint":10769,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack":{"entryPoint":13310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":10915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack":{"entryPoint":13164,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack":{"entryPoint":11239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":13710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13418,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31_to_t_string_memory_ptr_fromStack":{"entryPoint":11023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3_to_t_string_memory_ptr_fromStack":{"entryPoint":11493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4_to_t_string_memory_ptr_fromStack":{"entryPoint":11131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":13954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack":{"entryPoint":11385,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":13564,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2_to_t_string_memory_ptr_fromStack":{"entryPoint":11700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_AuctionItem_$2095_memory_ptr_to_t_struct$_AuctionItem_$2095_memory_ptr_fromStack":{"entryPoint":8931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Bid_$2104_memory_ptr_to_t_struct$_Bid_$2104_memory_ptr_fromStack":{"entryPoint":9312,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":12452,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10248,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":12237,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":10151,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_PriceOracle_$2956__to_t_address__fromStack_reversed":{"entryPoint":9176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":11632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14089,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11843,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10512,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12205,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10804,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10950,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13199,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13453,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13989,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13599,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_AuctionItem_$2095_memory_ptr__to_t_struct$_AuctionItem_$2095_memory_ptr__fromStack_reversed":{"entryPoint":9054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Bid_$2104_memory_ptr__to_t_struct$_Bid_$2104_memory_ptr__fromStack_reversed":{"entryPoint":9397,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9547,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9203,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9574,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":13777,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14021,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13788,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10381,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":8846,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8904,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9842,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":11560,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8814,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11570,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PriceOracle_$2956_to_t_address":{"entryPoint":9143,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":11583,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":9125,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":9091,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9623,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":13799,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":9498,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9081,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":9451,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9424,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9429,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9213,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9434,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227":{"entryPoint":12344,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":12742,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9":{"entryPoint":12596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006":{"entryPoint":11767,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb":{"entryPoint":10398,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570":{"entryPoint":11983,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434":{"entryPoint":10544,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5":{"entryPoint":11875,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00":{"entryPoint":12888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7":{"entryPoint":12129,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4":{"entryPoint":10690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c":{"entryPoint":13231,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":10836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24":{"entryPoint":13085,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466":{"entryPoint":11198,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":13631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13377,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31":{"entryPoint":10982,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3":{"entryPoint":11452,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4":{"entryPoint":11090,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":13913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5":{"entryPoint":11306,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":13485,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2":{"entryPoint":11659,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9223,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":12507,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12996,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9894,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:42106:20","nodeType":"YulBlock","src":"0:42106:20","statements":[{"body":{"nativeSrc":"52:81:20","nodeType":"YulBlock","src":"52:81:20","statements":[{"nativeSrc":"62:65:20","nodeType":"YulAssignment","src":"62:65:20","value":{"arguments":[{"name":"value","nativeSrc":"77:5:20","nodeType":"YulIdentifier","src":"77:5:20"},{"kind":"number","nativeSrc":"84:42:20","nodeType":"YulLiteral","src":"84:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:20","nodeType":"YulIdentifier","src":"73:3:20"},"nativeSrc":"73:54:20","nodeType":"YulFunctionCall","src":"73:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:126:20"},{"body":{"nativeSrc":"184:51:20","nodeType":"YulBlock","src":"184:51:20","statements":[{"nativeSrc":"194:35:20","nodeType":"YulAssignment","src":"194:35:20","value":{"arguments":[{"name":"value","nativeSrc":"223:5:20","nodeType":"YulIdentifier","src":"223:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:20","nodeType":"YulIdentifier","src":"205:17:20"},"nativeSrc":"205:24:20","nodeType":"YulFunctionCall","src":"205:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:20","nodeType":"YulIdentifier","src":"194:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:20","nodeType":"YulTypedName","src":"166:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:20","nodeType":"YulTypedName","src":"176:7:20","type":""}],"src":"139:96:20"},{"body":{"nativeSrc":"296:53:20","nodeType":"YulBlock","src":"296:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"313:3:20","nodeType":"YulIdentifier","src":"313:3:20"},{"arguments":[{"name":"value","nativeSrc":"336:5:20","nodeType":"YulIdentifier","src":"336:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"318:17:20","nodeType":"YulIdentifier","src":"318:17:20"},"nativeSrc":"318:24:20","nodeType":"YulFunctionCall","src":"318:24:20"}],"functionName":{"name":"mstore","nativeSrc":"306:6:20","nodeType":"YulIdentifier","src":"306:6:20"},"nativeSrc":"306:37:20","nodeType":"YulFunctionCall","src":"306:37:20"},"nativeSrc":"306:37:20","nodeType":"YulExpressionStatement","src":"306:37:20"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"241:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"284:5:20","nodeType":"YulTypedName","src":"284:5:20","type":""},{"name":"pos","nativeSrc":"291:3:20","nodeType":"YulTypedName","src":"291:3:20","type":""}],"src":"241:108:20"},{"body":{"nativeSrc":"400:32:20","nodeType":"YulBlock","src":"400:32:20","statements":[{"nativeSrc":"410:16:20","nodeType":"YulAssignment","src":"410:16:20","value":{"name":"value","nativeSrc":"421:5:20","nodeType":"YulIdentifier","src":"421:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"410:7:20","nodeType":"YulIdentifier","src":"410:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"355:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"382:5:20","nodeType":"YulTypedName","src":"382:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"392:7:20","nodeType":"YulTypedName","src":"392:7:20","type":""}],"src":"355:77:20"},{"body":{"nativeSrc":"493:53:20","nodeType":"YulBlock","src":"493:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"510:3:20","nodeType":"YulIdentifier","src":"510:3:20"},{"arguments":[{"name":"value","nativeSrc":"533:5:20","nodeType":"YulIdentifier","src":"533:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"515:17:20","nodeType":"YulIdentifier","src":"515:17:20"},"nativeSrc":"515:24:20","nodeType":"YulFunctionCall","src":"515:24:20"}],"functionName":{"name":"mstore","nativeSrc":"503:6:20","nodeType":"YulIdentifier","src":"503:6:20"},"nativeSrc":"503:37:20","nodeType":"YulFunctionCall","src":"503:37:20"},"nativeSrc":"503:37:20","nodeType":"YulExpressionStatement","src":"503:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"438:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"481:5:20","nodeType":"YulTypedName","src":"481:5:20","type":""},{"name":"pos","nativeSrc":"488:3:20","nodeType":"YulTypedName","src":"488:3:20","type":""}],"src":"438:108:20"},{"body":{"nativeSrc":"594:48:20","nodeType":"YulBlock","src":"594:48:20","statements":[{"nativeSrc":"604:32:20","nodeType":"YulAssignment","src":"604:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"629:5:20","nodeType":"YulIdentifier","src":"629:5:20"}],"functionName":{"name":"iszero","nativeSrc":"622:6:20","nodeType":"YulIdentifier","src":"622:6:20"},"nativeSrc":"622:13:20","nodeType":"YulFunctionCall","src":"622:13:20"}],"functionName":{"name":"iszero","nativeSrc":"615:6:20","nodeType":"YulIdentifier","src":"615:6:20"},"nativeSrc":"615:21:20","nodeType":"YulFunctionCall","src":"615:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"604:7:20","nodeType":"YulIdentifier","src":"604:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"552:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"576:5:20","nodeType":"YulTypedName","src":"576:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"586:7:20","nodeType":"YulTypedName","src":"586:7:20","type":""}],"src":"552:90:20"},{"body":{"nativeSrc":"697:50:20","nodeType":"YulBlock","src":"697:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"714:3:20","nodeType":"YulIdentifier","src":"714:3:20"},{"arguments":[{"name":"value","nativeSrc":"734:5:20","nodeType":"YulIdentifier","src":"734:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"719:14:20","nodeType":"YulIdentifier","src":"719:14:20"},"nativeSrc":"719:21:20","nodeType":"YulFunctionCall","src":"719:21:20"}],"functionName":{"name":"mstore","nativeSrc":"707:6:20","nodeType":"YulIdentifier","src":"707:6:20"},"nativeSrc":"707:34:20","nodeType":"YulFunctionCall","src":"707:34:20"},"nativeSrc":"707:34:20","nodeType":"YulExpressionStatement","src":"707:34:20"}]},"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"648:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"685:5:20","nodeType":"YulTypedName","src":"685:5:20","type":""},{"name":"pos","nativeSrc":"692:3:20","nodeType":"YulTypedName","src":"692:3:20","type":""}],"src":"648:99:20"},{"body":{"nativeSrc":"941:1102:20","nodeType":"YulBlock","src":"941:1102:20","statements":[{"nativeSrc":"951:26:20","nodeType":"YulVariableDeclaration","src":"951:26:20","value":{"arguments":[{"name":"pos","nativeSrc":"967:3:20","nodeType":"YulIdentifier","src":"967:3:20"},{"kind":"number","nativeSrc":"972:4:20","nodeType":"YulLiteral","src":"972:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"963:3:20","nodeType":"YulIdentifier","src":"963:3:20"},"nativeSrc":"963:14:20","nodeType":"YulFunctionCall","src":"963:14:20"},"variables":[{"name":"tail","nativeSrc":"955:4:20","nodeType":"YulTypedName","src":"955:4:20","type":""}]},{"nativeSrc":"987:171:20","nodeType":"YulBlock","src":"987:171:20","statements":[{"nativeSrc":"1029:43:20","nodeType":"YulVariableDeclaration","src":"1029:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1059:5:20","nodeType":"YulIdentifier","src":"1059:5:20"},{"kind":"number","nativeSrc":"1066:4:20","nodeType":"YulLiteral","src":"1066:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"1055:3:20","nodeType":"YulIdentifier","src":"1055:3:20"},"nativeSrc":"1055:16:20","nodeType":"YulFunctionCall","src":"1055:16:20"}],"functionName":{"name":"mload","nativeSrc":"1049:5:20","nodeType":"YulIdentifier","src":"1049:5:20"},"nativeSrc":"1049:23:20","nodeType":"YulFunctionCall","src":"1049:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1033:12:20","nodeType":"YulTypedName","src":"1033:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1119:12:20","nodeType":"YulIdentifier","src":"1119:12:20"},{"arguments":[{"name":"pos","nativeSrc":"1137:3:20","nodeType":"YulIdentifier","src":"1137:3:20"},{"kind":"number","nativeSrc":"1142:4:20","nodeType":"YulLiteral","src":"1142:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"1133:3:20","nodeType":"YulIdentifier","src":"1133:3:20"},"nativeSrc":"1133:14:20","nodeType":"YulFunctionCall","src":"1133:14:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"1085:33:20","nodeType":"YulIdentifier","src":"1085:33:20"},"nativeSrc":"1085:63:20","nodeType":"YulFunctionCall","src":"1085:63:20"},"nativeSrc":"1085:63:20","nodeType":"YulExpressionStatement","src":"1085:63:20"}]},{"nativeSrc":"1168:167:20","nodeType":"YulBlock","src":"1168:167:20","statements":[{"nativeSrc":"1206:43:20","nodeType":"YulVariableDeclaration","src":"1206:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1236:5:20","nodeType":"YulIdentifier","src":"1236:5:20"},{"kind":"number","nativeSrc":"1243:4:20","nodeType":"YulLiteral","src":"1243:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1232:3:20","nodeType":"YulIdentifier","src":"1232:3:20"},"nativeSrc":"1232:16:20","nodeType":"YulFunctionCall","src":"1232:16:20"}],"functionName":{"name":"mload","nativeSrc":"1226:5:20","nodeType":"YulIdentifier","src":"1226:5:20"},"nativeSrc":"1226:23:20","nodeType":"YulFunctionCall","src":"1226:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1210:12:20","nodeType":"YulTypedName","src":"1210:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1296:12:20","nodeType":"YulIdentifier","src":"1296:12:20"},{"arguments":[{"name":"pos","nativeSrc":"1314:3:20","nodeType":"YulIdentifier","src":"1314:3:20"},{"kind":"number","nativeSrc":"1319:4:20","nodeType":"YulLiteral","src":"1319:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1310:3:20","nodeType":"YulIdentifier","src":"1310:3:20"},"nativeSrc":"1310:14:20","nodeType":"YulFunctionCall","src":"1310:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"1262:33:20","nodeType":"YulIdentifier","src":"1262:33:20"},"nativeSrc":"1262:63:20","nodeType":"YulFunctionCall","src":"1262:63:20"},"nativeSrc":"1262:63:20","nodeType":"YulExpressionStatement","src":"1262:63:20"}]},{"nativeSrc":"1345:166:20","nodeType":"YulBlock","src":"1345:166:20","statements":[{"nativeSrc":"1382:43:20","nodeType":"YulVariableDeclaration","src":"1382:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1412:5:20","nodeType":"YulIdentifier","src":"1412:5:20"},{"kind":"number","nativeSrc":"1419:4:20","nodeType":"YulLiteral","src":"1419:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"1408:3:20","nodeType":"YulIdentifier","src":"1408:3:20"},"nativeSrc":"1408:16:20","nodeType":"YulFunctionCall","src":"1408:16:20"}],"functionName":{"name":"mload","nativeSrc":"1402:5:20","nodeType":"YulIdentifier","src":"1402:5:20"},"nativeSrc":"1402:23:20","nodeType":"YulFunctionCall","src":"1402:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1386:12:20","nodeType":"YulTypedName","src":"1386:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1472:12:20","nodeType":"YulIdentifier","src":"1472:12:20"},{"arguments":[{"name":"pos","nativeSrc":"1490:3:20","nodeType":"YulIdentifier","src":"1490:3:20"},{"kind":"number","nativeSrc":"1495:4:20","nodeType":"YulLiteral","src":"1495:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"1486:3:20","nodeType":"YulIdentifier","src":"1486:3:20"},"nativeSrc":"1486:14:20","nodeType":"YulFunctionCall","src":"1486:14:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"1438:33:20","nodeType":"YulIdentifier","src":"1438:33:20"},"nativeSrc":"1438:63:20","nodeType":"YulFunctionCall","src":"1438:63:20"},"nativeSrc":"1438:63:20","nodeType":"YulExpressionStatement","src":"1438:63:20"}]},{"nativeSrc":"1521:169:20","nodeType":"YulBlock","src":"1521:169:20","statements":[{"nativeSrc":"1561:43:20","nodeType":"YulVariableDeclaration","src":"1561:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1591:5:20","nodeType":"YulIdentifier","src":"1591:5:20"},{"kind":"number","nativeSrc":"1598:4:20","nodeType":"YulLiteral","src":"1598:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"1587:3:20","nodeType":"YulIdentifier","src":"1587:3:20"},"nativeSrc":"1587:16:20","nodeType":"YulFunctionCall","src":"1587:16:20"}],"functionName":{"name":"mload","nativeSrc":"1581:5:20","nodeType":"YulIdentifier","src":"1581:5:20"},"nativeSrc":"1581:23:20","nodeType":"YulFunctionCall","src":"1581:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1565:12:20","nodeType":"YulTypedName","src":"1565:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1651:12:20","nodeType":"YulIdentifier","src":"1651:12:20"},{"arguments":[{"name":"pos","nativeSrc":"1669:3:20","nodeType":"YulIdentifier","src":"1669:3:20"},{"kind":"number","nativeSrc":"1674:4:20","nodeType":"YulLiteral","src":"1674:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"1665:3:20","nodeType":"YulIdentifier","src":"1665:3:20"},"nativeSrc":"1665:14:20","nodeType":"YulFunctionCall","src":"1665:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"1617:33:20","nodeType":"YulIdentifier","src":"1617:33:20"},"nativeSrc":"1617:63:20","nodeType":"YulFunctionCall","src":"1617:63:20"},"nativeSrc":"1617:63:20","nodeType":"YulExpressionStatement","src":"1617:63:20"}]},{"nativeSrc":"1700:167:20","nodeType":"YulBlock","src":"1700:167:20","statements":[{"nativeSrc":"1738:43:20","nodeType":"YulVariableDeclaration","src":"1738:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1768:5:20","nodeType":"YulIdentifier","src":"1768:5:20"},{"kind":"number","nativeSrc":"1775:4:20","nodeType":"YulLiteral","src":"1775:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"1764:3:20","nodeType":"YulIdentifier","src":"1764:3:20"},"nativeSrc":"1764:16:20","nodeType":"YulFunctionCall","src":"1764:16:20"}],"functionName":{"name":"mload","nativeSrc":"1758:5:20","nodeType":"YulIdentifier","src":"1758:5:20"},"nativeSrc":"1758:23:20","nodeType":"YulFunctionCall","src":"1758:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1742:12:20","nodeType":"YulTypedName","src":"1742:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1828:12:20","nodeType":"YulIdentifier","src":"1828:12:20"},{"arguments":[{"name":"pos","nativeSrc":"1846:3:20","nodeType":"YulIdentifier","src":"1846:3:20"},{"kind":"number","nativeSrc":"1851:4:20","nodeType":"YulLiteral","src":"1851:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"1842:3:20","nodeType":"YulIdentifier","src":"1842:3:20"},"nativeSrc":"1842:14:20","nodeType":"YulFunctionCall","src":"1842:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"1794:33:20","nodeType":"YulIdentifier","src":"1794:33:20"},"nativeSrc":"1794:63:20","nodeType":"YulFunctionCall","src":"1794:63:20"},"nativeSrc":"1794:63:20","nodeType":"YulExpressionStatement","src":"1794:63:20"}]},{"nativeSrc":"1877:159:20","nodeType":"YulBlock","src":"1877:159:20","statements":[{"nativeSrc":"1913:43:20","nodeType":"YulVariableDeclaration","src":"1913:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1943:5:20","nodeType":"YulIdentifier","src":"1943:5:20"},{"kind":"number","nativeSrc":"1950:4:20","nodeType":"YulLiteral","src":"1950:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"1939:3:20","nodeType":"YulIdentifier","src":"1939:3:20"},"nativeSrc":"1939:16:20","nodeType":"YulFunctionCall","src":"1939:16:20"}],"functionName":{"name":"mload","nativeSrc":"1933:5:20","nodeType":"YulIdentifier","src":"1933:5:20"},"nativeSrc":"1933:23:20","nodeType":"YulFunctionCall","src":"1933:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"1917:12:20","nodeType":"YulTypedName","src":"1917:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"1997:12:20","nodeType":"YulIdentifier","src":"1997:12:20"},{"arguments":[{"name":"pos","nativeSrc":"2015:3:20","nodeType":"YulIdentifier","src":"2015:3:20"},{"kind":"number","nativeSrc":"2020:4:20","nodeType":"YulLiteral","src":"2020:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"2011:3:20","nodeType":"YulIdentifier","src":"2011:3:20"},"nativeSrc":"2011:14:20","nodeType":"YulFunctionCall","src":"2011:14:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nativeSrc":"1969:27:20","nodeType":"YulIdentifier","src":"1969:27:20"},"nativeSrc":"1969:57:20","nodeType":"YulFunctionCall","src":"1969:57:20"},"nativeSrc":"1969:57:20","nodeType":"YulExpressionStatement","src":"1969:57:20"}]}]},"name":"abi_encode_t_struct$_AuctionItem_$2095_memory_ptr_to_t_struct$_AuctionItem_$2095_memory_ptr_fromStack","nativeSrc":"817:1226:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"928:5:20","nodeType":"YulTypedName","src":"928:5:20","type":""},{"name":"pos","nativeSrc":"935:3:20","nodeType":"YulTypedName","src":"935:3:20","type":""}],"src":"817:1226:20"},{"body":{"nativeSrc":"2205:183:20","nodeType":"YulBlock","src":"2205:183:20","statements":[{"nativeSrc":"2215:27:20","nodeType":"YulAssignment","src":"2215:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2227:9:20","nodeType":"YulIdentifier","src":"2227:9:20"},{"kind":"number","nativeSrc":"2238:3:20","nodeType":"YulLiteral","src":"2238:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"2223:3:20","nodeType":"YulIdentifier","src":"2223:3:20"},"nativeSrc":"2223:19:20","nodeType":"YulFunctionCall","src":"2223:19:20"},"variableNames":[{"name":"tail","nativeSrc":"2215:4:20","nodeType":"YulIdentifier","src":"2215:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2354:6:20","nodeType":"YulIdentifier","src":"2354:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2367:9:20","nodeType":"YulIdentifier","src":"2367:9:20"},{"kind":"number","nativeSrc":"2378:1:20","nodeType":"YulLiteral","src":"2378:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2363:3:20","nodeType":"YulIdentifier","src":"2363:3:20"},"nativeSrc":"2363:17:20","nodeType":"YulFunctionCall","src":"2363:17:20"}],"functionName":{"name":"abi_encode_t_struct$_AuctionItem_$2095_memory_ptr_to_t_struct$_AuctionItem_$2095_memory_ptr_fromStack","nativeSrc":"2252:101:20","nodeType":"YulIdentifier","src":"2252:101:20"},"nativeSrc":"2252:129:20","nodeType":"YulFunctionCall","src":"2252:129:20"},"nativeSrc":"2252:129:20","nodeType":"YulExpressionStatement","src":"2252:129:20"}]},"name":"abi_encode_tuple_t_struct$_AuctionItem_$2095_memory_ptr__to_t_struct$_AuctionItem_$2095_memory_ptr__fromStack_reversed","nativeSrc":"2049:339:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2177:9:20","nodeType":"YulTypedName","src":"2177:9:20","type":""},{"name":"value0","nativeSrc":"2189:6:20","nodeType":"YulTypedName","src":"2189:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2200:4:20","nodeType":"YulTypedName","src":"2200:4:20","type":""}],"src":"2049:339:20"},{"body":{"nativeSrc":"2426:28:20","nodeType":"YulBlock","src":"2426:28:20","statements":[{"nativeSrc":"2436:12:20","nodeType":"YulAssignment","src":"2436:12:20","value":{"name":"value","nativeSrc":"2443:5:20","nodeType":"YulIdentifier","src":"2443:5:20"},"variableNames":[{"name":"ret","nativeSrc":"2436:3:20","nodeType":"YulIdentifier","src":"2436:3:20"}]}]},"name":"identity","nativeSrc":"2394:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2412:5:20","nodeType":"YulTypedName","src":"2412:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2422:3:20","nodeType":"YulTypedName","src":"2422:3:20","type":""}],"src":"2394:60:20"},{"body":{"nativeSrc":"2520:82:20","nodeType":"YulBlock","src":"2520:82:20","statements":[{"nativeSrc":"2530:66:20","nodeType":"YulAssignment","src":"2530:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2588:5:20","nodeType":"YulIdentifier","src":"2588:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2570:17:20","nodeType":"YulIdentifier","src":"2570:17:20"},"nativeSrc":"2570:24:20","nodeType":"YulFunctionCall","src":"2570:24:20"}],"functionName":{"name":"identity","nativeSrc":"2561:8:20","nodeType":"YulIdentifier","src":"2561:8:20"},"nativeSrc":"2561:34:20","nodeType":"YulFunctionCall","src":"2561:34:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2543:17:20","nodeType":"YulIdentifier","src":"2543:17:20"},"nativeSrc":"2543:53:20","nodeType":"YulFunctionCall","src":"2543:53:20"},"variableNames":[{"name":"converted","nativeSrc":"2530:9:20","nodeType":"YulIdentifier","src":"2530:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2460:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2500:5:20","nodeType":"YulTypedName","src":"2500:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2510:9:20","nodeType":"YulTypedName","src":"2510:9:20","type":""}],"src":"2460:142:20"},{"body":{"nativeSrc":"2668:66:20","nodeType":"YulBlock","src":"2668:66:20","statements":[{"nativeSrc":"2678:50:20","nodeType":"YulAssignment","src":"2678:50:20","value":{"arguments":[{"name":"value","nativeSrc":"2722:5:20","nodeType":"YulIdentifier","src":"2722:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2691:30:20","nodeType":"YulIdentifier","src":"2691:30:20"},"nativeSrc":"2691:37:20","nodeType":"YulFunctionCall","src":"2691:37:20"},"variableNames":[{"name":"converted","nativeSrc":"2678:9:20","nodeType":"YulIdentifier","src":"2678:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"2608:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2648:5:20","nodeType":"YulTypedName","src":"2648:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2658:9:20","nodeType":"YulTypedName","src":"2658:9:20","type":""}],"src":"2608:126:20"},{"body":{"nativeSrc":"2820:66:20","nodeType":"YulBlock","src":"2820:66:20","statements":[{"nativeSrc":"2830:50:20","nodeType":"YulAssignment","src":"2830:50:20","value":{"arguments":[{"name":"value","nativeSrc":"2874:5:20","nodeType":"YulIdentifier","src":"2874:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"2843:30:20","nodeType":"YulIdentifier","src":"2843:30:20"},"nativeSrc":"2843:37:20","nodeType":"YulFunctionCall","src":"2843:37:20"},"variableNames":[{"name":"converted","nativeSrc":"2830:9:20","nodeType":"YulIdentifier","src":"2830:9:20"}]}]},"name":"convert_t_contract$_PriceOracle_$2956_to_t_address","nativeSrc":"2740:146:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2800:5:20","nodeType":"YulTypedName","src":"2800:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2810:9:20","nodeType":"YulTypedName","src":"2810:9:20","type":""}],"src":"2740:146:20"},{"body":{"nativeSrc":"2977:86:20","nodeType":"YulBlock","src":"2977:86:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2994:3:20","nodeType":"YulIdentifier","src":"2994:3:20"},{"arguments":[{"name":"value","nativeSrc":"3050:5:20","nodeType":"YulIdentifier","src":"3050:5:20"}],"functionName":{"name":"convert_t_contract$_PriceOracle_$2956_to_t_address","nativeSrc":"2999:50:20","nodeType":"YulIdentifier","src":"2999:50:20"},"nativeSrc":"2999:57:20","nodeType":"YulFunctionCall","src":"2999:57:20"}],"functionName":{"name":"mstore","nativeSrc":"2987:6:20","nodeType":"YulIdentifier","src":"2987:6:20"},"nativeSrc":"2987:70:20","nodeType":"YulFunctionCall","src":"2987:70:20"},"nativeSrc":"2987:70:20","nodeType":"YulExpressionStatement","src":"2987:70:20"}]},"name":"abi_encode_t_contract$_PriceOracle_$2956_to_t_address_fromStack","nativeSrc":"2892:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2965:5:20","nodeType":"YulTypedName","src":"2965:5:20","type":""},{"name":"pos","nativeSrc":"2972:3:20","nodeType":"YulTypedName","src":"2972:3:20","type":""}],"src":"2892:171:20"},{"body":{"nativeSrc":"3187:144:20","nodeType":"YulBlock","src":"3187:144:20","statements":[{"nativeSrc":"3197:26:20","nodeType":"YulAssignment","src":"3197:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3209:9:20","nodeType":"YulIdentifier","src":"3209:9:20"},{"kind":"number","nativeSrc":"3220:2:20","nodeType":"YulLiteral","src":"3220:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3205:3:20","nodeType":"YulIdentifier","src":"3205:3:20"},"nativeSrc":"3205:18:20","nodeType":"YulFunctionCall","src":"3205:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3197:4:20","nodeType":"YulIdentifier","src":"3197:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3297:6:20","nodeType":"YulIdentifier","src":"3297:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"3310:9:20","nodeType":"YulIdentifier","src":"3310:9:20"},{"kind":"number","nativeSrc":"3321:1:20","nodeType":"YulLiteral","src":"3321:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3306:3:20","nodeType":"YulIdentifier","src":"3306:3:20"},"nativeSrc":"3306:17:20","nodeType":"YulFunctionCall","src":"3306:17:20"}],"functionName":{"name":"abi_encode_t_contract$_PriceOracle_$2956_to_t_address_fromStack","nativeSrc":"3233:63:20","nodeType":"YulIdentifier","src":"3233:63:20"},"nativeSrc":"3233:91:20","nodeType":"YulFunctionCall","src":"3233:91:20"},"nativeSrc":"3233:91:20","nodeType":"YulExpressionStatement","src":"3233:91:20"}]},"name":"abi_encode_tuple_t_contract$_PriceOracle_$2956__to_t_address__fromStack_reversed","nativeSrc":"3069:262:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3159:9:20","nodeType":"YulTypedName","src":"3159:9:20","type":""},{"name":"value0","nativeSrc":"3171:6:20","nodeType":"YulTypedName","src":"3171:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3182:4:20","nodeType":"YulTypedName","src":"3182:4:20","type":""}],"src":"3069:262:20"},{"body":{"nativeSrc":"3377:35:20","nodeType":"YulBlock","src":"3377:35:20","statements":[{"nativeSrc":"3387:19:20","nodeType":"YulAssignment","src":"3387:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"3403:2:20","nodeType":"YulLiteral","src":"3403:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3397:5:20","nodeType":"YulIdentifier","src":"3397:5:20"},"nativeSrc":"3397:9:20","nodeType":"YulFunctionCall","src":"3397:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"3387:6:20","nodeType":"YulIdentifier","src":"3387:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"3337:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"3370:6:20","nodeType":"YulTypedName","src":"3370:6:20","type":""}],"src":"3337:75:20"},{"body":{"nativeSrc":"3507:28:20","nodeType":"YulBlock","src":"3507:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3524:1:20","nodeType":"YulLiteral","src":"3524:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3527:1:20","nodeType":"YulLiteral","src":"3527:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3517:6:20","nodeType":"YulIdentifier","src":"3517:6:20"},"nativeSrc":"3517:12:20","nodeType":"YulFunctionCall","src":"3517:12:20"},"nativeSrc":"3517:12:20","nodeType":"YulExpressionStatement","src":"3517:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3418:117:20","nodeType":"YulFunctionDefinition","src":"3418:117:20"},{"body":{"nativeSrc":"3630:28:20","nodeType":"YulBlock","src":"3630:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3647:1:20","nodeType":"YulLiteral","src":"3647:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3650:1:20","nodeType":"YulLiteral","src":"3650:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3640:6:20","nodeType":"YulIdentifier","src":"3640:6:20"},"nativeSrc":"3640:12:20","nodeType":"YulFunctionCall","src":"3640:12:20"},"nativeSrc":"3640:12:20","nodeType":"YulExpressionStatement","src":"3640:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3541:117:20","nodeType":"YulFunctionDefinition","src":"3541:117:20"},{"body":{"nativeSrc":"3707:79:20","nodeType":"YulBlock","src":"3707:79:20","statements":[{"body":{"nativeSrc":"3764:16:20","nodeType":"YulBlock","src":"3764:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3773:1:20","nodeType":"YulLiteral","src":"3773:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3776:1:20","nodeType":"YulLiteral","src":"3776:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3766:6:20","nodeType":"YulIdentifier","src":"3766:6:20"},"nativeSrc":"3766:12:20","nodeType":"YulFunctionCall","src":"3766:12:20"},"nativeSrc":"3766:12:20","nodeType":"YulExpressionStatement","src":"3766:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3730:5:20","nodeType":"YulIdentifier","src":"3730:5:20"},{"arguments":[{"name":"value","nativeSrc":"3755:5:20","nodeType":"YulIdentifier","src":"3755:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3737:17:20","nodeType":"YulIdentifier","src":"3737:17:20"},"nativeSrc":"3737:24:20","nodeType":"YulFunctionCall","src":"3737:24:20"}],"functionName":{"name":"eq","nativeSrc":"3727:2:20","nodeType":"YulIdentifier","src":"3727:2:20"},"nativeSrc":"3727:35:20","nodeType":"YulFunctionCall","src":"3727:35:20"}],"functionName":{"name":"iszero","nativeSrc":"3720:6:20","nodeType":"YulIdentifier","src":"3720:6:20"},"nativeSrc":"3720:43:20","nodeType":"YulFunctionCall","src":"3720:43:20"},"nativeSrc":"3717:63:20","nodeType":"YulIf","src":"3717:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"3664:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3700:5:20","nodeType":"YulTypedName","src":"3700:5:20","type":""}],"src":"3664:122:20"},{"body":{"nativeSrc":"3844:87:20","nodeType":"YulBlock","src":"3844:87:20","statements":[{"nativeSrc":"3854:29:20","nodeType":"YulAssignment","src":"3854:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"3876:6:20","nodeType":"YulIdentifier","src":"3876:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"3863:12:20","nodeType":"YulIdentifier","src":"3863:12:20"},"nativeSrc":"3863:20:20","nodeType":"YulFunctionCall","src":"3863:20:20"},"variableNames":[{"name":"value","nativeSrc":"3854:5:20","nodeType":"YulIdentifier","src":"3854:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3919:5:20","nodeType":"YulIdentifier","src":"3919:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3892:26:20","nodeType":"YulIdentifier","src":"3892:26:20"},"nativeSrc":"3892:33:20","nodeType":"YulFunctionCall","src":"3892:33:20"},"nativeSrc":"3892:33:20","nodeType":"YulExpressionStatement","src":"3892:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"3792:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3822:6:20","nodeType":"YulTypedName","src":"3822:6:20","type":""},{"name":"end","nativeSrc":"3830:3:20","nodeType":"YulTypedName","src":"3830:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3838:5:20","nodeType":"YulTypedName","src":"3838:5:20","type":""}],"src":"3792:139:20"},{"body":{"nativeSrc":"4003:263:20","nodeType":"YulBlock","src":"4003:263:20","statements":[{"body":{"nativeSrc":"4049:83:20","nodeType":"YulBlock","src":"4049:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4051:77:20","nodeType":"YulIdentifier","src":"4051:77:20"},"nativeSrc":"4051:79:20","nodeType":"YulFunctionCall","src":"4051:79:20"},"nativeSrc":"4051:79:20","nodeType":"YulExpressionStatement","src":"4051:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4024:7:20","nodeType":"YulIdentifier","src":"4024:7:20"},{"name":"headStart","nativeSrc":"4033:9:20","nodeType":"YulIdentifier","src":"4033:9:20"}],"functionName":{"name":"sub","nativeSrc":"4020:3:20","nodeType":"YulIdentifier","src":"4020:3:20"},"nativeSrc":"4020:23:20","nodeType":"YulFunctionCall","src":"4020:23:20"},{"kind":"number","nativeSrc":"4045:2:20","nodeType":"YulLiteral","src":"4045:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4016:3:20","nodeType":"YulIdentifier","src":"4016:3:20"},"nativeSrc":"4016:32:20","nodeType":"YulFunctionCall","src":"4016:32:20"},"nativeSrc":"4013:119:20","nodeType":"YulIf","src":"4013:119:20"},{"nativeSrc":"4142:117:20","nodeType":"YulBlock","src":"4142:117:20","statements":[{"nativeSrc":"4157:15:20","nodeType":"YulVariableDeclaration","src":"4157:15:20","value":{"kind":"number","nativeSrc":"4171:1:20","nodeType":"YulLiteral","src":"4171:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4161:6:20","nodeType":"YulTypedName","src":"4161:6:20","type":""}]},{"nativeSrc":"4186:63:20","nodeType":"YulAssignment","src":"4186:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4221:9:20","nodeType":"YulIdentifier","src":"4221:9:20"},{"name":"offset","nativeSrc":"4232:6:20","nodeType":"YulIdentifier","src":"4232:6:20"}],"functionName":{"name":"add","nativeSrc":"4217:3:20","nodeType":"YulIdentifier","src":"4217:3:20"},"nativeSrc":"4217:22:20","nodeType":"YulFunctionCall","src":"4217:22:20"},{"name":"dataEnd","nativeSrc":"4241:7:20","nodeType":"YulIdentifier","src":"4241:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4196:20:20","nodeType":"YulIdentifier","src":"4196:20:20"},"nativeSrc":"4196:53:20","nodeType":"YulFunctionCall","src":"4196:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4186:6:20","nodeType":"YulIdentifier","src":"4186:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3937:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3973:9:20","nodeType":"YulTypedName","src":"3973:9:20","type":""},{"name":"dataEnd","nativeSrc":"3984:7:20","nodeType":"YulTypedName","src":"3984:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3996:6:20","nodeType":"YulTypedName","src":"3996:6:20","type":""}],"src":"3937:329:20"},{"body":{"nativeSrc":"4428:749:20","nodeType":"YulBlock","src":"4428:749:20","statements":[{"nativeSrc":"4438:26:20","nodeType":"YulVariableDeclaration","src":"4438:26:20","value":{"arguments":[{"name":"pos","nativeSrc":"4454:3:20","nodeType":"YulIdentifier","src":"4454:3:20"},{"kind":"number","nativeSrc":"4459:4:20","nodeType":"YulLiteral","src":"4459:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"4450:3:20","nodeType":"YulIdentifier","src":"4450:3:20"},"nativeSrc":"4450:14:20","nodeType":"YulFunctionCall","src":"4450:14:20"},"variables":[{"name":"tail","nativeSrc":"4442:4:20","nodeType":"YulTypedName","src":"4442:4:20","type":""}]},{"nativeSrc":"4474:166:20","nodeType":"YulBlock","src":"4474:166:20","statements":[{"nativeSrc":"4511:43:20","nodeType":"YulVariableDeclaration","src":"4511:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4541:5:20","nodeType":"YulIdentifier","src":"4541:5:20"},{"kind":"number","nativeSrc":"4548:4:20","nodeType":"YulLiteral","src":"4548:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"4537:3:20","nodeType":"YulIdentifier","src":"4537:3:20"},"nativeSrc":"4537:16:20","nodeType":"YulFunctionCall","src":"4537:16:20"}],"functionName":{"name":"mload","nativeSrc":"4531:5:20","nodeType":"YulIdentifier","src":"4531:5:20"},"nativeSrc":"4531:23:20","nodeType":"YulFunctionCall","src":"4531:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"4515:12:20","nodeType":"YulTypedName","src":"4515:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4601:12:20","nodeType":"YulIdentifier","src":"4601:12:20"},{"arguments":[{"name":"pos","nativeSrc":"4619:3:20","nodeType":"YulIdentifier","src":"4619:3:20"},{"kind":"number","nativeSrc":"4624:4:20","nodeType":"YulLiteral","src":"4624:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"4615:3:20","nodeType":"YulIdentifier","src":"4615:3:20"},"nativeSrc":"4615:14:20","nodeType":"YulFunctionCall","src":"4615:14:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"4567:33:20","nodeType":"YulIdentifier","src":"4567:33:20"},"nativeSrc":"4567:63:20","nodeType":"YulFunctionCall","src":"4567:63:20"},"nativeSrc":"4567:63:20","nodeType":"YulExpressionStatement","src":"4567:63:20"}]},{"nativeSrc":"4650:165:20","nodeType":"YulBlock","src":"4650:165:20","statements":[{"nativeSrc":"4686:43:20","nodeType":"YulVariableDeclaration","src":"4686:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4716:5:20","nodeType":"YulIdentifier","src":"4716:5:20"},{"kind":"number","nativeSrc":"4723:4:20","nodeType":"YulLiteral","src":"4723:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4712:3:20","nodeType":"YulIdentifier","src":"4712:3:20"},"nativeSrc":"4712:16:20","nodeType":"YulFunctionCall","src":"4712:16:20"}],"functionName":{"name":"mload","nativeSrc":"4706:5:20","nodeType":"YulIdentifier","src":"4706:5:20"},"nativeSrc":"4706:23:20","nodeType":"YulFunctionCall","src":"4706:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"4690:12:20","nodeType":"YulTypedName","src":"4690:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4776:12:20","nodeType":"YulIdentifier","src":"4776:12:20"},{"arguments":[{"name":"pos","nativeSrc":"4794:3:20","nodeType":"YulIdentifier","src":"4794:3:20"},{"kind":"number","nativeSrc":"4799:4:20","nodeType":"YulLiteral","src":"4799:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4790:3:20","nodeType":"YulIdentifier","src":"4790:3:20"},"nativeSrc":"4790:14:20","nodeType":"YulFunctionCall","src":"4790:14:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"4742:33:20","nodeType":"YulIdentifier","src":"4742:33:20"},"nativeSrc":"4742:63:20","nodeType":"YulFunctionCall","src":"4742:63:20"},"nativeSrc":"4742:63:20","nodeType":"YulExpressionStatement","src":"4742:63:20"}]},{"nativeSrc":"4825:166:20","nodeType":"YulBlock","src":"4825:166:20","statements":[{"nativeSrc":"4862:43:20","nodeType":"YulVariableDeclaration","src":"4862:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4892:5:20","nodeType":"YulIdentifier","src":"4892:5:20"},{"kind":"number","nativeSrc":"4899:4:20","nodeType":"YulLiteral","src":"4899:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4888:3:20","nodeType":"YulIdentifier","src":"4888:3:20"},"nativeSrc":"4888:16:20","nodeType":"YulFunctionCall","src":"4888:16:20"}],"functionName":{"name":"mload","nativeSrc":"4882:5:20","nodeType":"YulIdentifier","src":"4882:5:20"},"nativeSrc":"4882:23:20","nodeType":"YulFunctionCall","src":"4882:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"4866:12:20","nodeType":"YulTypedName","src":"4866:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"4952:12:20","nodeType":"YulIdentifier","src":"4952:12:20"},{"arguments":[{"name":"pos","nativeSrc":"4970:3:20","nodeType":"YulIdentifier","src":"4970:3:20"},{"kind":"number","nativeSrc":"4975:4:20","nodeType":"YulLiteral","src":"4975:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4966:3:20","nodeType":"YulIdentifier","src":"4966:3:20"},"nativeSrc":"4966:14:20","nodeType":"YulFunctionCall","src":"4966:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"4918:33:20","nodeType":"YulIdentifier","src":"4918:33:20"},"nativeSrc":"4918:63:20","nodeType":"YulFunctionCall","src":"4918:63:20"},"nativeSrc":"4918:63:20","nodeType":"YulExpressionStatement","src":"4918:63:20"}]},{"nativeSrc":"5001:169:20","nodeType":"YulBlock","src":"5001:169:20","statements":[{"nativeSrc":"5041:43:20","nodeType":"YulVariableDeclaration","src":"5041:43:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5071:5:20","nodeType":"YulIdentifier","src":"5071:5:20"},{"kind":"number","nativeSrc":"5078:4:20","nodeType":"YulLiteral","src":"5078:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5067:3:20","nodeType":"YulIdentifier","src":"5067:3:20"},"nativeSrc":"5067:16:20","nodeType":"YulFunctionCall","src":"5067:16:20"}],"functionName":{"name":"mload","nativeSrc":"5061:5:20","nodeType":"YulIdentifier","src":"5061:5:20"},"nativeSrc":"5061:23:20","nodeType":"YulFunctionCall","src":"5061:23:20"},"variables":[{"name":"memberValue0","nativeSrc":"5045:12:20","nodeType":"YulTypedName","src":"5045:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"5131:12:20","nodeType":"YulIdentifier","src":"5131:12:20"},{"arguments":[{"name":"pos","nativeSrc":"5149:3:20","nodeType":"YulIdentifier","src":"5149:3:20"},{"kind":"number","nativeSrc":"5154:4:20","nodeType":"YulLiteral","src":"5154:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5145:3:20","nodeType":"YulIdentifier","src":"5145:3:20"},"nativeSrc":"5145:14:20","nodeType":"YulFunctionCall","src":"5145:14:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"5097:33:20","nodeType":"YulIdentifier","src":"5097:33:20"},"nativeSrc":"5097:63:20","nodeType":"YulFunctionCall","src":"5097:63:20"},"nativeSrc":"5097:63:20","nodeType":"YulExpressionStatement","src":"5097:63:20"}]}]},"name":"abi_encode_t_struct$_Bid_$2104_memory_ptr_to_t_struct$_Bid_$2104_memory_ptr_fromStack","nativeSrc":"4320:857:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4415:5:20","nodeType":"YulTypedName","src":"4415:5:20","type":""},{"name":"pos","nativeSrc":"4422:3:20","nodeType":"YulTypedName","src":"4422:3:20","type":""}],"src":"4320:857:20"},{"body":{"nativeSrc":"5323:167:20","nodeType":"YulBlock","src":"5323:167:20","statements":[{"nativeSrc":"5333:27:20","nodeType":"YulAssignment","src":"5333:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5345:9:20","nodeType":"YulIdentifier","src":"5345:9:20"},{"kind":"number","nativeSrc":"5356:3:20","nodeType":"YulLiteral","src":"5356:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5341:3:20","nodeType":"YulIdentifier","src":"5341:3:20"},"nativeSrc":"5341:19:20","nodeType":"YulFunctionCall","src":"5341:19:20"},"variableNames":[{"name":"tail","nativeSrc":"5333:4:20","nodeType":"YulIdentifier","src":"5333:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5456:6:20","nodeType":"YulIdentifier","src":"5456:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5469:9:20","nodeType":"YulIdentifier","src":"5469:9:20"},{"kind":"number","nativeSrc":"5480:1:20","nodeType":"YulLiteral","src":"5480:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5465:3:20","nodeType":"YulIdentifier","src":"5465:3:20"},"nativeSrc":"5465:17:20","nodeType":"YulFunctionCall","src":"5465:17:20"}],"functionName":{"name":"abi_encode_t_struct$_Bid_$2104_memory_ptr_to_t_struct$_Bid_$2104_memory_ptr_fromStack","nativeSrc":"5370:85:20","nodeType":"YulIdentifier","src":"5370:85:20"},"nativeSrc":"5370:113:20","nodeType":"YulFunctionCall","src":"5370:113:20"},"nativeSrc":"5370:113:20","nodeType":"YulExpressionStatement","src":"5370:113:20"}]},"name":"abi_encode_tuple_t_struct$_Bid_$2104_memory_ptr__to_t_struct$_Bid_$2104_memory_ptr__fromStack_reversed","nativeSrc":"5183:307:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5295:9:20","nodeType":"YulTypedName","src":"5295:9:20","type":""},{"name":"value0","nativeSrc":"5307:6:20","nodeType":"YulTypedName","src":"5307:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5318:4:20","nodeType":"YulTypedName","src":"5318:4:20","type":""}],"src":"5183:307:20"},{"body":{"nativeSrc":"5585:28:20","nodeType":"YulBlock","src":"5585:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5602:1:20","nodeType":"YulLiteral","src":"5602:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5605:1:20","nodeType":"YulLiteral","src":"5605:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5595:6:20","nodeType":"YulIdentifier","src":"5595:6:20"},"nativeSrc":"5595:12:20","nodeType":"YulFunctionCall","src":"5595:12:20"},"nativeSrc":"5595:12:20","nodeType":"YulExpressionStatement","src":"5595:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5496:117:20","nodeType":"YulFunctionDefinition","src":"5496:117:20"},{"body":{"nativeSrc":"5708:28:20","nodeType":"YulBlock","src":"5708:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5725:1:20","nodeType":"YulLiteral","src":"5725:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5728:1:20","nodeType":"YulLiteral","src":"5728:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5718:6:20","nodeType":"YulIdentifier","src":"5718:6:20"},"nativeSrc":"5718:12:20","nodeType":"YulFunctionCall","src":"5718:12:20"},"nativeSrc":"5718:12:20","nodeType":"YulExpressionStatement","src":"5718:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5619:117:20","nodeType":"YulFunctionDefinition","src":"5619:117:20"},{"body":{"nativeSrc":"5790:54:20","nodeType":"YulBlock","src":"5790:54:20","statements":[{"nativeSrc":"5800:38:20","nodeType":"YulAssignment","src":"5800:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5818:5:20","nodeType":"YulIdentifier","src":"5818:5:20"},{"kind":"number","nativeSrc":"5825:2:20","nodeType":"YulLiteral","src":"5825:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5814:3:20","nodeType":"YulIdentifier","src":"5814:3:20"},"nativeSrc":"5814:14:20","nodeType":"YulFunctionCall","src":"5814:14:20"},{"arguments":[{"kind":"number","nativeSrc":"5834:2:20","nodeType":"YulLiteral","src":"5834:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5830:3:20","nodeType":"YulIdentifier","src":"5830:3:20"},"nativeSrc":"5830:7:20","nodeType":"YulFunctionCall","src":"5830:7:20"}],"functionName":{"name":"and","nativeSrc":"5810:3:20","nodeType":"YulIdentifier","src":"5810:3:20"},"nativeSrc":"5810:28:20","nodeType":"YulFunctionCall","src":"5810:28:20"},"variableNames":[{"name":"result","nativeSrc":"5800:6:20","nodeType":"YulIdentifier","src":"5800:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"5742:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5773:5:20","nodeType":"YulTypedName","src":"5773:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5783:6:20","nodeType":"YulTypedName","src":"5783:6:20","type":""}],"src":"5742:102:20"},{"body":{"nativeSrc":"5878:152:20","nodeType":"YulBlock","src":"5878:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5895:1:20","nodeType":"YulLiteral","src":"5895:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5898:77:20","nodeType":"YulLiteral","src":"5898:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5888:6:20","nodeType":"YulIdentifier","src":"5888:6:20"},"nativeSrc":"5888:88:20","nodeType":"YulFunctionCall","src":"5888:88:20"},"nativeSrc":"5888:88:20","nodeType":"YulExpressionStatement","src":"5888:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5992:1:20","nodeType":"YulLiteral","src":"5992:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"5995:4:20","nodeType":"YulLiteral","src":"5995:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5985:6:20","nodeType":"YulIdentifier","src":"5985:6:20"},"nativeSrc":"5985:15:20","nodeType":"YulFunctionCall","src":"5985:15:20"},"nativeSrc":"5985:15:20","nodeType":"YulExpressionStatement","src":"5985:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6016:1:20","nodeType":"YulLiteral","src":"6016:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"6019:4:20","nodeType":"YulLiteral","src":"6019:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6009:6:20","nodeType":"YulIdentifier","src":"6009:6:20"},"nativeSrc":"6009:15:20","nodeType":"YulFunctionCall","src":"6009:15:20"},"nativeSrc":"6009:15:20","nodeType":"YulExpressionStatement","src":"6009:15:20"}]},"name":"panic_error_0x41","nativeSrc":"5850:180:20","nodeType":"YulFunctionDefinition","src":"5850:180:20"},{"body":{"nativeSrc":"6079:238:20","nodeType":"YulBlock","src":"6079:238:20","statements":[{"nativeSrc":"6089:58:20","nodeType":"YulVariableDeclaration","src":"6089:58:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"6111:6:20","nodeType":"YulIdentifier","src":"6111:6:20"},{"arguments":[{"name":"size","nativeSrc":"6141:4:20","nodeType":"YulIdentifier","src":"6141:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6119:21:20","nodeType":"YulIdentifier","src":"6119:21:20"},"nativeSrc":"6119:27:20","nodeType":"YulFunctionCall","src":"6119:27:20"}],"functionName":{"name":"add","nativeSrc":"6107:3:20","nodeType":"YulIdentifier","src":"6107:3:20"},"nativeSrc":"6107:40:20","nodeType":"YulFunctionCall","src":"6107:40:20"},"variables":[{"name":"newFreePtr","nativeSrc":"6093:10:20","nodeType":"YulTypedName","src":"6093:10:20","type":""}]},{"body":{"nativeSrc":"6258:22:20","nodeType":"YulBlock","src":"6258:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6260:16:20","nodeType":"YulIdentifier","src":"6260:16:20"},"nativeSrc":"6260:18:20","nodeType":"YulFunctionCall","src":"6260:18:20"},"nativeSrc":"6260:18:20","nodeType":"YulExpressionStatement","src":"6260:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6201:10:20","nodeType":"YulIdentifier","src":"6201:10:20"},{"kind":"number","nativeSrc":"6213:18:20","nodeType":"YulLiteral","src":"6213:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6198:2:20","nodeType":"YulIdentifier","src":"6198:2:20"},"nativeSrc":"6198:34:20","nodeType":"YulFunctionCall","src":"6198:34:20"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6237:10:20","nodeType":"YulIdentifier","src":"6237:10:20"},{"name":"memPtr","nativeSrc":"6249:6:20","nodeType":"YulIdentifier","src":"6249:6:20"}],"functionName":{"name":"lt","nativeSrc":"6234:2:20","nodeType":"YulIdentifier","src":"6234:2:20"},"nativeSrc":"6234:22:20","nodeType":"YulFunctionCall","src":"6234:22:20"}],"functionName":{"name":"or","nativeSrc":"6195:2:20","nodeType":"YulIdentifier","src":"6195:2:20"},"nativeSrc":"6195:62:20","nodeType":"YulFunctionCall","src":"6195:62:20"},"nativeSrc":"6192:88:20","nodeType":"YulIf","src":"6192:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6296:2:20","nodeType":"YulLiteral","src":"6296:2:20","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6300:10:20","nodeType":"YulIdentifier","src":"6300:10:20"}],"functionName":{"name":"mstore","nativeSrc":"6289:6:20","nodeType":"YulIdentifier","src":"6289:6:20"},"nativeSrc":"6289:22:20","nodeType":"YulFunctionCall","src":"6289:22:20"},"nativeSrc":"6289:22:20","nodeType":"YulExpressionStatement","src":"6289:22:20"}]},"name":"finalize_allocation","nativeSrc":"6036:281:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6065:6:20","nodeType":"YulTypedName","src":"6065:6:20","type":""},{"name":"size","nativeSrc":"6073:4:20","nodeType":"YulTypedName","src":"6073:4:20","type":""}],"src":"6036:281:20"},{"body":{"nativeSrc":"6364:88:20","nodeType":"YulBlock","src":"6364:88:20","statements":[{"nativeSrc":"6374:30:20","nodeType":"YulAssignment","src":"6374:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6384:18:20","nodeType":"YulIdentifier","src":"6384:18:20"},"nativeSrc":"6384:20:20","nodeType":"YulFunctionCall","src":"6384:20:20"},"variableNames":[{"name":"memPtr","nativeSrc":"6374:6:20","nodeType":"YulIdentifier","src":"6374:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6433:6:20","nodeType":"YulIdentifier","src":"6433:6:20"},{"name":"size","nativeSrc":"6441:4:20","nodeType":"YulIdentifier","src":"6441:4:20"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6413:19:20","nodeType":"YulIdentifier","src":"6413:19:20"},"nativeSrc":"6413:33:20","nodeType":"YulFunctionCall","src":"6413:33:20"},"nativeSrc":"6413:33:20","nodeType":"YulExpressionStatement","src":"6413:33:20"}]},"name":"allocate_memory","nativeSrc":"6323:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6348:4:20","nodeType":"YulTypedName","src":"6348:4:20","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6357:6:20","nodeType":"YulTypedName","src":"6357:6:20","type":""}],"src":"6323:129:20"},{"body":{"nativeSrc":"6524:241:20","nodeType":"YulBlock","src":"6524:241:20","statements":[{"body":{"nativeSrc":"6629:22:20","nodeType":"YulBlock","src":"6629:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6631:16:20","nodeType":"YulIdentifier","src":"6631:16:20"},"nativeSrc":"6631:18:20","nodeType":"YulFunctionCall","src":"6631:18:20"},"nativeSrc":"6631:18:20","nodeType":"YulExpressionStatement","src":"6631:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6601:6:20","nodeType":"YulIdentifier","src":"6601:6:20"},{"kind":"number","nativeSrc":"6609:18:20","nodeType":"YulLiteral","src":"6609:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6598:2:20","nodeType":"YulIdentifier","src":"6598:2:20"},"nativeSrc":"6598:30:20","nodeType":"YulFunctionCall","src":"6598:30:20"},"nativeSrc":"6595:56:20","nodeType":"YulIf","src":"6595:56:20"},{"nativeSrc":"6661:37:20","nodeType":"YulAssignment","src":"6661:37:20","value":{"arguments":[{"name":"length","nativeSrc":"6691:6:20","nodeType":"YulIdentifier","src":"6691:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6669:21:20","nodeType":"YulIdentifier","src":"6669:21:20"},"nativeSrc":"6669:29:20","nodeType":"YulFunctionCall","src":"6669:29:20"},"variableNames":[{"name":"size","nativeSrc":"6661:4:20","nodeType":"YulIdentifier","src":"6661:4:20"}]},{"nativeSrc":"6735:23:20","nodeType":"YulAssignment","src":"6735:23:20","value":{"arguments":[{"name":"size","nativeSrc":"6747:4:20","nodeType":"YulIdentifier","src":"6747:4:20"},{"kind":"number","nativeSrc":"6753:4:20","nodeType":"YulLiteral","src":"6753:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6743:3:20","nodeType":"YulIdentifier","src":"6743:3:20"},"nativeSrc":"6743:15:20","nodeType":"YulFunctionCall","src":"6743:15:20"},"variableNames":[{"name":"size","nativeSrc":"6735:4:20","nodeType":"YulIdentifier","src":"6735:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6458:307:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6508:6:20","nodeType":"YulTypedName","src":"6508:6:20","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6519:4:20","nodeType":"YulTypedName","src":"6519:4:20","type":""}],"src":"6458:307:20"},{"body":{"nativeSrc":"6835:84:20","nodeType":"YulBlock","src":"6835:84:20","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6859:3:20","nodeType":"YulIdentifier","src":"6859:3:20"},{"name":"src","nativeSrc":"6864:3:20","nodeType":"YulIdentifier","src":"6864:3:20"},{"name":"length","nativeSrc":"6869:6:20","nodeType":"YulIdentifier","src":"6869:6:20"}],"functionName":{"name":"calldatacopy","nativeSrc":"6846:12:20","nodeType":"YulIdentifier","src":"6846:12:20"},"nativeSrc":"6846:30:20","nodeType":"YulFunctionCall","src":"6846:30:20"},"nativeSrc":"6846:30:20","nodeType":"YulExpressionStatement","src":"6846:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6896:3:20","nodeType":"YulIdentifier","src":"6896:3:20"},{"name":"length","nativeSrc":"6901:6:20","nodeType":"YulIdentifier","src":"6901:6:20"}],"functionName":{"name":"add","nativeSrc":"6892:3:20","nodeType":"YulIdentifier","src":"6892:3:20"},"nativeSrc":"6892:16:20","nodeType":"YulFunctionCall","src":"6892:16:20"},{"kind":"number","nativeSrc":"6910:1:20","nodeType":"YulLiteral","src":"6910:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6885:6:20","nodeType":"YulIdentifier","src":"6885:6:20"},"nativeSrc":"6885:27:20","nodeType":"YulFunctionCall","src":"6885:27:20"},"nativeSrc":"6885:27:20","nodeType":"YulExpressionStatement","src":"6885:27:20"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6771:148:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6817:3:20","nodeType":"YulTypedName","src":"6817:3:20","type":""},{"name":"dst","nativeSrc":"6822:3:20","nodeType":"YulTypedName","src":"6822:3:20","type":""},{"name":"length","nativeSrc":"6827:6:20","nodeType":"YulTypedName","src":"6827:6:20","type":""}],"src":"6771:148:20"},{"body":{"nativeSrc":"7008:340:20","nodeType":"YulBlock","src":"7008:340:20","statements":[{"nativeSrc":"7018:74:20","nodeType":"YulAssignment","src":"7018:74:20","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7084:6:20","nodeType":"YulIdentifier","src":"7084:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7043:40:20","nodeType":"YulIdentifier","src":"7043:40:20"},"nativeSrc":"7043:48:20","nodeType":"YulFunctionCall","src":"7043:48:20"}],"functionName":{"name":"allocate_memory","nativeSrc":"7027:15:20","nodeType":"YulIdentifier","src":"7027:15:20"},"nativeSrc":"7027:65:20","nodeType":"YulFunctionCall","src":"7027:65:20"},"variableNames":[{"name":"array","nativeSrc":"7018:5:20","nodeType":"YulIdentifier","src":"7018:5:20"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7108:5:20","nodeType":"YulIdentifier","src":"7108:5:20"},{"name":"length","nativeSrc":"7115:6:20","nodeType":"YulIdentifier","src":"7115:6:20"}],"functionName":{"name":"mstore","nativeSrc":"7101:6:20","nodeType":"YulIdentifier","src":"7101:6:20"},"nativeSrc":"7101:21:20","nodeType":"YulFunctionCall","src":"7101:21:20"},"nativeSrc":"7101:21:20","nodeType":"YulExpressionStatement","src":"7101:21:20"},{"nativeSrc":"7131:27:20","nodeType":"YulVariableDeclaration","src":"7131:27:20","value":{"arguments":[{"name":"array","nativeSrc":"7146:5:20","nodeType":"YulIdentifier","src":"7146:5:20"},{"kind":"number","nativeSrc":"7153:4:20","nodeType":"YulLiteral","src":"7153:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7142:3:20","nodeType":"YulIdentifier","src":"7142:3:20"},"nativeSrc":"7142:16:20","nodeType":"YulFunctionCall","src":"7142:16:20"},"variables":[{"name":"dst","nativeSrc":"7135:3:20","nodeType":"YulTypedName","src":"7135:3:20","type":""}]},{"body":{"nativeSrc":"7196:83:20","nodeType":"YulBlock","src":"7196:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7198:77:20","nodeType":"YulIdentifier","src":"7198:77:20"},"nativeSrc":"7198:79:20","nodeType":"YulFunctionCall","src":"7198:79:20"},"nativeSrc":"7198:79:20","nodeType":"YulExpressionStatement","src":"7198:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7177:3:20","nodeType":"YulIdentifier","src":"7177:3:20"},{"name":"length","nativeSrc":"7182:6:20","nodeType":"YulIdentifier","src":"7182:6:20"}],"functionName":{"name":"add","nativeSrc":"7173:3:20","nodeType":"YulIdentifier","src":"7173:3:20"},"nativeSrc":"7173:16:20","nodeType":"YulFunctionCall","src":"7173:16:20"},{"name":"end","nativeSrc":"7191:3:20","nodeType":"YulIdentifier","src":"7191:3:20"}],"functionName":{"name":"gt","nativeSrc":"7170:2:20","nodeType":"YulIdentifier","src":"7170:2:20"},"nativeSrc":"7170:25:20","nodeType":"YulFunctionCall","src":"7170:25:20"},"nativeSrc":"7167:112:20","nodeType":"YulIf","src":"7167:112:20"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7325:3:20","nodeType":"YulIdentifier","src":"7325:3:20"},{"name":"dst","nativeSrc":"7330:3:20","nodeType":"YulIdentifier","src":"7330:3:20"},{"name":"length","nativeSrc":"7335:6:20","nodeType":"YulIdentifier","src":"7335:6:20"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7288:36:20","nodeType":"YulIdentifier","src":"7288:36:20"},"nativeSrc":"7288:54:20","nodeType":"YulFunctionCall","src":"7288:54:20"},"nativeSrc":"7288:54:20","nodeType":"YulExpressionStatement","src":"7288:54:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6925:423:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6981:3:20","nodeType":"YulTypedName","src":"6981:3:20","type":""},{"name":"length","nativeSrc":"6986:6:20","nodeType":"YulTypedName","src":"6986:6:20","type":""},{"name":"end","nativeSrc":"6994:3:20","nodeType":"YulTypedName","src":"6994:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7002:5:20","nodeType":"YulTypedName","src":"7002:5:20","type":""}],"src":"6925:423:20"},{"body":{"nativeSrc":"7428:277:20","nodeType":"YulBlock","src":"7428:277:20","statements":[{"body":{"nativeSrc":"7477:83:20","nodeType":"YulBlock","src":"7477:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7479:77:20","nodeType":"YulIdentifier","src":"7479:77:20"},"nativeSrc":"7479:79:20","nodeType":"YulFunctionCall","src":"7479:79:20"},"nativeSrc":"7479:79:20","nodeType":"YulExpressionStatement","src":"7479:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7456:6:20","nodeType":"YulIdentifier","src":"7456:6:20"},{"kind":"number","nativeSrc":"7464:4:20","nodeType":"YulLiteral","src":"7464:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7452:3:20","nodeType":"YulIdentifier","src":"7452:3:20"},"nativeSrc":"7452:17:20","nodeType":"YulFunctionCall","src":"7452:17:20"},{"name":"end","nativeSrc":"7471:3:20","nodeType":"YulIdentifier","src":"7471:3:20"}],"functionName":{"name":"slt","nativeSrc":"7448:3:20","nodeType":"YulIdentifier","src":"7448:3:20"},"nativeSrc":"7448:27:20","nodeType":"YulFunctionCall","src":"7448:27:20"}],"functionName":{"name":"iszero","nativeSrc":"7441:6:20","nodeType":"YulIdentifier","src":"7441:6:20"},"nativeSrc":"7441:35:20","nodeType":"YulFunctionCall","src":"7441:35:20"},"nativeSrc":"7438:122:20","nodeType":"YulIf","src":"7438:122:20"},{"nativeSrc":"7569:34:20","nodeType":"YulVariableDeclaration","src":"7569:34:20","value":{"arguments":[{"name":"offset","nativeSrc":"7596:6:20","nodeType":"YulIdentifier","src":"7596:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"7583:12:20","nodeType":"YulIdentifier","src":"7583:12:20"},"nativeSrc":"7583:20:20","nodeType":"YulFunctionCall","src":"7583:20:20"},"variables":[{"name":"length","nativeSrc":"7573:6:20","nodeType":"YulTypedName","src":"7573:6:20","type":""}]},{"nativeSrc":"7612:87:20","nodeType":"YulAssignment","src":"7612:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7672:6:20","nodeType":"YulIdentifier","src":"7672:6:20"},{"kind":"number","nativeSrc":"7680:4:20","nodeType":"YulLiteral","src":"7680:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7668:3:20","nodeType":"YulIdentifier","src":"7668:3:20"},"nativeSrc":"7668:17:20","nodeType":"YulFunctionCall","src":"7668:17:20"},{"name":"length","nativeSrc":"7687:6:20","nodeType":"YulIdentifier","src":"7687:6:20"},{"name":"end","nativeSrc":"7695:3:20","nodeType":"YulIdentifier","src":"7695:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7621:46:20","nodeType":"YulIdentifier","src":"7621:46:20"},"nativeSrc":"7621:78:20","nodeType":"YulFunctionCall","src":"7621:78:20"},"variableNames":[{"name":"array","nativeSrc":"7612:5:20","nodeType":"YulIdentifier","src":"7612:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7367:338:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7406:6:20","nodeType":"YulTypedName","src":"7406:6:20","type":""},{"name":"end","nativeSrc":"7414:3:20","nodeType":"YulTypedName","src":"7414:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7422:5:20","nodeType":"YulTypedName","src":"7422:5:20","type":""}],"src":"7367:338:20"},{"body":{"nativeSrc":"7803:560:20","nodeType":"YulBlock","src":"7803:560:20","statements":[{"body":{"nativeSrc":"7849:83:20","nodeType":"YulBlock","src":"7849:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7851:77:20","nodeType":"YulIdentifier","src":"7851:77:20"},"nativeSrc":"7851:79:20","nodeType":"YulFunctionCall","src":"7851:79:20"},"nativeSrc":"7851:79:20","nodeType":"YulExpressionStatement","src":"7851:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7824:7:20","nodeType":"YulIdentifier","src":"7824:7:20"},{"name":"headStart","nativeSrc":"7833:9:20","nodeType":"YulIdentifier","src":"7833:9:20"}],"functionName":{"name":"sub","nativeSrc":"7820:3:20","nodeType":"YulIdentifier","src":"7820:3:20"},"nativeSrc":"7820:23:20","nodeType":"YulFunctionCall","src":"7820:23:20"},{"kind":"number","nativeSrc":"7845:2:20","nodeType":"YulLiteral","src":"7845:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7816:3:20","nodeType":"YulIdentifier","src":"7816:3:20"},"nativeSrc":"7816:32:20","nodeType":"YulFunctionCall","src":"7816:32:20"},"nativeSrc":"7813:119:20","nodeType":"YulIf","src":"7813:119:20"},{"nativeSrc":"7942:117:20","nodeType":"YulBlock","src":"7942:117:20","statements":[{"nativeSrc":"7957:15:20","nodeType":"YulVariableDeclaration","src":"7957:15:20","value":{"kind":"number","nativeSrc":"7971:1:20","nodeType":"YulLiteral","src":"7971:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7961:6:20","nodeType":"YulTypedName","src":"7961:6:20","type":""}]},{"nativeSrc":"7986:63:20","nodeType":"YulAssignment","src":"7986:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8021:9:20","nodeType":"YulIdentifier","src":"8021:9:20"},{"name":"offset","nativeSrc":"8032:6:20","nodeType":"YulIdentifier","src":"8032:6:20"}],"functionName":{"name":"add","nativeSrc":"8017:3:20","nodeType":"YulIdentifier","src":"8017:3:20"},"nativeSrc":"8017:22:20","nodeType":"YulFunctionCall","src":"8017:22:20"},{"name":"dataEnd","nativeSrc":"8041:7:20","nodeType":"YulIdentifier","src":"8041:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7996:20:20","nodeType":"YulIdentifier","src":"7996:20:20"},"nativeSrc":"7996:53:20","nodeType":"YulFunctionCall","src":"7996:53:20"},"variableNames":[{"name":"value0","nativeSrc":"7986:6:20","nodeType":"YulIdentifier","src":"7986:6:20"}]}]},{"nativeSrc":"8069:287:20","nodeType":"YulBlock","src":"8069:287:20","statements":[{"nativeSrc":"8084:46:20","nodeType":"YulVariableDeclaration","src":"8084:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8115:9:20","nodeType":"YulIdentifier","src":"8115:9:20"},{"kind":"number","nativeSrc":"8126:2:20","nodeType":"YulLiteral","src":"8126:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8111:3:20","nodeType":"YulIdentifier","src":"8111:3:20"},"nativeSrc":"8111:18:20","nodeType":"YulFunctionCall","src":"8111:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"8098:12:20","nodeType":"YulIdentifier","src":"8098:12:20"},"nativeSrc":"8098:32:20","nodeType":"YulFunctionCall","src":"8098:32:20"},"variables":[{"name":"offset","nativeSrc":"8088:6:20","nodeType":"YulTypedName","src":"8088:6:20","type":""}]},{"body":{"nativeSrc":"8177:83:20","nodeType":"YulBlock","src":"8177:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8179:77:20","nodeType":"YulIdentifier","src":"8179:77:20"},"nativeSrc":"8179:79:20","nodeType":"YulFunctionCall","src":"8179:79:20"},"nativeSrc":"8179:79:20","nodeType":"YulExpressionStatement","src":"8179:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8149:6:20","nodeType":"YulIdentifier","src":"8149:6:20"},{"kind":"number","nativeSrc":"8157:18:20","nodeType":"YulLiteral","src":"8157:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8146:2:20","nodeType":"YulIdentifier","src":"8146:2:20"},"nativeSrc":"8146:30:20","nodeType":"YulFunctionCall","src":"8146:30:20"},"nativeSrc":"8143:117:20","nodeType":"YulIf","src":"8143:117:20"},{"nativeSrc":"8274:72:20","nodeType":"YulAssignment","src":"8274:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8318:9:20","nodeType":"YulIdentifier","src":"8318:9:20"},{"name":"offset","nativeSrc":"8329:6:20","nodeType":"YulIdentifier","src":"8329:6:20"}],"functionName":{"name":"add","nativeSrc":"8314:3:20","nodeType":"YulIdentifier","src":"8314:3:20"},"nativeSrc":"8314:22:20","nodeType":"YulFunctionCall","src":"8314:22:20"},{"name":"dataEnd","nativeSrc":"8338:7:20","nodeType":"YulIdentifier","src":"8338:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8284:29:20","nodeType":"YulIdentifier","src":"8284:29:20"},"nativeSrc":"8284:62:20","nodeType":"YulFunctionCall","src":"8284:62:20"},"variableNames":[{"name":"value1","nativeSrc":"8274:6:20","nodeType":"YulIdentifier","src":"8274:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"7711:652:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7765:9:20","nodeType":"YulTypedName","src":"7765:9:20","type":""},{"name":"dataEnd","nativeSrc":"7776:7:20","nodeType":"YulTypedName","src":"7776:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7788:6:20","nodeType":"YulTypedName","src":"7788:6:20","type":""},{"name":"value1","nativeSrc":"7796:6:20","nodeType":"YulTypedName","src":"7796:6:20","type":""}],"src":"7711:652:20"},{"body":{"nativeSrc":"8414:32:20","nodeType":"YulBlock","src":"8414:32:20","statements":[{"nativeSrc":"8424:16:20","nodeType":"YulAssignment","src":"8424:16:20","value":{"name":"value","nativeSrc":"8435:5:20","nodeType":"YulIdentifier","src":"8435:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8424:7:20","nodeType":"YulIdentifier","src":"8424:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"8369:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8396:5:20","nodeType":"YulTypedName","src":"8396:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8406:7:20","nodeType":"YulTypedName","src":"8406:7:20","type":""}],"src":"8369:77:20"},{"body":{"nativeSrc":"8517:53:20","nodeType":"YulBlock","src":"8517:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8534:3:20","nodeType":"YulIdentifier","src":"8534:3:20"},{"arguments":[{"name":"value","nativeSrc":"8557:5:20","nodeType":"YulIdentifier","src":"8557:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8539:17:20","nodeType":"YulIdentifier","src":"8539:17:20"},"nativeSrc":"8539:24:20","nodeType":"YulFunctionCall","src":"8539:24:20"}],"functionName":{"name":"mstore","nativeSrc":"8527:6:20","nodeType":"YulIdentifier","src":"8527:6:20"},"nativeSrc":"8527:37:20","nodeType":"YulFunctionCall","src":"8527:37:20"},"nativeSrc":"8527:37:20","nodeType":"YulExpressionStatement","src":"8527:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8452:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8505:5:20","nodeType":"YulTypedName","src":"8505:5:20","type":""},{"name":"pos","nativeSrc":"8512:3:20","nodeType":"YulTypedName","src":"8512:3:20","type":""}],"src":"8452:118:20"},{"body":{"nativeSrc":"8674:124:20","nodeType":"YulBlock","src":"8674:124:20","statements":[{"nativeSrc":"8684:26:20","nodeType":"YulAssignment","src":"8684:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"8696:9:20","nodeType":"YulIdentifier","src":"8696:9:20"},{"kind":"number","nativeSrc":"8707:2:20","nodeType":"YulLiteral","src":"8707:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8692:3:20","nodeType":"YulIdentifier","src":"8692:3:20"},"nativeSrc":"8692:18:20","nodeType":"YulFunctionCall","src":"8692:18:20"},"variableNames":[{"name":"tail","nativeSrc":"8684:4:20","nodeType":"YulIdentifier","src":"8684:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8764:6:20","nodeType":"YulIdentifier","src":"8764:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8777:9:20","nodeType":"YulIdentifier","src":"8777:9:20"},{"kind":"number","nativeSrc":"8788:1:20","nodeType":"YulLiteral","src":"8788:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8773:3:20","nodeType":"YulIdentifier","src":"8773:3:20"},"nativeSrc":"8773:17:20","nodeType":"YulFunctionCall","src":"8773:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8720:43:20","nodeType":"YulIdentifier","src":"8720:43:20"},"nativeSrc":"8720:71:20","nodeType":"YulFunctionCall","src":"8720:71:20"},"nativeSrc":"8720:71:20","nodeType":"YulExpressionStatement","src":"8720:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8576:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8646:9:20","nodeType":"YulTypedName","src":"8646:9:20","type":""},{"name":"value0","nativeSrc":"8658:6:20","nodeType":"YulTypedName","src":"8658:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8669:4:20","nodeType":"YulTypedName","src":"8669:4:20","type":""}],"src":"8576:222:20"},{"body":{"nativeSrc":"8847:79:20","nodeType":"YulBlock","src":"8847:79:20","statements":[{"body":{"nativeSrc":"8904:16:20","nodeType":"YulBlock","src":"8904:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8913:1:20","nodeType":"YulLiteral","src":"8913:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"8916:1:20","nodeType":"YulLiteral","src":"8916:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8906:6:20","nodeType":"YulIdentifier","src":"8906:6:20"},"nativeSrc":"8906:12:20","nodeType":"YulFunctionCall","src":"8906:12:20"},"nativeSrc":"8906:12:20","nodeType":"YulExpressionStatement","src":"8906:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8870:5:20","nodeType":"YulIdentifier","src":"8870:5:20"},{"arguments":[{"name":"value","nativeSrc":"8895:5:20","nodeType":"YulIdentifier","src":"8895:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8877:17:20","nodeType":"YulIdentifier","src":"8877:17:20"},"nativeSrc":"8877:24:20","nodeType":"YulFunctionCall","src":"8877:24:20"}],"functionName":{"name":"eq","nativeSrc":"8867:2:20","nodeType":"YulIdentifier","src":"8867:2:20"},"nativeSrc":"8867:35:20","nodeType":"YulFunctionCall","src":"8867:35:20"}],"functionName":{"name":"iszero","nativeSrc":"8860:6:20","nodeType":"YulIdentifier","src":"8860:6:20"},"nativeSrc":"8860:43:20","nodeType":"YulFunctionCall","src":"8860:43:20"},"nativeSrc":"8857:63:20","nodeType":"YulIf","src":"8857:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"8804:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8840:5:20","nodeType":"YulTypedName","src":"8840:5:20","type":""}],"src":"8804:122:20"},{"body":{"nativeSrc":"8984:87:20","nodeType":"YulBlock","src":"8984:87:20","statements":[{"nativeSrc":"8994:29:20","nodeType":"YulAssignment","src":"8994:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"9016:6:20","nodeType":"YulIdentifier","src":"9016:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"9003:12:20","nodeType":"YulIdentifier","src":"9003:12:20"},"nativeSrc":"9003:20:20","nodeType":"YulFunctionCall","src":"9003:20:20"},"variableNames":[{"name":"value","nativeSrc":"8994:5:20","nodeType":"YulIdentifier","src":"8994:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9059:5:20","nodeType":"YulIdentifier","src":"9059:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"9032:26:20","nodeType":"YulIdentifier","src":"9032:26:20"},"nativeSrc":"9032:33:20","nodeType":"YulFunctionCall","src":"9032:33:20"},"nativeSrc":"9032:33:20","nodeType":"YulExpressionStatement","src":"9032:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"8932:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8962:6:20","nodeType":"YulTypedName","src":"8962:6:20","type":""},{"name":"end","nativeSrc":"8970:3:20","nodeType":"YulTypedName","src":"8970:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8978:5:20","nodeType":"YulTypedName","src":"8978:5:20","type":""}],"src":"8932:139:20"},{"body":{"nativeSrc":"9228:906:20","nodeType":"YulBlock","src":"9228:906:20","statements":[{"body":{"nativeSrc":"9275:83:20","nodeType":"YulBlock","src":"9275:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9277:77:20","nodeType":"YulIdentifier","src":"9277:77:20"},"nativeSrc":"9277:79:20","nodeType":"YulFunctionCall","src":"9277:79:20"},"nativeSrc":"9277:79:20","nodeType":"YulExpressionStatement","src":"9277:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9249:7:20","nodeType":"YulIdentifier","src":"9249:7:20"},{"name":"headStart","nativeSrc":"9258:9:20","nodeType":"YulIdentifier","src":"9258:9:20"}],"functionName":{"name":"sub","nativeSrc":"9245:3:20","nodeType":"YulIdentifier","src":"9245:3:20"},"nativeSrc":"9245:23:20","nodeType":"YulFunctionCall","src":"9245:23:20"},{"kind":"number","nativeSrc":"9270:3:20","nodeType":"YulLiteral","src":"9270:3:20","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"9241:3:20","nodeType":"YulIdentifier","src":"9241:3:20"},"nativeSrc":"9241:33:20","nodeType":"YulFunctionCall","src":"9241:33:20"},"nativeSrc":"9238:120:20","nodeType":"YulIf","src":"9238:120:20"},{"nativeSrc":"9368:117:20","nodeType":"YulBlock","src":"9368:117:20","statements":[{"nativeSrc":"9383:15:20","nodeType":"YulVariableDeclaration","src":"9383:15:20","value":{"kind":"number","nativeSrc":"9397:1:20","nodeType":"YulLiteral","src":"9397:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9387:6:20","nodeType":"YulTypedName","src":"9387:6:20","type":""}]},{"nativeSrc":"9412:63:20","nodeType":"YulAssignment","src":"9412:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9447:9:20","nodeType":"YulIdentifier","src":"9447:9:20"},{"name":"offset","nativeSrc":"9458:6:20","nodeType":"YulIdentifier","src":"9458:6:20"}],"functionName":{"name":"add","nativeSrc":"9443:3:20","nodeType":"YulIdentifier","src":"9443:3:20"},"nativeSrc":"9443:22:20","nodeType":"YulFunctionCall","src":"9443:22:20"},{"name":"dataEnd","nativeSrc":"9467:7:20","nodeType":"YulIdentifier","src":"9467:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9422:20:20","nodeType":"YulIdentifier","src":"9422:20:20"},"nativeSrc":"9422:53:20","nodeType":"YulFunctionCall","src":"9422:53:20"},"variableNames":[{"name":"value0","nativeSrc":"9412:6:20","nodeType":"YulIdentifier","src":"9412:6:20"}]}]},{"nativeSrc":"9495:118:20","nodeType":"YulBlock","src":"9495:118:20","statements":[{"nativeSrc":"9510:16:20","nodeType":"YulVariableDeclaration","src":"9510:16:20","value":{"kind":"number","nativeSrc":"9524:2:20","nodeType":"YulLiteral","src":"9524:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9514:6:20","nodeType":"YulTypedName","src":"9514:6:20","type":""}]},{"nativeSrc":"9540:63:20","nodeType":"YulAssignment","src":"9540:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9575:9:20","nodeType":"YulIdentifier","src":"9575:9:20"},{"name":"offset","nativeSrc":"9586:6:20","nodeType":"YulIdentifier","src":"9586:6:20"}],"functionName":{"name":"add","nativeSrc":"9571:3:20","nodeType":"YulIdentifier","src":"9571:3:20"},"nativeSrc":"9571:22:20","nodeType":"YulFunctionCall","src":"9571:22:20"},{"name":"dataEnd","nativeSrc":"9595:7:20","nodeType":"YulIdentifier","src":"9595:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9550:20:20","nodeType":"YulIdentifier","src":"9550:20:20"},"nativeSrc":"9550:53:20","nodeType":"YulFunctionCall","src":"9550:53:20"},"variableNames":[{"name":"value1","nativeSrc":"9540:6:20","nodeType":"YulIdentifier","src":"9540:6:20"}]}]},{"nativeSrc":"9623:118:20","nodeType":"YulBlock","src":"9623:118:20","statements":[{"nativeSrc":"9638:16:20","nodeType":"YulVariableDeclaration","src":"9638:16:20","value":{"kind":"number","nativeSrc":"9652:2:20","nodeType":"YulLiteral","src":"9652:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9642:6:20","nodeType":"YulTypedName","src":"9642:6:20","type":""}]},{"nativeSrc":"9668:63:20","nodeType":"YulAssignment","src":"9668:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9703:9:20","nodeType":"YulIdentifier","src":"9703:9:20"},{"name":"offset","nativeSrc":"9714:6:20","nodeType":"YulIdentifier","src":"9714:6:20"}],"functionName":{"name":"add","nativeSrc":"9699:3:20","nodeType":"YulIdentifier","src":"9699:3:20"},"nativeSrc":"9699:22:20","nodeType":"YulFunctionCall","src":"9699:22:20"},{"name":"dataEnd","nativeSrc":"9723:7:20","nodeType":"YulIdentifier","src":"9723:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9678:20:20","nodeType":"YulIdentifier","src":"9678:20:20"},"nativeSrc":"9678:53:20","nodeType":"YulFunctionCall","src":"9678:53:20"},"variableNames":[{"name":"value2","nativeSrc":"9668:6:20","nodeType":"YulIdentifier","src":"9668:6:20"}]}]},{"nativeSrc":"9751:118:20","nodeType":"YulBlock","src":"9751:118:20","statements":[{"nativeSrc":"9766:16:20","nodeType":"YulVariableDeclaration","src":"9766:16:20","value":{"kind":"number","nativeSrc":"9780:2:20","nodeType":"YulLiteral","src":"9780:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"9770:6:20","nodeType":"YulTypedName","src":"9770:6:20","type":""}]},{"nativeSrc":"9796:63:20","nodeType":"YulAssignment","src":"9796:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9831:9:20","nodeType":"YulIdentifier","src":"9831:9:20"},{"name":"offset","nativeSrc":"9842:6:20","nodeType":"YulIdentifier","src":"9842:6:20"}],"functionName":{"name":"add","nativeSrc":"9827:3:20","nodeType":"YulIdentifier","src":"9827:3:20"},"nativeSrc":"9827:22:20","nodeType":"YulFunctionCall","src":"9827:22:20"},{"name":"dataEnd","nativeSrc":"9851:7:20","nodeType":"YulIdentifier","src":"9851:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9806:20:20","nodeType":"YulIdentifier","src":"9806:20:20"},"nativeSrc":"9806:53:20","nodeType":"YulFunctionCall","src":"9806:53:20"},"variableNames":[{"name":"value3","nativeSrc":"9796:6:20","nodeType":"YulIdentifier","src":"9796:6:20"}]}]},{"nativeSrc":"9879:119:20","nodeType":"YulBlock","src":"9879:119:20","statements":[{"nativeSrc":"9894:17:20","nodeType":"YulVariableDeclaration","src":"9894:17:20","value":{"kind":"number","nativeSrc":"9908:3:20","nodeType":"YulLiteral","src":"9908:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"9898:6:20","nodeType":"YulTypedName","src":"9898:6:20","type":""}]},{"nativeSrc":"9925:63:20","nodeType":"YulAssignment","src":"9925:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9960:9:20","nodeType":"YulIdentifier","src":"9960:9:20"},{"name":"offset","nativeSrc":"9971:6:20","nodeType":"YulIdentifier","src":"9971:6:20"}],"functionName":{"name":"add","nativeSrc":"9956:3:20","nodeType":"YulIdentifier","src":"9956:3:20"},"nativeSrc":"9956:22:20","nodeType":"YulFunctionCall","src":"9956:22:20"},{"name":"dataEnd","nativeSrc":"9980:7:20","nodeType":"YulIdentifier","src":"9980:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9935:20:20","nodeType":"YulIdentifier","src":"9935:20:20"},"nativeSrc":"9935:53:20","nodeType":"YulFunctionCall","src":"9935:53:20"},"variableNames":[{"name":"value4","nativeSrc":"9925:6:20","nodeType":"YulIdentifier","src":"9925:6:20"}]}]},{"nativeSrc":"10008:119:20","nodeType":"YulBlock","src":"10008:119:20","statements":[{"nativeSrc":"10023:17:20","nodeType":"YulVariableDeclaration","src":"10023:17:20","value":{"kind":"number","nativeSrc":"10037:3:20","nodeType":"YulLiteral","src":"10037:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10027:6:20","nodeType":"YulTypedName","src":"10027:6:20","type":""}]},{"nativeSrc":"10054:63:20","nodeType":"YulAssignment","src":"10054:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10089:9:20","nodeType":"YulIdentifier","src":"10089:9:20"},{"name":"offset","nativeSrc":"10100:6:20","nodeType":"YulIdentifier","src":"10100:6:20"}],"functionName":{"name":"add","nativeSrc":"10085:3:20","nodeType":"YulIdentifier","src":"10085:3:20"},"nativeSrc":"10085:22:20","nodeType":"YulFunctionCall","src":"10085:22:20"},{"name":"dataEnd","nativeSrc":"10109:7:20","nodeType":"YulIdentifier","src":"10109:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10064:20:20","nodeType":"YulIdentifier","src":"10064:20:20"},"nativeSrc":"10064:53:20","nodeType":"YulFunctionCall","src":"10064:53:20"},"variableNames":[{"name":"value5","nativeSrc":"10054:6:20","nodeType":"YulIdentifier","src":"10054:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_address","nativeSrc":"9077:1057:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9158:9:20","nodeType":"YulTypedName","src":"9158:9:20","type":""},{"name":"dataEnd","nativeSrc":"9169:7:20","nodeType":"YulTypedName","src":"9169:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9181:6:20","nodeType":"YulTypedName","src":"9181:6:20","type":""},{"name":"value1","nativeSrc":"9189:6:20","nodeType":"YulTypedName","src":"9189:6:20","type":""},{"name":"value2","nativeSrc":"9197:6:20","nodeType":"YulTypedName","src":"9197:6:20","type":""},{"name":"value3","nativeSrc":"9205:6:20","nodeType":"YulTypedName","src":"9205:6:20","type":""},{"name":"value4","nativeSrc":"9213:6:20","nodeType":"YulTypedName","src":"9213:6:20","type":""},{"name":"value5","nativeSrc":"9221:6:20","nodeType":"YulTypedName","src":"9221:6:20","type":""}],"src":"9077:1057:20"},{"body":{"nativeSrc":"10205:53:20","nodeType":"YulBlock","src":"10205:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10222:3:20","nodeType":"YulIdentifier","src":"10222:3:20"},{"arguments":[{"name":"value","nativeSrc":"10245:5:20","nodeType":"YulIdentifier","src":"10245:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10227:17:20","nodeType":"YulIdentifier","src":"10227:17:20"},"nativeSrc":"10227:24:20","nodeType":"YulFunctionCall","src":"10227:24:20"}],"functionName":{"name":"mstore","nativeSrc":"10215:6:20","nodeType":"YulIdentifier","src":"10215:6:20"},"nativeSrc":"10215:37:20","nodeType":"YulFunctionCall","src":"10215:37:20"},"nativeSrc":"10215:37:20","nodeType":"YulExpressionStatement","src":"10215:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10140:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10193:5:20","nodeType":"YulTypedName","src":"10193:5:20","type":""},{"name":"pos","nativeSrc":"10200:3:20","nodeType":"YulTypedName","src":"10200:3:20","type":""}],"src":"10140:118:20"},{"body":{"nativeSrc":"10362:124:20","nodeType":"YulBlock","src":"10362:124:20","statements":[{"nativeSrc":"10372:26:20","nodeType":"YulAssignment","src":"10372:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10384:9:20","nodeType":"YulIdentifier","src":"10384:9:20"},{"kind":"number","nativeSrc":"10395:2:20","nodeType":"YulLiteral","src":"10395:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10380:3:20","nodeType":"YulIdentifier","src":"10380:3:20"},"nativeSrc":"10380:18:20","nodeType":"YulFunctionCall","src":"10380:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10372:4:20","nodeType":"YulIdentifier","src":"10372:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10452:6:20","nodeType":"YulIdentifier","src":"10452:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10465:9:20","nodeType":"YulIdentifier","src":"10465:9:20"},{"kind":"number","nativeSrc":"10476:1:20","nodeType":"YulLiteral","src":"10476:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10461:3:20","nodeType":"YulIdentifier","src":"10461:3:20"},"nativeSrc":"10461:17:20","nodeType":"YulFunctionCall","src":"10461:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10408:43:20","nodeType":"YulIdentifier","src":"10408:43:20"},"nativeSrc":"10408:71:20","nodeType":"YulFunctionCall","src":"10408:71:20"},"nativeSrc":"10408:71:20","nodeType":"YulExpressionStatement","src":"10408:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10264:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10334:9:20","nodeType":"YulTypedName","src":"10334:9:20","type":""},{"name":"value0","nativeSrc":"10346:6:20","nodeType":"YulTypedName","src":"10346:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10357:4:20","nodeType":"YulTypedName","src":"10357:4:20","type":""}],"src":"10264:222:20"},{"body":{"nativeSrc":"10557:53:20","nodeType":"YulBlock","src":"10557:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10574:3:20","nodeType":"YulIdentifier","src":"10574:3:20"},{"arguments":[{"name":"value","nativeSrc":"10597:5:20","nodeType":"YulIdentifier","src":"10597:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10579:17:20","nodeType":"YulIdentifier","src":"10579:17:20"},"nativeSrc":"10579:24:20","nodeType":"YulFunctionCall","src":"10579:24:20"}],"functionName":{"name":"mstore","nativeSrc":"10567:6:20","nodeType":"YulIdentifier","src":"10567:6:20"},"nativeSrc":"10567:37:20","nodeType":"YulFunctionCall","src":"10567:37:20"},"nativeSrc":"10567:37:20","nodeType":"YulExpressionStatement","src":"10567:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10492:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10545:5:20","nodeType":"YulTypedName","src":"10545:5:20","type":""},{"name":"pos","nativeSrc":"10552:3:20","nodeType":"YulTypedName","src":"10552:3:20","type":""}],"src":"10492:118:20"},{"body":{"nativeSrc":"10675:50:20","nodeType":"YulBlock","src":"10675:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10692:3:20","nodeType":"YulIdentifier","src":"10692:3:20"},{"arguments":[{"name":"value","nativeSrc":"10712:5:20","nodeType":"YulIdentifier","src":"10712:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"10697:14:20","nodeType":"YulIdentifier","src":"10697:14:20"},"nativeSrc":"10697:21:20","nodeType":"YulFunctionCall","src":"10697:21:20"}],"functionName":{"name":"mstore","nativeSrc":"10685:6:20","nodeType":"YulIdentifier","src":"10685:6:20"},"nativeSrc":"10685:34:20","nodeType":"YulFunctionCall","src":"10685:34:20"},"nativeSrc":"10685:34:20","nodeType":"YulExpressionStatement","src":"10685:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"10616:109:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10663:5:20","nodeType":"YulTypedName","src":"10663:5:20","type":""},{"name":"pos","nativeSrc":"10670:3:20","nodeType":"YulTypedName","src":"10670:3:20","type":""}],"src":"10616:109:20"},{"body":{"nativeSrc":"10963:531:20","nodeType":"YulBlock","src":"10963:531:20","statements":[{"nativeSrc":"10973:27:20","nodeType":"YulAssignment","src":"10973:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10985:9:20","nodeType":"YulIdentifier","src":"10985:9:20"},{"kind":"number","nativeSrc":"10996:3:20","nodeType":"YulLiteral","src":"10996:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10981:3:20","nodeType":"YulIdentifier","src":"10981:3:20"},"nativeSrc":"10981:19:20","nodeType":"YulFunctionCall","src":"10981:19:20"},"variableNames":[{"name":"tail","nativeSrc":"10973:4:20","nodeType":"YulIdentifier","src":"10973:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11054:6:20","nodeType":"YulIdentifier","src":"11054:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11067:9:20","nodeType":"YulIdentifier","src":"11067:9:20"},{"kind":"number","nativeSrc":"11078:1:20","nodeType":"YulLiteral","src":"11078:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11063:3:20","nodeType":"YulIdentifier","src":"11063:3:20"},"nativeSrc":"11063:17:20","nodeType":"YulFunctionCall","src":"11063:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11010:43:20","nodeType":"YulIdentifier","src":"11010:43:20"},"nativeSrc":"11010:71:20","nodeType":"YulFunctionCall","src":"11010:71:20"},"nativeSrc":"11010:71:20","nodeType":"YulExpressionStatement","src":"11010:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11135:6:20","nodeType":"YulIdentifier","src":"11135:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11148:9:20","nodeType":"YulIdentifier","src":"11148:9:20"},{"kind":"number","nativeSrc":"11159:2:20","nodeType":"YulLiteral","src":"11159:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11144:3:20","nodeType":"YulIdentifier","src":"11144:3:20"},"nativeSrc":"11144:18:20","nodeType":"YulFunctionCall","src":"11144:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11091:43:20","nodeType":"YulIdentifier","src":"11091:43:20"},"nativeSrc":"11091:72:20","nodeType":"YulFunctionCall","src":"11091:72:20"},"nativeSrc":"11091:72:20","nodeType":"YulExpressionStatement","src":"11091:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11217:6:20","nodeType":"YulIdentifier","src":"11217:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11230:9:20","nodeType":"YulIdentifier","src":"11230:9:20"},{"kind":"number","nativeSrc":"11241:2:20","nodeType":"YulLiteral","src":"11241:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11226:3:20","nodeType":"YulIdentifier","src":"11226:3:20"},"nativeSrc":"11226:18:20","nodeType":"YulFunctionCall","src":"11226:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11173:43:20","nodeType":"YulIdentifier","src":"11173:43:20"},"nativeSrc":"11173:72:20","nodeType":"YulFunctionCall","src":"11173:72:20"},"nativeSrc":"11173:72:20","nodeType":"YulExpressionStatement","src":"11173:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11299:6:20","nodeType":"YulIdentifier","src":"11299:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11312:9:20","nodeType":"YulIdentifier","src":"11312:9:20"},{"kind":"number","nativeSrc":"11323:2:20","nodeType":"YulLiteral","src":"11323:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11308:3:20","nodeType":"YulIdentifier","src":"11308:3:20"},"nativeSrc":"11308:18:20","nodeType":"YulFunctionCall","src":"11308:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11255:43:20","nodeType":"YulIdentifier","src":"11255:43:20"},"nativeSrc":"11255:72:20","nodeType":"YulFunctionCall","src":"11255:72:20"},"nativeSrc":"11255:72:20","nodeType":"YulExpressionStatement","src":"11255:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11381:6:20","nodeType":"YulIdentifier","src":"11381:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11394:9:20","nodeType":"YulIdentifier","src":"11394:9:20"},{"kind":"number","nativeSrc":"11405:3:20","nodeType":"YulLiteral","src":"11405:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11390:3:20","nodeType":"YulIdentifier","src":"11390:3:20"},"nativeSrc":"11390:19:20","nodeType":"YulFunctionCall","src":"11390:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11337:43:20","nodeType":"YulIdentifier","src":"11337:43:20"},"nativeSrc":"11337:73:20","nodeType":"YulFunctionCall","src":"11337:73:20"},"nativeSrc":"11337:73:20","nodeType":"YulExpressionStatement","src":"11337:73:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"11458:6:20","nodeType":"YulIdentifier","src":"11458:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11471:9:20","nodeType":"YulIdentifier","src":"11471:9:20"},{"kind":"number","nativeSrc":"11482:3:20","nodeType":"YulLiteral","src":"11482:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11467:3:20","nodeType":"YulIdentifier","src":"11467:3:20"},"nativeSrc":"11467:19:20","nodeType":"YulFunctionCall","src":"11467:19:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"11420:37:20","nodeType":"YulIdentifier","src":"11420:37:20"},"nativeSrc":"11420:67:20","nodeType":"YulFunctionCall","src":"11420:67:20"},"nativeSrc":"11420:67:20","nodeType":"YulExpressionStatement","src":"11420:67:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed","nativeSrc":"10731:763:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10895:9:20","nodeType":"YulTypedName","src":"10895:9:20","type":""},{"name":"value5","nativeSrc":"10907:6:20","nodeType":"YulTypedName","src":"10907:6:20","type":""},{"name":"value4","nativeSrc":"10915:6:20","nodeType":"YulTypedName","src":"10915:6:20","type":""},{"name":"value3","nativeSrc":"10923:6:20","nodeType":"YulTypedName","src":"10923:6:20","type":""},{"name":"value2","nativeSrc":"10931:6:20","nodeType":"YulTypedName","src":"10931:6:20","type":""},{"name":"value1","nativeSrc":"10939:6:20","nodeType":"YulTypedName","src":"10939:6:20","type":""},{"name":"value0","nativeSrc":"10947:6:20","nodeType":"YulTypedName","src":"10947:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10958:4:20","nodeType":"YulTypedName","src":"10958:4:20","type":""}],"src":"10731:763:20"},{"body":{"nativeSrc":"11682:371:20","nodeType":"YulBlock","src":"11682:371:20","statements":[{"nativeSrc":"11692:27:20","nodeType":"YulAssignment","src":"11692:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11704:9:20","nodeType":"YulIdentifier","src":"11704:9:20"},{"kind":"number","nativeSrc":"11715:3:20","nodeType":"YulLiteral","src":"11715:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11700:3:20","nodeType":"YulIdentifier","src":"11700:3:20"},"nativeSrc":"11700:19:20","nodeType":"YulFunctionCall","src":"11700:19:20"},"variableNames":[{"name":"tail","nativeSrc":"11692:4:20","nodeType":"YulIdentifier","src":"11692:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11773:6:20","nodeType":"YulIdentifier","src":"11773:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11786:9:20","nodeType":"YulIdentifier","src":"11786:9:20"},{"kind":"number","nativeSrc":"11797:1:20","nodeType":"YulLiteral","src":"11797:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11782:3:20","nodeType":"YulIdentifier","src":"11782:3:20"},"nativeSrc":"11782:17:20","nodeType":"YulFunctionCall","src":"11782:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11729:43:20","nodeType":"YulIdentifier","src":"11729:43:20"},"nativeSrc":"11729:71:20","nodeType":"YulFunctionCall","src":"11729:71:20"},"nativeSrc":"11729:71:20","nodeType":"YulExpressionStatement","src":"11729:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11854:6:20","nodeType":"YulIdentifier","src":"11854:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11867:9:20","nodeType":"YulIdentifier","src":"11867:9:20"},{"kind":"number","nativeSrc":"11878:2:20","nodeType":"YulLiteral","src":"11878:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11863:3:20","nodeType":"YulIdentifier","src":"11863:3:20"},"nativeSrc":"11863:18:20","nodeType":"YulFunctionCall","src":"11863:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11810:43:20","nodeType":"YulIdentifier","src":"11810:43:20"},"nativeSrc":"11810:72:20","nodeType":"YulFunctionCall","src":"11810:72:20"},"nativeSrc":"11810:72:20","nodeType":"YulExpressionStatement","src":"11810:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11936:6:20","nodeType":"YulIdentifier","src":"11936:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11949:9:20","nodeType":"YulIdentifier","src":"11949:9:20"},{"kind":"number","nativeSrc":"11960:2:20","nodeType":"YulLiteral","src":"11960:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11945:3:20","nodeType":"YulIdentifier","src":"11945:3:20"},"nativeSrc":"11945:18:20","nodeType":"YulFunctionCall","src":"11945:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11892:43:20","nodeType":"YulIdentifier","src":"11892:43:20"},"nativeSrc":"11892:72:20","nodeType":"YulFunctionCall","src":"11892:72:20"},"nativeSrc":"11892:72:20","nodeType":"YulExpressionStatement","src":"11892:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12018:6:20","nodeType":"YulIdentifier","src":"12018:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"12031:9:20","nodeType":"YulIdentifier","src":"12031:9:20"},{"kind":"number","nativeSrc":"12042:2:20","nodeType":"YulLiteral","src":"12042:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12027:3:20","nodeType":"YulIdentifier","src":"12027:3:20"},"nativeSrc":"12027:18:20","nodeType":"YulFunctionCall","src":"12027:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11974:43:20","nodeType":"YulIdentifier","src":"11974:43:20"},"nativeSrc":"11974:72:20","nodeType":"YulFunctionCall","src":"11974:72:20"},"nativeSrc":"11974:72:20","nodeType":"YulExpressionStatement","src":"11974:72:20"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11500:553:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11630:9:20","nodeType":"YulTypedName","src":"11630:9:20","type":""},{"name":"value3","nativeSrc":"11642:6:20","nodeType":"YulTypedName","src":"11642:6:20","type":""},{"name":"value2","nativeSrc":"11650:6:20","nodeType":"YulTypedName","src":"11650:6:20","type":""},{"name":"value1","nativeSrc":"11658:6:20","nodeType":"YulTypedName","src":"11658:6:20","type":""},{"name":"value0","nativeSrc":"11666:6:20","nodeType":"YulTypedName","src":"11666:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11677:4:20","nodeType":"YulTypedName","src":"11677:4:20","type":""}],"src":"11500:553:20"},{"body":{"nativeSrc":"12142:391:20","nodeType":"YulBlock","src":"12142:391:20","statements":[{"body":{"nativeSrc":"12188:83:20","nodeType":"YulBlock","src":"12188:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12190:77:20","nodeType":"YulIdentifier","src":"12190:77:20"},"nativeSrc":"12190:79:20","nodeType":"YulFunctionCall","src":"12190:79:20"},"nativeSrc":"12190:79:20","nodeType":"YulExpressionStatement","src":"12190:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12163:7:20","nodeType":"YulIdentifier","src":"12163:7:20"},{"name":"headStart","nativeSrc":"12172:9:20","nodeType":"YulIdentifier","src":"12172:9:20"}],"functionName":{"name":"sub","nativeSrc":"12159:3:20","nodeType":"YulIdentifier","src":"12159:3:20"},"nativeSrc":"12159:23:20","nodeType":"YulFunctionCall","src":"12159:23:20"},{"kind":"number","nativeSrc":"12184:2:20","nodeType":"YulLiteral","src":"12184:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12155:3:20","nodeType":"YulIdentifier","src":"12155:3:20"},"nativeSrc":"12155:32:20","nodeType":"YulFunctionCall","src":"12155:32:20"},"nativeSrc":"12152:119:20","nodeType":"YulIf","src":"12152:119:20"},{"nativeSrc":"12281:117:20","nodeType":"YulBlock","src":"12281:117:20","statements":[{"nativeSrc":"12296:15:20","nodeType":"YulVariableDeclaration","src":"12296:15:20","value":{"kind":"number","nativeSrc":"12310:1:20","nodeType":"YulLiteral","src":"12310:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12300:6:20","nodeType":"YulTypedName","src":"12300:6:20","type":""}]},{"nativeSrc":"12325:63:20","nodeType":"YulAssignment","src":"12325:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12360:9:20","nodeType":"YulIdentifier","src":"12360:9:20"},{"name":"offset","nativeSrc":"12371:6:20","nodeType":"YulIdentifier","src":"12371:6:20"}],"functionName":{"name":"add","nativeSrc":"12356:3:20","nodeType":"YulIdentifier","src":"12356:3:20"},"nativeSrc":"12356:22:20","nodeType":"YulFunctionCall","src":"12356:22:20"},{"name":"dataEnd","nativeSrc":"12380:7:20","nodeType":"YulIdentifier","src":"12380:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12335:20:20","nodeType":"YulIdentifier","src":"12335:20:20"},"nativeSrc":"12335:53:20","nodeType":"YulFunctionCall","src":"12335:53:20"},"variableNames":[{"name":"value0","nativeSrc":"12325:6:20","nodeType":"YulIdentifier","src":"12325:6:20"}]}]},{"nativeSrc":"12408:118:20","nodeType":"YulBlock","src":"12408:118:20","statements":[{"nativeSrc":"12423:16:20","nodeType":"YulVariableDeclaration","src":"12423:16:20","value":{"kind":"number","nativeSrc":"12437:2:20","nodeType":"YulLiteral","src":"12437:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12427:6:20","nodeType":"YulTypedName","src":"12427:6:20","type":""}]},{"nativeSrc":"12453:63:20","nodeType":"YulAssignment","src":"12453:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12488:9:20","nodeType":"YulIdentifier","src":"12488:9:20"},{"name":"offset","nativeSrc":"12499:6:20","nodeType":"YulIdentifier","src":"12499:6:20"}],"functionName":{"name":"add","nativeSrc":"12484:3:20","nodeType":"YulIdentifier","src":"12484:3:20"},"nativeSrc":"12484:22:20","nodeType":"YulFunctionCall","src":"12484:22:20"},{"name":"dataEnd","nativeSrc":"12508:7:20","nodeType":"YulIdentifier","src":"12508:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12463:20:20","nodeType":"YulIdentifier","src":"12463:20:20"},"nativeSrc":"12463:53:20","nodeType":"YulFunctionCall","src":"12463:53:20"},"variableNames":[{"name":"value1","nativeSrc":"12453:6:20","nodeType":"YulIdentifier","src":"12453:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"12059:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12104:9:20","nodeType":"YulTypedName","src":"12104:9:20","type":""},{"name":"dataEnd","nativeSrc":"12115:7:20","nodeType":"YulTypedName","src":"12115:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12127:6:20","nodeType":"YulTypedName","src":"12127:6:20","type":""},{"name":"value1","nativeSrc":"12135:6:20","nodeType":"YulTypedName","src":"12135:6:20","type":""}],"src":"12059:474:20"},{"body":{"nativeSrc":"12635:73:20","nodeType":"YulBlock","src":"12635:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12652:3:20","nodeType":"YulIdentifier","src":"12652:3:20"},{"name":"length","nativeSrc":"12657:6:20","nodeType":"YulIdentifier","src":"12657:6:20"}],"functionName":{"name":"mstore","nativeSrc":"12645:6:20","nodeType":"YulIdentifier","src":"12645:6:20"},"nativeSrc":"12645:19:20","nodeType":"YulFunctionCall","src":"12645:19:20"},"nativeSrc":"12645:19:20","nodeType":"YulExpressionStatement","src":"12645:19:20"},{"nativeSrc":"12673:29:20","nodeType":"YulAssignment","src":"12673:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"12692:3:20","nodeType":"YulIdentifier","src":"12692:3:20"},{"kind":"number","nativeSrc":"12697:4:20","nodeType":"YulLiteral","src":"12697:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12688:3:20","nodeType":"YulIdentifier","src":"12688:3:20"},"nativeSrc":"12688:14:20","nodeType":"YulFunctionCall","src":"12688:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"12673:11:20","nodeType":"YulIdentifier","src":"12673:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12539:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12607:3:20","nodeType":"YulTypedName","src":"12607:3:20","type":""},{"name":"length","nativeSrc":"12612:6:20","nodeType":"YulTypedName","src":"12612:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12623:11:20","nodeType":"YulTypedName","src":"12623:11:20","type":""}],"src":"12539:169:20"},{"body":{"nativeSrc":"12820:125:20","nodeType":"YulBlock","src":"12820:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12842:6:20","nodeType":"YulIdentifier","src":"12842:6:20"},{"kind":"number","nativeSrc":"12850:1:20","nodeType":"YulLiteral","src":"12850:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12838:3:20","nodeType":"YulIdentifier","src":"12838:3:20"},"nativeSrc":"12838:14:20","nodeType":"YulFunctionCall","src":"12838:14:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"12854:34:20","nodeType":"YulLiteral","src":"12854:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"12831:6:20","nodeType":"YulIdentifier","src":"12831:6:20"},"nativeSrc":"12831:58:20","nodeType":"YulFunctionCall","src":"12831:58:20"},"nativeSrc":"12831:58:20","nodeType":"YulExpressionStatement","src":"12831:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12910:6:20","nodeType":"YulIdentifier","src":"12910:6:20"},{"kind":"number","nativeSrc":"12918:2:20","nodeType":"YulLiteral","src":"12918:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12906:3:20","nodeType":"YulIdentifier","src":"12906:3:20"},"nativeSrc":"12906:15:20","nodeType":"YulFunctionCall","src":"12906:15:20"},{"hexValue":"64656c656761746563616c6c","kind":"string","nativeSrc":"12923:14:20","nodeType":"YulLiteral","src":"12923:14:20","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"12899:6:20","nodeType":"YulIdentifier","src":"12899:6:20"},"nativeSrc":"12899:39:20","nodeType":"YulFunctionCall","src":"12899:39:20"},"nativeSrc":"12899:39:20","nodeType":"YulExpressionStatement","src":"12899:39:20"}]},"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nativeSrc":"12714:231:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12812:6:20","nodeType":"YulTypedName","src":"12812:6:20","type":""}],"src":"12714:231:20"},{"body":{"nativeSrc":"13097:220:20","nodeType":"YulBlock","src":"13097:220:20","statements":[{"nativeSrc":"13107:74:20","nodeType":"YulAssignment","src":"13107:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"13173:3:20","nodeType":"YulIdentifier","src":"13173:3:20"},{"kind":"number","nativeSrc":"13178:2:20","nodeType":"YulLiteral","src":"13178:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13114:58:20","nodeType":"YulIdentifier","src":"13114:58:20"},"nativeSrc":"13114:67:20","nodeType":"YulFunctionCall","src":"13114:67:20"},"variableNames":[{"name":"pos","nativeSrc":"13107:3:20","nodeType":"YulIdentifier","src":"13107:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13279:3:20","nodeType":"YulIdentifier","src":"13279:3:20"}],"functionName":{"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nativeSrc":"13190:88:20","nodeType":"YulIdentifier","src":"13190:88:20"},"nativeSrc":"13190:93:20","nodeType":"YulFunctionCall","src":"13190:93:20"},"nativeSrc":"13190:93:20","nodeType":"YulExpressionStatement","src":"13190:93:20"},{"nativeSrc":"13292:19:20","nodeType":"YulAssignment","src":"13292:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"13303:3:20","nodeType":"YulIdentifier","src":"13303:3:20"},{"kind":"number","nativeSrc":"13308:2:20","nodeType":"YulLiteral","src":"13308:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13299:3:20","nodeType":"YulIdentifier","src":"13299:3:20"},"nativeSrc":"13299:12:20","nodeType":"YulFunctionCall","src":"13299:12:20"},"variableNames":[{"name":"end","nativeSrc":"13292:3:20","nodeType":"YulIdentifier","src":"13292:3:20"}]}]},"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nativeSrc":"12951:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13085:3:20","nodeType":"YulTypedName","src":"13085:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13093:3:20","nodeType":"YulTypedName","src":"13093:3:20","type":""}],"src":"12951:366:20"},{"body":{"nativeSrc":"13494:248:20","nodeType":"YulBlock","src":"13494:248:20","statements":[{"nativeSrc":"13504:26:20","nodeType":"YulAssignment","src":"13504:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13516:9:20","nodeType":"YulIdentifier","src":"13516:9:20"},{"kind":"number","nativeSrc":"13527:2:20","nodeType":"YulLiteral","src":"13527:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13512:3:20","nodeType":"YulIdentifier","src":"13512:3:20"},"nativeSrc":"13512:18:20","nodeType":"YulFunctionCall","src":"13512:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13504:4:20","nodeType":"YulIdentifier","src":"13504:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13551:9:20","nodeType":"YulIdentifier","src":"13551:9:20"},{"kind":"number","nativeSrc":"13562:1:20","nodeType":"YulLiteral","src":"13562:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13547:3:20","nodeType":"YulIdentifier","src":"13547:3:20"},"nativeSrc":"13547:17:20","nodeType":"YulFunctionCall","src":"13547:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13570:4:20","nodeType":"YulIdentifier","src":"13570:4:20"},{"name":"headStart","nativeSrc":"13576:9:20","nodeType":"YulIdentifier","src":"13576:9:20"}],"functionName":{"name":"sub","nativeSrc":"13566:3:20","nodeType":"YulIdentifier","src":"13566:3:20"},"nativeSrc":"13566:20:20","nodeType":"YulFunctionCall","src":"13566:20:20"}],"functionName":{"name":"mstore","nativeSrc":"13540:6:20","nodeType":"YulIdentifier","src":"13540:6:20"},"nativeSrc":"13540:47:20","nodeType":"YulFunctionCall","src":"13540:47:20"},"nativeSrc":"13540:47:20","nodeType":"YulExpressionStatement","src":"13540:47:20"},{"nativeSrc":"13596:139:20","nodeType":"YulAssignment","src":"13596:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"13730:4:20","nodeType":"YulIdentifier","src":"13730:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nativeSrc":"13604:124:20","nodeType":"YulIdentifier","src":"13604:124:20"},"nativeSrc":"13604:131:20","nodeType":"YulFunctionCall","src":"13604:131:20"},"variableNames":[{"name":"tail","nativeSrc":"13596:4:20","nodeType":"YulIdentifier","src":"13596:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13323:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13474:9:20","nodeType":"YulTypedName","src":"13474:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13489:4:20","nodeType":"YulTypedName","src":"13489:4:20","type":""}],"src":"13323:419:20"},{"body":{"nativeSrc":"13854:125:20","nodeType":"YulBlock","src":"13854:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13876:6:20","nodeType":"YulIdentifier","src":"13876:6:20"},{"kind":"number","nativeSrc":"13884:1:20","nodeType":"YulLiteral","src":"13884:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13872:3:20","nodeType":"YulIdentifier","src":"13872:3:20"},"nativeSrc":"13872:14:20","nodeType":"YulFunctionCall","src":"13872:14:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"13888:34:20","nodeType":"YulLiteral","src":"13888:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"13865:6:20","nodeType":"YulIdentifier","src":"13865:6:20"},"nativeSrc":"13865:58:20","nodeType":"YulFunctionCall","src":"13865:58:20"},"nativeSrc":"13865:58:20","nodeType":"YulExpressionStatement","src":"13865:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13944:6:20","nodeType":"YulIdentifier","src":"13944:6:20"},{"kind":"number","nativeSrc":"13952:2:20","nodeType":"YulLiteral","src":"13952:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13940:3:20","nodeType":"YulIdentifier","src":"13940:3:20"},"nativeSrc":"13940:15:20","nodeType":"YulFunctionCall","src":"13940:15:20"},{"hexValue":"6163746976652070726f7879","kind":"string","nativeSrc":"13957:14:20","nodeType":"YulLiteral","src":"13957:14:20","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nativeSrc":"13933:6:20","nodeType":"YulIdentifier","src":"13933:6:20"},"nativeSrc":"13933:39:20","nodeType":"YulFunctionCall","src":"13933:39:20"},"nativeSrc":"13933:39:20","nodeType":"YulExpressionStatement","src":"13933:39:20"}]},"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nativeSrc":"13748:231:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13846:6:20","nodeType":"YulTypedName","src":"13846:6:20","type":""}],"src":"13748:231:20"},{"body":{"nativeSrc":"14131:220:20","nodeType":"YulBlock","src":"14131:220:20","statements":[{"nativeSrc":"14141:74:20","nodeType":"YulAssignment","src":"14141:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"14207:3:20","nodeType":"YulIdentifier","src":"14207:3:20"},{"kind":"number","nativeSrc":"14212:2:20","nodeType":"YulLiteral","src":"14212:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14148:58:20","nodeType":"YulIdentifier","src":"14148:58:20"},"nativeSrc":"14148:67:20","nodeType":"YulFunctionCall","src":"14148:67:20"},"variableNames":[{"name":"pos","nativeSrc":"14141:3:20","nodeType":"YulIdentifier","src":"14141:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14313:3:20","nodeType":"YulIdentifier","src":"14313:3:20"}],"functionName":{"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nativeSrc":"14224:88:20","nodeType":"YulIdentifier","src":"14224:88:20"},"nativeSrc":"14224:93:20","nodeType":"YulFunctionCall","src":"14224:93:20"},"nativeSrc":"14224:93:20","nodeType":"YulExpressionStatement","src":"14224:93:20"},{"nativeSrc":"14326:19:20","nodeType":"YulAssignment","src":"14326:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"14337:3:20","nodeType":"YulIdentifier","src":"14337:3:20"},{"kind":"number","nativeSrc":"14342:2:20","nodeType":"YulLiteral","src":"14342:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14333:3:20","nodeType":"YulIdentifier","src":"14333:3:20"},"nativeSrc":"14333:12:20","nodeType":"YulFunctionCall","src":"14333:12:20"},"variableNames":[{"name":"end","nativeSrc":"14326:3:20","nodeType":"YulIdentifier","src":"14326:3:20"}]}]},"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nativeSrc":"13985:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14119:3:20","nodeType":"YulTypedName","src":"14119:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14127:3:20","nodeType":"YulTypedName","src":"14127:3:20","type":""}],"src":"13985:366:20"},{"body":{"nativeSrc":"14528:248:20","nodeType":"YulBlock","src":"14528:248:20","statements":[{"nativeSrc":"14538:26:20","nodeType":"YulAssignment","src":"14538:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"14550:9:20","nodeType":"YulIdentifier","src":"14550:9:20"},{"kind":"number","nativeSrc":"14561:2:20","nodeType":"YulLiteral","src":"14561:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14546:3:20","nodeType":"YulIdentifier","src":"14546:3:20"},"nativeSrc":"14546:18:20","nodeType":"YulFunctionCall","src":"14546:18:20"},"variableNames":[{"name":"tail","nativeSrc":"14538:4:20","nodeType":"YulIdentifier","src":"14538:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14585:9:20","nodeType":"YulIdentifier","src":"14585:9:20"},{"kind":"number","nativeSrc":"14596:1:20","nodeType":"YulLiteral","src":"14596:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14581:3:20","nodeType":"YulIdentifier","src":"14581:3:20"},"nativeSrc":"14581:17:20","nodeType":"YulFunctionCall","src":"14581:17:20"},{"arguments":[{"name":"tail","nativeSrc":"14604:4:20","nodeType":"YulIdentifier","src":"14604:4:20"},{"name":"headStart","nativeSrc":"14610:9:20","nodeType":"YulIdentifier","src":"14610:9:20"}],"functionName":{"name":"sub","nativeSrc":"14600:3:20","nodeType":"YulIdentifier","src":"14600:3:20"},"nativeSrc":"14600:20:20","nodeType":"YulFunctionCall","src":"14600:20:20"}],"functionName":{"name":"mstore","nativeSrc":"14574:6:20","nodeType":"YulIdentifier","src":"14574:6:20"},"nativeSrc":"14574:47:20","nodeType":"YulFunctionCall","src":"14574:47:20"},"nativeSrc":"14574:47:20","nodeType":"YulExpressionStatement","src":"14574:47:20"},{"nativeSrc":"14630:139:20","nodeType":"YulAssignment","src":"14630:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"14764:4:20","nodeType":"YulIdentifier","src":"14764:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nativeSrc":"14638:124:20","nodeType":"YulIdentifier","src":"14638:124:20"},"nativeSrc":"14638:131:20","nodeType":"YulFunctionCall","src":"14638:131:20"},"variableNames":[{"name":"tail","nativeSrc":"14630:4:20","nodeType":"YulIdentifier","src":"14630:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14357:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14508:9:20","nodeType":"YulTypedName","src":"14508:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14523:4:20","nodeType":"YulTypedName","src":"14523:4:20","type":""}],"src":"14357:419:20"},{"body":{"nativeSrc":"14888:137:20","nodeType":"YulBlock","src":"14888:137:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14910:6:20","nodeType":"YulIdentifier","src":"14910:6:20"},{"kind":"number","nativeSrc":"14918:1:20","nodeType":"YulLiteral","src":"14918:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14906:3:20","nodeType":"YulIdentifier","src":"14906:3:20"},"nativeSrc":"14906:14:20","nodeType":"YulFunctionCall","src":"14906:14:20"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nativeSrc":"14922:34:20","nodeType":"YulLiteral","src":"14922:34:20","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nativeSrc":"14899:6:20","nodeType":"YulIdentifier","src":"14899:6:20"},"nativeSrc":"14899:58:20","nodeType":"YulFunctionCall","src":"14899:58:20"},"nativeSrc":"14899:58:20","nodeType":"YulExpressionStatement","src":"14899:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14978:6:20","nodeType":"YulIdentifier","src":"14978:6:20"},{"kind":"number","nativeSrc":"14986:2:20","nodeType":"YulLiteral","src":"14986:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14974:3:20","nodeType":"YulIdentifier","src":"14974:3:20"},"nativeSrc":"14974:15:20","nodeType":"YulFunctionCall","src":"14974:15:20"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nativeSrc":"14991:26:20","nodeType":"YulLiteral","src":"14991:26:20","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"14967:6:20","nodeType":"YulIdentifier","src":"14967:6:20"},"nativeSrc":"14967:51:20","nodeType":"YulFunctionCall","src":"14967:51:20"},"nativeSrc":"14967:51:20","nodeType":"YulExpressionStatement","src":"14967:51:20"}]},"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nativeSrc":"14782:243:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14880:6:20","nodeType":"YulTypedName","src":"14880:6:20","type":""}],"src":"14782:243:20"},{"body":{"nativeSrc":"15177:220:20","nodeType":"YulBlock","src":"15177:220:20","statements":[{"nativeSrc":"15187:74:20","nodeType":"YulAssignment","src":"15187:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"15253:3:20","nodeType":"YulIdentifier","src":"15253:3:20"},{"kind":"number","nativeSrc":"15258:2:20","nodeType":"YulLiteral","src":"15258:2:20","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15194:58:20","nodeType":"YulIdentifier","src":"15194:58:20"},"nativeSrc":"15194:67:20","nodeType":"YulFunctionCall","src":"15194:67:20"},"variableNames":[{"name":"pos","nativeSrc":"15187:3:20","nodeType":"YulIdentifier","src":"15187:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15359:3:20","nodeType":"YulIdentifier","src":"15359:3:20"}],"functionName":{"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nativeSrc":"15270:88:20","nodeType":"YulIdentifier","src":"15270:88:20"},"nativeSrc":"15270:93:20","nodeType":"YulFunctionCall","src":"15270:93:20"},"nativeSrc":"15270:93:20","nodeType":"YulExpressionStatement","src":"15270:93:20"},{"nativeSrc":"15372:19:20","nodeType":"YulAssignment","src":"15372:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"15383:3:20","nodeType":"YulIdentifier","src":"15383:3:20"},{"kind":"number","nativeSrc":"15388:2:20","nodeType":"YulLiteral","src":"15388:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15379:3:20","nodeType":"YulIdentifier","src":"15379:3:20"},"nativeSrc":"15379:12:20","nodeType":"YulFunctionCall","src":"15379:12:20"},"variableNames":[{"name":"end","nativeSrc":"15372:3:20","nodeType":"YulIdentifier","src":"15372:3:20"}]}]},"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nativeSrc":"15031:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15165:3:20","nodeType":"YulTypedName","src":"15165:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15173:3:20","nodeType":"YulTypedName","src":"15173:3:20","type":""}],"src":"15031:366:20"},{"body":{"nativeSrc":"15574:248:20","nodeType":"YulBlock","src":"15574:248:20","statements":[{"nativeSrc":"15584:26:20","nodeType":"YulAssignment","src":"15584:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"15596:9:20","nodeType":"YulIdentifier","src":"15596:9:20"},{"kind":"number","nativeSrc":"15607:2:20","nodeType":"YulLiteral","src":"15607:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15592:3:20","nodeType":"YulIdentifier","src":"15592:3:20"},"nativeSrc":"15592:18:20","nodeType":"YulFunctionCall","src":"15592:18:20"},"variableNames":[{"name":"tail","nativeSrc":"15584:4:20","nodeType":"YulIdentifier","src":"15584:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15631:9:20","nodeType":"YulIdentifier","src":"15631:9:20"},{"kind":"number","nativeSrc":"15642:1:20","nodeType":"YulLiteral","src":"15642:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15627:3:20","nodeType":"YulIdentifier","src":"15627:3:20"},"nativeSrc":"15627:17:20","nodeType":"YulFunctionCall","src":"15627:17:20"},{"arguments":[{"name":"tail","nativeSrc":"15650:4:20","nodeType":"YulIdentifier","src":"15650:4:20"},{"name":"headStart","nativeSrc":"15656:9:20","nodeType":"YulIdentifier","src":"15656:9:20"}],"functionName":{"name":"sub","nativeSrc":"15646:3:20","nodeType":"YulIdentifier","src":"15646:3:20"},"nativeSrc":"15646:20:20","nodeType":"YulFunctionCall","src":"15646:20:20"}],"functionName":{"name":"mstore","nativeSrc":"15620:6:20","nodeType":"YulIdentifier","src":"15620:6:20"},"nativeSrc":"15620:47:20","nodeType":"YulFunctionCall","src":"15620:47:20"},"nativeSrc":"15620:47:20","nodeType":"YulExpressionStatement","src":"15620:47:20"},{"nativeSrc":"15676:139:20","nodeType":"YulAssignment","src":"15676:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"15810:4:20","nodeType":"YulIdentifier","src":"15810:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nativeSrc":"15684:124:20","nodeType":"YulIdentifier","src":"15684:124:20"},"nativeSrc":"15684:131:20","nodeType":"YulFunctionCall","src":"15684:131:20"},"variableNames":[{"name":"tail","nativeSrc":"15676:4:20","nodeType":"YulIdentifier","src":"15676:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15403:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15554:9:20","nodeType":"YulTypedName","src":"15554:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15569:4:20","nodeType":"YulTypedName","src":"15569:4:20","type":""}],"src":"15403:419:20"},{"body":{"nativeSrc":"15934:127:20","nodeType":"YulBlock","src":"15934:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15956:6:20","nodeType":"YulIdentifier","src":"15956:6:20"},{"kind":"number","nativeSrc":"15964:1:20","nodeType":"YulLiteral","src":"15964:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15952:3:20","nodeType":"YulIdentifier","src":"15952:3:20"},"nativeSrc":"15952:14:20","nodeType":"YulFunctionCall","src":"15952:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nativeSrc":"15968:34:20","nodeType":"YulLiteral","src":"15968:34:20","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nativeSrc":"15945:6:20","nodeType":"YulIdentifier","src":"15945:6:20"},"nativeSrc":"15945:58:20","nodeType":"YulFunctionCall","src":"15945:58:20"},"nativeSrc":"15945:58:20","nodeType":"YulExpressionStatement","src":"15945:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16024:6:20","nodeType":"YulIdentifier","src":"16024:6:20"},{"kind":"number","nativeSrc":"16032:2:20","nodeType":"YulLiteral","src":"16032:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16020:3:20","nodeType":"YulIdentifier","src":"16020:3:20"},"nativeSrc":"16020:15:20","nodeType":"YulFunctionCall","src":"16020:15:20"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nativeSrc":"16037:16:20","nodeType":"YulLiteral","src":"16037:16:20","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nativeSrc":"16013:6:20","nodeType":"YulIdentifier","src":"16013:6:20"},"nativeSrc":"16013:41:20","nodeType":"YulFunctionCall","src":"16013:41:20"},"nativeSrc":"16013:41:20","nodeType":"YulExpressionStatement","src":"16013:41:20"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nativeSrc":"15828:233:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15926:6:20","nodeType":"YulTypedName","src":"15926:6:20","type":""}],"src":"15828:233:20"},{"body":{"nativeSrc":"16213:220:20","nodeType":"YulBlock","src":"16213:220:20","statements":[{"nativeSrc":"16223:74:20","nodeType":"YulAssignment","src":"16223:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"16289:3:20","nodeType":"YulIdentifier","src":"16289:3:20"},{"kind":"number","nativeSrc":"16294:2:20","nodeType":"YulLiteral","src":"16294:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16230:58:20","nodeType":"YulIdentifier","src":"16230:58:20"},"nativeSrc":"16230:67:20","nodeType":"YulFunctionCall","src":"16230:67:20"},"variableNames":[{"name":"pos","nativeSrc":"16223:3:20","nodeType":"YulIdentifier","src":"16223:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16395:3:20","nodeType":"YulIdentifier","src":"16395:3:20"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nativeSrc":"16306:88:20","nodeType":"YulIdentifier","src":"16306:88:20"},"nativeSrc":"16306:93:20","nodeType":"YulFunctionCall","src":"16306:93:20"},"nativeSrc":"16306:93:20","nodeType":"YulExpressionStatement","src":"16306:93:20"},{"nativeSrc":"16408:19:20","nodeType":"YulAssignment","src":"16408:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"16419:3:20","nodeType":"YulIdentifier","src":"16419:3:20"},{"kind":"number","nativeSrc":"16424:2:20","nodeType":"YulLiteral","src":"16424:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16415:3:20","nodeType":"YulIdentifier","src":"16415:3:20"},"nativeSrc":"16415:12:20","nodeType":"YulFunctionCall","src":"16415:12:20"},"variableNames":[{"name":"end","nativeSrc":"16408:3:20","nodeType":"YulIdentifier","src":"16408:3:20"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nativeSrc":"16067:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16201:3:20","nodeType":"YulTypedName","src":"16201:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16209:3:20","nodeType":"YulTypedName","src":"16209:3:20","type":""}],"src":"16067:366:20"},{"body":{"nativeSrc":"16610:248:20","nodeType":"YulBlock","src":"16610:248:20","statements":[{"nativeSrc":"16620:26:20","nodeType":"YulAssignment","src":"16620:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"16632:9:20","nodeType":"YulIdentifier","src":"16632:9:20"},{"kind":"number","nativeSrc":"16643:2:20","nodeType":"YulLiteral","src":"16643:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16628:3:20","nodeType":"YulIdentifier","src":"16628:3:20"},"nativeSrc":"16628:18:20","nodeType":"YulFunctionCall","src":"16628:18:20"},"variableNames":[{"name":"tail","nativeSrc":"16620:4:20","nodeType":"YulIdentifier","src":"16620:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16667:9:20","nodeType":"YulIdentifier","src":"16667:9:20"},{"kind":"number","nativeSrc":"16678:1:20","nodeType":"YulLiteral","src":"16678:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16663:3:20","nodeType":"YulIdentifier","src":"16663:3:20"},"nativeSrc":"16663:17:20","nodeType":"YulFunctionCall","src":"16663:17:20"},{"arguments":[{"name":"tail","nativeSrc":"16686:4:20","nodeType":"YulIdentifier","src":"16686:4:20"},{"name":"headStart","nativeSrc":"16692:9:20","nodeType":"YulIdentifier","src":"16692:9:20"}],"functionName":{"name":"sub","nativeSrc":"16682:3:20","nodeType":"YulIdentifier","src":"16682:3:20"},"nativeSrc":"16682:20:20","nodeType":"YulFunctionCall","src":"16682:20:20"}],"functionName":{"name":"mstore","nativeSrc":"16656:6:20","nodeType":"YulIdentifier","src":"16656:6:20"},"nativeSrc":"16656:47:20","nodeType":"YulFunctionCall","src":"16656:47:20"},"nativeSrc":"16656:47:20","nodeType":"YulExpressionStatement","src":"16656:47:20"},{"nativeSrc":"16712:139:20","nodeType":"YulAssignment","src":"16712:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"16846:4:20","nodeType":"YulIdentifier","src":"16846:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nativeSrc":"16720:124:20","nodeType":"YulIdentifier","src":"16720:124:20"},"nativeSrc":"16720:131:20","nodeType":"YulFunctionCall","src":"16720:131:20"},"variableNames":[{"name":"tail","nativeSrc":"16712:4:20","nodeType":"YulIdentifier","src":"16712:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16439:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16590:9:20","nodeType":"YulTypedName","src":"16590:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16605:4:20","nodeType":"YulTypedName","src":"16605:4:20","type":""}],"src":"16439:419:20"},{"body":{"nativeSrc":"16970:72:20","nodeType":"YulBlock","src":"16970:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16992:6:20","nodeType":"YulIdentifier","src":"16992:6:20"},{"kind":"number","nativeSrc":"17000:1:20","nodeType":"YulLiteral","src":"17000:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16988:3:20","nodeType":"YulIdentifier","src":"16988:3:20"},"nativeSrc":"16988:14:20","nodeType":"YulFunctionCall","src":"16988:14:20"},{"hexValue":"496e76616c6964204e465420636f6e74726163742061646472657373","kind":"string","nativeSrc":"17004:30:20","nodeType":"YulLiteral","src":"17004:30:20","type":"","value":"Invalid NFT contract address"}],"functionName":{"name":"mstore","nativeSrc":"16981:6:20","nodeType":"YulIdentifier","src":"16981:6:20"},"nativeSrc":"16981:54:20","nodeType":"YulFunctionCall","src":"16981:54:20"},"nativeSrc":"16981:54:20","nodeType":"YulExpressionStatement","src":"16981:54:20"}]},"name":"store_literal_in_memory_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31","nativeSrc":"16864:178:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16962:6:20","nodeType":"YulTypedName","src":"16962:6:20","type":""}],"src":"16864:178:20"},{"body":{"nativeSrc":"17194:220:20","nodeType":"YulBlock","src":"17194:220:20","statements":[{"nativeSrc":"17204:74:20","nodeType":"YulAssignment","src":"17204:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"17270:3:20","nodeType":"YulIdentifier","src":"17270:3:20"},{"kind":"number","nativeSrc":"17275:2:20","nodeType":"YulLiteral","src":"17275:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17211:58:20","nodeType":"YulIdentifier","src":"17211:58:20"},"nativeSrc":"17211:67:20","nodeType":"YulFunctionCall","src":"17211:67:20"},"variableNames":[{"name":"pos","nativeSrc":"17204:3:20","nodeType":"YulIdentifier","src":"17204:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17376:3:20","nodeType":"YulIdentifier","src":"17376:3:20"}],"functionName":{"name":"store_literal_in_memory_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31","nativeSrc":"17287:88:20","nodeType":"YulIdentifier","src":"17287:88:20"},"nativeSrc":"17287:93:20","nodeType":"YulFunctionCall","src":"17287:93:20"},"nativeSrc":"17287:93:20","nodeType":"YulExpressionStatement","src":"17287:93:20"},{"nativeSrc":"17389:19:20","nodeType":"YulAssignment","src":"17389:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"17400:3:20","nodeType":"YulIdentifier","src":"17400:3:20"},{"kind":"number","nativeSrc":"17405:2:20","nodeType":"YulLiteral","src":"17405:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17396:3:20","nodeType":"YulIdentifier","src":"17396:3:20"},"nativeSrc":"17396:12:20","nodeType":"YulFunctionCall","src":"17396:12:20"},"variableNames":[{"name":"end","nativeSrc":"17389:3:20","nodeType":"YulIdentifier","src":"17389:3:20"}]}]},"name":"abi_encode_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31_to_t_string_memory_ptr_fromStack","nativeSrc":"17048:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17182:3:20","nodeType":"YulTypedName","src":"17182:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17190:3:20","nodeType":"YulTypedName","src":"17190:3:20","type":""}],"src":"17048:366:20"},{"body":{"nativeSrc":"17591:248:20","nodeType":"YulBlock","src":"17591:248:20","statements":[{"nativeSrc":"17601:26:20","nodeType":"YulAssignment","src":"17601:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"17613:9:20","nodeType":"YulIdentifier","src":"17613:9:20"},{"kind":"number","nativeSrc":"17624:2:20","nodeType":"YulLiteral","src":"17624:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17609:3:20","nodeType":"YulIdentifier","src":"17609:3:20"},"nativeSrc":"17609:18:20","nodeType":"YulFunctionCall","src":"17609:18:20"},"variableNames":[{"name":"tail","nativeSrc":"17601:4:20","nodeType":"YulIdentifier","src":"17601:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17648:9:20","nodeType":"YulIdentifier","src":"17648:9:20"},{"kind":"number","nativeSrc":"17659:1:20","nodeType":"YulLiteral","src":"17659:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17644:3:20","nodeType":"YulIdentifier","src":"17644:3:20"},"nativeSrc":"17644:17:20","nodeType":"YulFunctionCall","src":"17644:17:20"},{"arguments":[{"name":"tail","nativeSrc":"17667:4:20","nodeType":"YulIdentifier","src":"17667:4:20"},{"name":"headStart","nativeSrc":"17673:9:20","nodeType":"YulIdentifier","src":"17673:9:20"}],"functionName":{"name":"sub","nativeSrc":"17663:3:20","nodeType":"YulIdentifier","src":"17663:3:20"},"nativeSrc":"17663:20:20","nodeType":"YulFunctionCall","src":"17663:20:20"}],"functionName":{"name":"mstore","nativeSrc":"17637:6:20","nodeType":"YulIdentifier","src":"17637:6:20"},"nativeSrc":"17637:47:20","nodeType":"YulFunctionCall","src":"17637:47:20"},"nativeSrc":"17637:47:20","nodeType":"YulExpressionStatement","src":"17637:47:20"},{"nativeSrc":"17693:139:20","nodeType":"YulAssignment","src":"17693:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"17827:4:20","nodeType":"YulIdentifier","src":"17827:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31_to_t_string_memory_ptr_fromStack","nativeSrc":"17701:124:20","nodeType":"YulIdentifier","src":"17701:124:20"},"nativeSrc":"17701:131:20","nodeType":"YulFunctionCall","src":"17701:131:20"},"variableNames":[{"name":"tail","nativeSrc":"17693:4:20","nodeType":"YulIdentifier","src":"17693:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17420:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17571:9:20","nodeType":"YulTypedName","src":"17571:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17586:4:20","nodeType":"YulTypedName","src":"17586:4:20","type":""}],"src":"17420:419:20"},{"body":{"nativeSrc":"17951:66:20","nodeType":"YulBlock","src":"17951:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17973:6:20","nodeType":"YulIdentifier","src":"17973:6:20"},{"kind":"number","nativeSrc":"17981:1:20","nodeType":"YulLiteral","src":"17981:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17969:3:20","nodeType":"YulIdentifier","src":"17969:3:20"},"nativeSrc":"17969:14:20","nodeType":"YulFunctionCall","src":"17969:14:20"},{"hexValue":"496e76616c69642073656c6c65722061646472657373","kind":"string","nativeSrc":"17985:24:20","nodeType":"YulLiteral","src":"17985:24:20","type":"","value":"Invalid seller address"}],"functionName":{"name":"mstore","nativeSrc":"17962:6:20","nodeType":"YulIdentifier","src":"17962:6:20"},"nativeSrc":"17962:48:20","nodeType":"YulFunctionCall","src":"17962:48:20"},"nativeSrc":"17962:48:20","nodeType":"YulExpressionStatement","src":"17962:48:20"}]},"name":"store_literal_in_memory_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4","nativeSrc":"17845:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17943:6:20","nodeType":"YulTypedName","src":"17943:6:20","type":""}],"src":"17845:172:20"},{"body":{"nativeSrc":"18169:220:20","nodeType":"YulBlock","src":"18169:220:20","statements":[{"nativeSrc":"18179:74:20","nodeType":"YulAssignment","src":"18179:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"18245:3:20","nodeType":"YulIdentifier","src":"18245:3:20"},{"kind":"number","nativeSrc":"18250:2:20","nodeType":"YulLiteral","src":"18250:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18186:58:20","nodeType":"YulIdentifier","src":"18186:58:20"},"nativeSrc":"18186:67:20","nodeType":"YulFunctionCall","src":"18186:67:20"},"variableNames":[{"name":"pos","nativeSrc":"18179:3:20","nodeType":"YulIdentifier","src":"18179:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18351:3:20","nodeType":"YulIdentifier","src":"18351:3:20"}],"functionName":{"name":"store_literal_in_memory_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4","nativeSrc":"18262:88:20","nodeType":"YulIdentifier","src":"18262:88:20"},"nativeSrc":"18262:93:20","nodeType":"YulFunctionCall","src":"18262:93:20"},"nativeSrc":"18262:93:20","nodeType":"YulExpressionStatement","src":"18262:93:20"},{"nativeSrc":"18364:19:20","nodeType":"YulAssignment","src":"18364:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"18375:3:20","nodeType":"YulIdentifier","src":"18375:3:20"},{"kind":"number","nativeSrc":"18380:2:20","nodeType":"YulLiteral","src":"18380:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18371:3:20","nodeType":"YulIdentifier","src":"18371:3:20"},"nativeSrc":"18371:12:20","nodeType":"YulFunctionCall","src":"18371:12:20"},"variableNames":[{"name":"end","nativeSrc":"18364:3:20","nodeType":"YulIdentifier","src":"18364:3:20"}]}]},"name":"abi_encode_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4_to_t_string_memory_ptr_fromStack","nativeSrc":"18023:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18157:3:20","nodeType":"YulTypedName","src":"18157:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18165:3:20","nodeType":"YulTypedName","src":"18165:3:20","type":""}],"src":"18023:366:20"},{"body":{"nativeSrc":"18566:248:20","nodeType":"YulBlock","src":"18566:248:20","statements":[{"nativeSrc":"18576:26:20","nodeType":"YulAssignment","src":"18576:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"18588:9:20","nodeType":"YulIdentifier","src":"18588:9:20"},{"kind":"number","nativeSrc":"18599:2:20","nodeType":"YulLiteral","src":"18599:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18584:3:20","nodeType":"YulIdentifier","src":"18584:3:20"},"nativeSrc":"18584:18:20","nodeType":"YulFunctionCall","src":"18584:18:20"},"variableNames":[{"name":"tail","nativeSrc":"18576:4:20","nodeType":"YulIdentifier","src":"18576:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18623:9:20","nodeType":"YulIdentifier","src":"18623:9:20"},{"kind":"number","nativeSrc":"18634:1:20","nodeType":"YulLiteral","src":"18634:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18619:3:20","nodeType":"YulIdentifier","src":"18619:3:20"},"nativeSrc":"18619:17:20","nodeType":"YulFunctionCall","src":"18619:17:20"},{"arguments":[{"name":"tail","nativeSrc":"18642:4:20","nodeType":"YulIdentifier","src":"18642:4:20"},{"name":"headStart","nativeSrc":"18648:9:20","nodeType":"YulIdentifier","src":"18648:9:20"}],"functionName":{"name":"sub","nativeSrc":"18638:3:20","nodeType":"YulIdentifier","src":"18638:3:20"},"nativeSrc":"18638:20:20","nodeType":"YulFunctionCall","src":"18638:20:20"}],"functionName":{"name":"mstore","nativeSrc":"18612:6:20","nodeType":"YulIdentifier","src":"18612:6:20"},"nativeSrc":"18612:47:20","nodeType":"YulFunctionCall","src":"18612:47:20"},"nativeSrc":"18612:47:20","nodeType":"YulExpressionStatement","src":"18612:47:20"},{"nativeSrc":"18668:139:20","nodeType":"YulAssignment","src":"18668:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"18802:4:20","nodeType":"YulIdentifier","src":"18802:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4_to_t_string_memory_ptr_fromStack","nativeSrc":"18676:124:20","nodeType":"YulIdentifier","src":"18676:124:20"},"nativeSrc":"18676:131:20","nodeType":"YulFunctionCall","src":"18676:131:20"},"variableNames":[{"name":"tail","nativeSrc":"18668:4:20","nodeType":"YulIdentifier","src":"18668:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18395:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18546:9:20","nodeType":"YulTypedName","src":"18546:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18561:4:20","nodeType":"YulTypedName","src":"18561:4:20","type":""}],"src":"18395:419:20"},{"body":{"nativeSrc":"18926:76:20","nodeType":"YulBlock","src":"18926:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18948:6:20","nodeType":"YulIdentifier","src":"18948:6:20"},{"kind":"number","nativeSrc":"18956:1:20","nodeType":"YulLiteral","src":"18956:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18944:3:20","nodeType":"YulIdentifier","src":"18944:3:20"},"nativeSrc":"18944:14:20","nodeType":"YulFunctionCall","src":"18944:14:20"},{"hexValue":"53746172742074696d65206d75737420626520696e2074686520667574757265","kind":"string","nativeSrc":"18960:34:20","nodeType":"YulLiteral","src":"18960:34:20","type":"","value":"Start time must be in the future"}],"functionName":{"name":"mstore","nativeSrc":"18937:6:20","nodeType":"YulIdentifier","src":"18937:6:20"},"nativeSrc":"18937:58:20","nodeType":"YulFunctionCall","src":"18937:58:20"},"nativeSrc":"18937:58:20","nodeType":"YulExpressionStatement","src":"18937:58:20"}]},"name":"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","nativeSrc":"18820:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18918:6:20","nodeType":"YulTypedName","src":"18918:6:20","type":""}],"src":"18820:182:20"},{"body":{"nativeSrc":"19154:220:20","nodeType":"YulBlock","src":"19154:220:20","statements":[{"nativeSrc":"19164:74:20","nodeType":"YulAssignment","src":"19164:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"19230:3:20","nodeType":"YulIdentifier","src":"19230:3:20"},{"kind":"number","nativeSrc":"19235:2:20","nodeType":"YulLiteral","src":"19235:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19171:58:20","nodeType":"YulIdentifier","src":"19171:58:20"},"nativeSrc":"19171:67:20","nodeType":"YulFunctionCall","src":"19171:67:20"},"variableNames":[{"name":"pos","nativeSrc":"19164:3:20","nodeType":"YulIdentifier","src":"19164:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19336:3:20","nodeType":"YulIdentifier","src":"19336:3:20"}],"functionName":{"name":"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","nativeSrc":"19247:88:20","nodeType":"YulIdentifier","src":"19247:88:20"},"nativeSrc":"19247:93:20","nodeType":"YulFunctionCall","src":"19247:93:20"},"nativeSrc":"19247:93:20","nodeType":"YulExpressionStatement","src":"19247:93:20"},{"nativeSrc":"19349:19:20","nodeType":"YulAssignment","src":"19349:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"19360:3:20","nodeType":"YulIdentifier","src":"19360:3:20"},{"kind":"number","nativeSrc":"19365:2:20","nodeType":"YulLiteral","src":"19365:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19356:3:20","nodeType":"YulIdentifier","src":"19356:3:20"},"nativeSrc":"19356:12:20","nodeType":"YulFunctionCall","src":"19356:12:20"},"variableNames":[{"name":"end","nativeSrc":"19349:3:20","nodeType":"YulIdentifier","src":"19349:3:20"}]}]},"name":"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack","nativeSrc":"19008:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19142:3:20","nodeType":"YulTypedName","src":"19142:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19150:3:20","nodeType":"YulTypedName","src":"19150:3:20","type":""}],"src":"19008:366:20"},{"body":{"nativeSrc":"19551:248:20","nodeType":"YulBlock","src":"19551:248:20","statements":[{"nativeSrc":"19561:26:20","nodeType":"YulAssignment","src":"19561:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"19573:9:20","nodeType":"YulIdentifier","src":"19573:9:20"},{"kind":"number","nativeSrc":"19584:2:20","nodeType":"YulLiteral","src":"19584:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19569:3:20","nodeType":"YulIdentifier","src":"19569:3:20"},"nativeSrc":"19569:18:20","nodeType":"YulFunctionCall","src":"19569:18:20"},"variableNames":[{"name":"tail","nativeSrc":"19561:4:20","nodeType":"YulIdentifier","src":"19561:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19608:9:20","nodeType":"YulIdentifier","src":"19608:9:20"},{"kind":"number","nativeSrc":"19619:1:20","nodeType":"YulLiteral","src":"19619:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19604:3:20","nodeType":"YulIdentifier","src":"19604:3:20"},"nativeSrc":"19604:17:20","nodeType":"YulFunctionCall","src":"19604:17:20"},{"arguments":[{"name":"tail","nativeSrc":"19627:4:20","nodeType":"YulIdentifier","src":"19627:4:20"},{"name":"headStart","nativeSrc":"19633:9:20","nodeType":"YulIdentifier","src":"19633:9:20"}],"functionName":{"name":"sub","nativeSrc":"19623:3:20","nodeType":"YulIdentifier","src":"19623:3:20"},"nativeSrc":"19623:20:20","nodeType":"YulFunctionCall","src":"19623:20:20"}],"functionName":{"name":"mstore","nativeSrc":"19597:6:20","nodeType":"YulIdentifier","src":"19597:6:20"},"nativeSrc":"19597:47:20","nodeType":"YulFunctionCall","src":"19597:47:20"},"nativeSrc":"19597:47:20","nodeType":"YulExpressionStatement","src":"19597:47:20"},{"nativeSrc":"19653:139:20","nodeType":"YulAssignment","src":"19653:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"19787:4:20","nodeType":"YulIdentifier","src":"19787:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack","nativeSrc":"19661:124:20","nodeType":"YulIdentifier","src":"19661:124:20"},"nativeSrc":"19661:131:20","nodeType":"YulFunctionCall","src":"19661:131:20"},"variableNames":[{"name":"tail","nativeSrc":"19653:4:20","nodeType":"YulIdentifier","src":"19653:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19380:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19531:9:20","nodeType":"YulTypedName","src":"19531:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19546:4:20","nodeType":"YulTypedName","src":"19546:4:20","type":""}],"src":"19380:419:20"},{"body":{"nativeSrc":"19911:114:20","nodeType":"YulBlock","src":"19911:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19933:6:20","nodeType":"YulIdentifier","src":"19933:6:20"},{"kind":"number","nativeSrc":"19941:1:20","nodeType":"YulLiteral","src":"19941:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19929:3:20","nodeType":"YulIdentifier","src":"19929:3:20"},"nativeSrc":"19929:14:20","nodeType":"YulFunctionCall","src":"19929:14:20"},{"hexValue":"456e642074696d65206d7573742062652061667465722073746172742074696d","kind":"string","nativeSrc":"19945:34:20","nodeType":"YulLiteral","src":"19945:34:20","type":"","value":"End time must be after start tim"}],"functionName":{"name":"mstore","nativeSrc":"19922:6:20","nodeType":"YulIdentifier","src":"19922:6:20"},"nativeSrc":"19922:58:20","nodeType":"YulFunctionCall","src":"19922:58:20"},"nativeSrc":"19922:58:20","nodeType":"YulExpressionStatement","src":"19922:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20001:6:20","nodeType":"YulIdentifier","src":"20001:6:20"},{"kind":"number","nativeSrc":"20009:2:20","nodeType":"YulLiteral","src":"20009:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19997:3:20","nodeType":"YulIdentifier","src":"19997:3:20"},"nativeSrc":"19997:15:20","nodeType":"YulFunctionCall","src":"19997:15:20"},{"hexValue":"65","kind":"string","nativeSrc":"20014:3:20","nodeType":"YulLiteral","src":"20014:3:20","type":"","value":"e"}],"functionName":{"name":"mstore","nativeSrc":"19990:6:20","nodeType":"YulIdentifier","src":"19990:6:20"},"nativeSrc":"19990:28:20","nodeType":"YulFunctionCall","src":"19990:28:20"},"nativeSrc":"19990:28:20","nodeType":"YulExpressionStatement","src":"19990:28:20"}]},"name":"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","nativeSrc":"19805:220:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19903:6:20","nodeType":"YulTypedName","src":"19903:6:20","type":""}],"src":"19805:220:20"},{"body":{"nativeSrc":"20177:220:20","nodeType":"YulBlock","src":"20177:220:20","statements":[{"nativeSrc":"20187:74:20","nodeType":"YulAssignment","src":"20187:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"20253:3:20","nodeType":"YulIdentifier","src":"20253:3:20"},{"kind":"number","nativeSrc":"20258:2:20","nodeType":"YulLiteral","src":"20258:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20194:58:20","nodeType":"YulIdentifier","src":"20194:58:20"},"nativeSrc":"20194:67:20","nodeType":"YulFunctionCall","src":"20194:67:20"},"variableNames":[{"name":"pos","nativeSrc":"20187:3:20","nodeType":"YulIdentifier","src":"20187:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20359:3:20","nodeType":"YulIdentifier","src":"20359:3:20"}],"functionName":{"name":"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","nativeSrc":"20270:88:20","nodeType":"YulIdentifier","src":"20270:88:20"},"nativeSrc":"20270:93:20","nodeType":"YulFunctionCall","src":"20270:93:20"},"nativeSrc":"20270:93:20","nodeType":"YulExpressionStatement","src":"20270:93:20"},{"nativeSrc":"20372:19:20","nodeType":"YulAssignment","src":"20372:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"20383:3:20","nodeType":"YulIdentifier","src":"20383:3:20"},{"kind":"number","nativeSrc":"20388:2:20","nodeType":"YulLiteral","src":"20388:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20379:3:20","nodeType":"YulIdentifier","src":"20379:3:20"},"nativeSrc":"20379:12:20","nodeType":"YulFunctionCall","src":"20379:12:20"},"variableNames":[{"name":"end","nativeSrc":"20372:3:20","nodeType":"YulIdentifier","src":"20372:3:20"}]}]},"name":"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack","nativeSrc":"20031:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20165:3:20","nodeType":"YulTypedName","src":"20165:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20173:3:20","nodeType":"YulTypedName","src":"20173:3:20","type":""}],"src":"20031:366:20"},{"body":{"nativeSrc":"20574:248:20","nodeType":"YulBlock","src":"20574:248:20","statements":[{"nativeSrc":"20584:26:20","nodeType":"YulAssignment","src":"20584:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"20596:9:20","nodeType":"YulIdentifier","src":"20596:9:20"},{"kind":"number","nativeSrc":"20607:2:20","nodeType":"YulLiteral","src":"20607:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20592:3:20","nodeType":"YulIdentifier","src":"20592:3:20"},"nativeSrc":"20592:18:20","nodeType":"YulFunctionCall","src":"20592:18:20"},"variableNames":[{"name":"tail","nativeSrc":"20584:4:20","nodeType":"YulIdentifier","src":"20584:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20631:9:20","nodeType":"YulIdentifier","src":"20631:9:20"},{"kind":"number","nativeSrc":"20642:1:20","nodeType":"YulLiteral","src":"20642:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20627:3:20","nodeType":"YulIdentifier","src":"20627:3:20"},"nativeSrc":"20627:17:20","nodeType":"YulFunctionCall","src":"20627:17:20"},{"arguments":[{"name":"tail","nativeSrc":"20650:4:20","nodeType":"YulIdentifier","src":"20650:4:20"},{"name":"headStart","nativeSrc":"20656:9:20","nodeType":"YulIdentifier","src":"20656:9:20"}],"functionName":{"name":"sub","nativeSrc":"20646:3:20","nodeType":"YulIdentifier","src":"20646:3:20"},"nativeSrc":"20646:20:20","nodeType":"YulFunctionCall","src":"20646:20:20"}],"functionName":{"name":"mstore","nativeSrc":"20620:6:20","nodeType":"YulIdentifier","src":"20620:6:20"},"nativeSrc":"20620:47:20","nodeType":"YulFunctionCall","src":"20620:47:20"},"nativeSrc":"20620:47:20","nodeType":"YulExpressionStatement","src":"20620:47:20"},{"nativeSrc":"20676:139:20","nodeType":"YulAssignment","src":"20676:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"20810:4:20","nodeType":"YulIdentifier","src":"20810:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack","nativeSrc":"20684:124:20","nodeType":"YulIdentifier","src":"20684:124:20"},"nativeSrc":"20684:131:20","nodeType":"YulFunctionCall","src":"20684:131:20"},"variableNames":[{"name":"tail","nativeSrc":"20676:4:20","nodeType":"YulIdentifier","src":"20676:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20403:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20554:9:20","nodeType":"YulTypedName","src":"20554:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20569:4:20","nodeType":"YulTypedName","src":"20569:4:20","type":""}],"src":"20403:419:20"},{"body":{"nativeSrc":"20934:72:20","nodeType":"YulBlock","src":"20934:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20956:6:20","nodeType":"YulIdentifier","src":"20956:6:20"},{"kind":"number","nativeSrc":"20964:1:20","nodeType":"YulLiteral","src":"20964:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20952:3:20","nodeType":"YulIdentifier","src":"20952:3:20"},"nativeSrc":"20952:14:20","nodeType":"YulFunctionCall","src":"20952:14:20"},{"hexValue":"496e76616c6964207072696365206f7261636c652061646472657373","kind":"string","nativeSrc":"20968:30:20","nodeType":"YulLiteral","src":"20968:30:20","type":"","value":"Invalid price oracle address"}],"functionName":{"name":"mstore","nativeSrc":"20945:6:20","nodeType":"YulIdentifier","src":"20945:6:20"},"nativeSrc":"20945:54:20","nodeType":"YulFunctionCall","src":"20945:54:20"},"nativeSrc":"20945:54:20","nodeType":"YulExpressionStatement","src":"20945:54:20"}]},"name":"store_literal_in_memory_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3","nativeSrc":"20828:178:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20926:6:20","nodeType":"YulTypedName","src":"20926:6:20","type":""}],"src":"20828:178:20"},{"body":{"nativeSrc":"21158:220:20","nodeType":"YulBlock","src":"21158:220:20","statements":[{"nativeSrc":"21168:74:20","nodeType":"YulAssignment","src":"21168:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"21234:3:20","nodeType":"YulIdentifier","src":"21234:3:20"},{"kind":"number","nativeSrc":"21239:2:20","nodeType":"YulLiteral","src":"21239:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"21175:58:20","nodeType":"YulIdentifier","src":"21175:58:20"},"nativeSrc":"21175:67:20","nodeType":"YulFunctionCall","src":"21175:67:20"},"variableNames":[{"name":"pos","nativeSrc":"21168:3:20","nodeType":"YulIdentifier","src":"21168:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21340:3:20","nodeType":"YulIdentifier","src":"21340:3:20"}],"functionName":{"name":"store_literal_in_memory_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3","nativeSrc":"21251:88:20","nodeType":"YulIdentifier","src":"21251:88:20"},"nativeSrc":"21251:93:20","nodeType":"YulFunctionCall","src":"21251:93:20"},"nativeSrc":"21251:93:20","nodeType":"YulExpressionStatement","src":"21251:93:20"},{"nativeSrc":"21353:19:20","nodeType":"YulAssignment","src":"21353:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"21364:3:20","nodeType":"YulIdentifier","src":"21364:3:20"},{"kind":"number","nativeSrc":"21369:2:20","nodeType":"YulLiteral","src":"21369:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21360:3:20","nodeType":"YulIdentifier","src":"21360:3:20"},"nativeSrc":"21360:12:20","nodeType":"YulFunctionCall","src":"21360:12:20"},"variableNames":[{"name":"end","nativeSrc":"21353:3:20","nodeType":"YulIdentifier","src":"21353:3:20"}]}]},"name":"abi_encode_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3_to_t_string_memory_ptr_fromStack","nativeSrc":"21012:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21146:3:20","nodeType":"YulTypedName","src":"21146:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21154:3:20","nodeType":"YulTypedName","src":"21154:3:20","type":""}],"src":"21012:366:20"},{"body":{"nativeSrc":"21555:248:20","nodeType":"YulBlock","src":"21555:248:20","statements":[{"nativeSrc":"21565:26:20","nodeType":"YulAssignment","src":"21565:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"21577:9:20","nodeType":"YulIdentifier","src":"21577:9:20"},{"kind":"number","nativeSrc":"21588:2:20","nodeType":"YulLiteral","src":"21588:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21573:3:20","nodeType":"YulIdentifier","src":"21573:3:20"},"nativeSrc":"21573:18:20","nodeType":"YulFunctionCall","src":"21573:18:20"},"variableNames":[{"name":"tail","nativeSrc":"21565:4:20","nodeType":"YulIdentifier","src":"21565:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21612:9:20","nodeType":"YulIdentifier","src":"21612:9:20"},{"kind":"number","nativeSrc":"21623:1:20","nodeType":"YulLiteral","src":"21623:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21608:3:20","nodeType":"YulIdentifier","src":"21608:3:20"},"nativeSrc":"21608:17:20","nodeType":"YulFunctionCall","src":"21608:17:20"},{"arguments":[{"name":"tail","nativeSrc":"21631:4:20","nodeType":"YulIdentifier","src":"21631:4:20"},{"name":"headStart","nativeSrc":"21637:9:20","nodeType":"YulIdentifier","src":"21637:9:20"}],"functionName":{"name":"sub","nativeSrc":"21627:3:20","nodeType":"YulIdentifier","src":"21627:3:20"},"nativeSrc":"21627:20:20","nodeType":"YulFunctionCall","src":"21627:20:20"}],"functionName":{"name":"mstore","nativeSrc":"21601:6:20","nodeType":"YulIdentifier","src":"21601:6:20"},"nativeSrc":"21601:47:20","nodeType":"YulFunctionCall","src":"21601:47:20"},"nativeSrc":"21601:47:20","nodeType":"YulExpressionStatement","src":"21601:47:20"},{"nativeSrc":"21657:139:20","nodeType":"YulAssignment","src":"21657:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"21791:4:20","nodeType":"YulIdentifier","src":"21791:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3_to_t_string_memory_ptr_fromStack","nativeSrc":"21665:124:20","nodeType":"YulIdentifier","src":"21665:124:20"},"nativeSrc":"21665:131:20","nodeType":"YulFunctionCall","src":"21665:131:20"},"variableNames":[{"name":"tail","nativeSrc":"21657:4:20","nodeType":"YulIdentifier","src":"21657:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21384:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21535:9:20","nodeType":"YulTypedName","src":"21535:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21550:4:20","nodeType":"YulTypedName","src":"21550:4:20","type":""}],"src":"21384:419:20"},{"body":{"nativeSrc":"21862:32:20","nodeType":"YulBlock","src":"21862:32:20","statements":[{"nativeSrc":"21872:16:20","nodeType":"YulAssignment","src":"21872:16:20","value":{"name":"value","nativeSrc":"21883:5:20","nodeType":"YulIdentifier","src":"21883:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"21872:7:20","nodeType":"YulIdentifier","src":"21872:7:20"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"21809:85:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21844:5:20","nodeType":"YulTypedName","src":"21844:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21854:7:20","nodeType":"YulTypedName","src":"21854:7:20","type":""}],"src":"21809:85:20"},{"body":{"nativeSrc":"21943:43:20","nodeType":"YulBlock","src":"21943:43:20","statements":[{"nativeSrc":"21953:27:20","nodeType":"YulAssignment","src":"21953:27:20","value":{"arguments":[{"name":"value","nativeSrc":"21968:5:20","nodeType":"YulIdentifier","src":"21968:5:20"},{"kind":"number","nativeSrc":"21975:4:20","nodeType":"YulLiteral","src":"21975:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"21964:3:20","nodeType":"YulIdentifier","src":"21964:3:20"},"nativeSrc":"21964:16:20","nodeType":"YulFunctionCall","src":"21964:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"21953:7:20","nodeType":"YulIdentifier","src":"21953:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"21900:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21925:5:20","nodeType":"YulTypedName","src":"21925:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21935:7:20","nodeType":"YulTypedName","src":"21935:7:20","type":""}],"src":"21900:86:20"},{"body":{"nativeSrc":"22058:88:20","nodeType":"YulBlock","src":"22058:88:20","statements":[{"nativeSrc":"22068:72:20","nodeType":"YulAssignment","src":"22068:72:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22132:5:20","nodeType":"YulIdentifier","src":"22132:5:20"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"22106:25:20","nodeType":"YulIdentifier","src":"22106:25:20"},"nativeSrc":"22106:32:20","nodeType":"YulFunctionCall","src":"22106:32:20"}],"functionName":{"name":"identity","nativeSrc":"22097:8:20","nodeType":"YulIdentifier","src":"22097:8:20"},"nativeSrc":"22097:42:20","nodeType":"YulFunctionCall","src":"22097:42:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"22081:15:20","nodeType":"YulIdentifier","src":"22081:15:20"},"nativeSrc":"22081:59:20","nodeType":"YulFunctionCall","src":"22081:59:20"},"variableNames":[{"name":"converted","nativeSrc":"22068:9:20","nodeType":"YulIdentifier","src":"22068:9:20"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nativeSrc":"21992:154:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22038:5:20","nodeType":"YulTypedName","src":"22038:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"22048:9:20","nodeType":"YulTypedName","src":"22048:9:20","type":""}],"src":"21992:154:20"},{"body":{"nativeSrc":"22223:72:20","nodeType":"YulBlock","src":"22223:72:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"22240:3:20","nodeType":"YulIdentifier","src":"22240:3:20"},{"arguments":[{"name":"value","nativeSrc":"22282:5:20","nodeType":"YulIdentifier","src":"22282:5:20"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nativeSrc":"22245:36:20","nodeType":"YulIdentifier","src":"22245:36:20"},"nativeSrc":"22245:43:20","nodeType":"YulFunctionCall","src":"22245:43:20"}],"functionName":{"name":"mstore","nativeSrc":"22233:6:20","nodeType":"YulIdentifier","src":"22233:6:20"},"nativeSrc":"22233:56:20","nodeType":"YulFunctionCall","src":"22233:56:20"},"nativeSrc":"22233:56:20","nodeType":"YulExpressionStatement","src":"22233:56:20"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nativeSrc":"22152:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"22211:5:20","nodeType":"YulTypedName","src":"22211:5:20","type":""},{"name":"pos","nativeSrc":"22218:3:20","nodeType":"YulTypedName","src":"22218:3:20","type":""}],"src":"22152:143:20"},{"body":{"nativeSrc":"22405:130:20","nodeType":"YulBlock","src":"22405:130:20","statements":[{"nativeSrc":"22415:26:20","nodeType":"YulAssignment","src":"22415:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"22427:9:20","nodeType":"YulIdentifier","src":"22427:9:20"},{"kind":"number","nativeSrc":"22438:2:20","nodeType":"YulLiteral","src":"22438:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22423:3:20","nodeType":"YulIdentifier","src":"22423:3:20"},"nativeSrc":"22423:18:20","nodeType":"YulFunctionCall","src":"22423:18:20"},"variableNames":[{"name":"tail","nativeSrc":"22415:4:20","nodeType":"YulIdentifier","src":"22415:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22501:6:20","nodeType":"YulIdentifier","src":"22501:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22514:9:20","nodeType":"YulIdentifier","src":"22514:9:20"},{"kind":"number","nativeSrc":"22525:1:20","nodeType":"YulLiteral","src":"22525:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22510:3:20","nodeType":"YulIdentifier","src":"22510:3:20"},"nativeSrc":"22510:17:20","nodeType":"YulFunctionCall","src":"22510:17:20"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nativeSrc":"22451:49:20","nodeType":"YulIdentifier","src":"22451:49:20"},"nativeSrc":"22451:77:20","nodeType":"YulFunctionCall","src":"22451:77:20"},"nativeSrc":"22451:77:20","nodeType":"YulExpressionStatement","src":"22451:77:20"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nativeSrc":"22301:234:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22377:9:20","nodeType":"YulTypedName","src":"22377:9:20","type":""},{"name":"value0","nativeSrc":"22389:6:20","nodeType":"YulTypedName","src":"22389:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22400:4:20","nodeType":"YulTypedName","src":"22400:4:20","type":""}],"src":"22301:234:20"},{"body":{"nativeSrc":"22647:67:20","nodeType":"YulBlock","src":"22647:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22669:6:20","nodeType":"YulIdentifier","src":"22669:6:20"},{"kind":"number","nativeSrc":"22677:1:20","nodeType":"YulLiteral","src":"22677:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22665:3:20","nodeType":"YulIdentifier","src":"22665:3:20"},"nativeSrc":"22665:14:20","nodeType":"YulFunctionCall","src":"22665:14:20"},{"hexValue":"41756374696f6e206e6f74207374617274656420796574","kind":"string","nativeSrc":"22681:25:20","nodeType":"YulLiteral","src":"22681:25:20","type":"","value":"Auction not started yet"}],"functionName":{"name":"mstore","nativeSrc":"22658:6:20","nodeType":"YulIdentifier","src":"22658:6:20"},"nativeSrc":"22658:49:20","nodeType":"YulFunctionCall","src":"22658:49:20"},"nativeSrc":"22658:49:20","nodeType":"YulExpressionStatement","src":"22658:49:20"}]},"name":"store_literal_in_memory_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2","nativeSrc":"22541:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22639:6:20","nodeType":"YulTypedName","src":"22639:6:20","type":""}],"src":"22541:173:20"},{"body":{"nativeSrc":"22866:220:20","nodeType":"YulBlock","src":"22866:220:20","statements":[{"nativeSrc":"22876:74:20","nodeType":"YulAssignment","src":"22876:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"22942:3:20","nodeType":"YulIdentifier","src":"22942:3:20"},{"kind":"number","nativeSrc":"22947:2:20","nodeType":"YulLiteral","src":"22947:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22883:58:20","nodeType":"YulIdentifier","src":"22883:58:20"},"nativeSrc":"22883:67:20","nodeType":"YulFunctionCall","src":"22883:67:20"},"variableNames":[{"name":"pos","nativeSrc":"22876:3:20","nodeType":"YulIdentifier","src":"22876:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23048:3:20","nodeType":"YulIdentifier","src":"23048:3:20"}],"functionName":{"name":"store_literal_in_memory_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2","nativeSrc":"22959:88:20","nodeType":"YulIdentifier","src":"22959:88:20"},"nativeSrc":"22959:93:20","nodeType":"YulFunctionCall","src":"22959:93:20"},"nativeSrc":"22959:93:20","nodeType":"YulExpressionStatement","src":"22959:93:20"},{"nativeSrc":"23061:19:20","nodeType":"YulAssignment","src":"23061:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"23072:3:20","nodeType":"YulIdentifier","src":"23072:3:20"},{"kind":"number","nativeSrc":"23077:2:20","nodeType":"YulLiteral","src":"23077:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23068:3:20","nodeType":"YulIdentifier","src":"23068:3:20"},"nativeSrc":"23068:12:20","nodeType":"YulFunctionCall","src":"23068:12:20"},"variableNames":[{"name":"end","nativeSrc":"23061:3:20","nodeType":"YulIdentifier","src":"23061:3:20"}]}]},"name":"abi_encode_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2_to_t_string_memory_ptr_fromStack","nativeSrc":"22720:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22854:3:20","nodeType":"YulTypedName","src":"22854:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22862:3:20","nodeType":"YulTypedName","src":"22862:3:20","type":""}],"src":"22720:366:20"},{"body":{"nativeSrc":"23263:248:20","nodeType":"YulBlock","src":"23263:248:20","statements":[{"nativeSrc":"23273:26:20","nodeType":"YulAssignment","src":"23273:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"23285:9:20","nodeType":"YulIdentifier","src":"23285:9:20"},{"kind":"number","nativeSrc":"23296:2:20","nodeType":"YulLiteral","src":"23296:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23281:3:20","nodeType":"YulIdentifier","src":"23281:3:20"},"nativeSrc":"23281:18:20","nodeType":"YulFunctionCall","src":"23281:18:20"},"variableNames":[{"name":"tail","nativeSrc":"23273:4:20","nodeType":"YulIdentifier","src":"23273:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23320:9:20","nodeType":"YulIdentifier","src":"23320:9:20"},{"kind":"number","nativeSrc":"23331:1:20","nodeType":"YulLiteral","src":"23331:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23316:3:20","nodeType":"YulIdentifier","src":"23316:3:20"},"nativeSrc":"23316:17:20","nodeType":"YulFunctionCall","src":"23316:17:20"},{"arguments":[{"name":"tail","nativeSrc":"23339:4:20","nodeType":"YulIdentifier","src":"23339:4:20"},{"name":"headStart","nativeSrc":"23345:9:20","nodeType":"YulIdentifier","src":"23345:9:20"}],"functionName":{"name":"sub","nativeSrc":"23335:3:20","nodeType":"YulIdentifier","src":"23335:3:20"},"nativeSrc":"23335:20:20","nodeType":"YulFunctionCall","src":"23335:20:20"}],"functionName":{"name":"mstore","nativeSrc":"23309:6:20","nodeType":"YulIdentifier","src":"23309:6:20"},"nativeSrc":"23309:47:20","nodeType":"YulFunctionCall","src":"23309:47:20"},"nativeSrc":"23309:47:20","nodeType":"YulExpressionStatement","src":"23309:47:20"},{"nativeSrc":"23365:139:20","nodeType":"YulAssignment","src":"23365:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"23499:4:20","nodeType":"YulIdentifier","src":"23499:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2_to_t_string_memory_ptr_fromStack","nativeSrc":"23373:124:20","nodeType":"YulIdentifier","src":"23373:124:20"},"nativeSrc":"23373:131:20","nodeType":"YulFunctionCall","src":"23373:131:20"},"variableNames":[{"name":"tail","nativeSrc":"23365:4:20","nodeType":"YulIdentifier","src":"23365:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23092:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23243:9:20","nodeType":"YulTypedName","src":"23243:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23258:4:20","nodeType":"YulTypedName","src":"23258:4:20","type":""}],"src":"23092:419:20"},{"body":{"nativeSrc":"23623:65:20","nodeType":"YulBlock","src":"23623:65:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23645:6:20","nodeType":"YulIdentifier","src":"23645:6:20"},{"kind":"number","nativeSrc":"23653:1:20","nodeType":"YulLiteral","src":"23653:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23641:3:20","nodeType":"YulIdentifier","src":"23641:3:20"},"nativeSrc":"23641:14:20","nodeType":"YulFunctionCall","src":"23641:14:20"},{"hexValue":"41756374696f6e20616c726561647920656e646564","kind":"string","nativeSrc":"23657:23:20","nodeType":"YulLiteral","src":"23657:23:20","type":"","value":"Auction already ended"}],"functionName":{"name":"mstore","nativeSrc":"23634:6:20","nodeType":"YulIdentifier","src":"23634:6:20"},"nativeSrc":"23634:47:20","nodeType":"YulFunctionCall","src":"23634:47:20"},"nativeSrc":"23634:47:20","nodeType":"YulExpressionStatement","src":"23634:47:20"}]},"name":"store_literal_in_memory_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","nativeSrc":"23517:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23615:6:20","nodeType":"YulTypedName","src":"23615:6:20","type":""}],"src":"23517:171:20"},{"body":{"nativeSrc":"23840:220:20","nodeType":"YulBlock","src":"23840:220:20","statements":[{"nativeSrc":"23850:74:20","nodeType":"YulAssignment","src":"23850:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"23916:3:20","nodeType":"YulIdentifier","src":"23916:3:20"},{"kind":"number","nativeSrc":"23921:2:20","nodeType":"YulLiteral","src":"23921:2:20","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23857:58:20","nodeType":"YulIdentifier","src":"23857:58:20"},"nativeSrc":"23857:67:20","nodeType":"YulFunctionCall","src":"23857:67:20"},"variableNames":[{"name":"pos","nativeSrc":"23850:3:20","nodeType":"YulIdentifier","src":"23850:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24022:3:20","nodeType":"YulIdentifier","src":"24022:3:20"}],"functionName":{"name":"store_literal_in_memory_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006","nativeSrc":"23933:88:20","nodeType":"YulIdentifier","src":"23933:88:20"},"nativeSrc":"23933:93:20","nodeType":"YulFunctionCall","src":"23933:93:20"},"nativeSrc":"23933:93:20","nodeType":"YulExpressionStatement","src":"23933:93:20"},{"nativeSrc":"24035:19:20","nodeType":"YulAssignment","src":"24035:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"24046:3:20","nodeType":"YulIdentifier","src":"24046:3:20"},{"kind":"number","nativeSrc":"24051:2:20","nodeType":"YulLiteral","src":"24051:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24042:3:20","nodeType":"YulIdentifier","src":"24042:3:20"},"nativeSrc":"24042:12:20","nodeType":"YulFunctionCall","src":"24042:12:20"},"variableNames":[{"name":"end","nativeSrc":"24035:3:20","nodeType":"YulIdentifier","src":"24035:3:20"}]}]},"name":"abi_encode_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006_to_t_string_memory_ptr_fromStack","nativeSrc":"23694:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23828:3:20","nodeType":"YulTypedName","src":"23828:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23836:3:20","nodeType":"YulTypedName","src":"23836:3:20","type":""}],"src":"23694:366:20"},{"body":{"nativeSrc":"24237:248:20","nodeType":"YulBlock","src":"24237:248:20","statements":[{"nativeSrc":"24247:26:20","nodeType":"YulAssignment","src":"24247:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"24259:9:20","nodeType":"YulIdentifier","src":"24259:9:20"},{"kind":"number","nativeSrc":"24270:2:20","nodeType":"YulLiteral","src":"24270:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24255:3:20","nodeType":"YulIdentifier","src":"24255:3:20"},"nativeSrc":"24255:18:20","nodeType":"YulFunctionCall","src":"24255:18:20"},"variableNames":[{"name":"tail","nativeSrc":"24247:4:20","nodeType":"YulIdentifier","src":"24247:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24294:9:20","nodeType":"YulIdentifier","src":"24294:9:20"},{"kind":"number","nativeSrc":"24305:1:20","nodeType":"YulLiteral","src":"24305:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24290:3:20","nodeType":"YulIdentifier","src":"24290:3:20"},"nativeSrc":"24290:17:20","nodeType":"YulFunctionCall","src":"24290:17:20"},{"arguments":[{"name":"tail","nativeSrc":"24313:4:20","nodeType":"YulIdentifier","src":"24313:4:20"},{"name":"headStart","nativeSrc":"24319:9:20","nodeType":"YulIdentifier","src":"24319:9:20"}],"functionName":{"name":"sub","nativeSrc":"24309:3:20","nodeType":"YulIdentifier","src":"24309:3:20"},"nativeSrc":"24309:20:20","nodeType":"YulFunctionCall","src":"24309:20:20"}],"functionName":{"name":"mstore","nativeSrc":"24283:6:20","nodeType":"YulIdentifier","src":"24283:6:20"},"nativeSrc":"24283:47:20","nodeType":"YulFunctionCall","src":"24283:47:20"},"nativeSrc":"24283:47:20","nodeType":"YulExpressionStatement","src":"24283:47:20"},{"nativeSrc":"24339:139:20","nodeType":"YulAssignment","src":"24339:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"24473:4:20","nodeType":"YulIdentifier","src":"24473:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006_to_t_string_memory_ptr_fromStack","nativeSrc":"24347:124:20","nodeType":"YulIdentifier","src":"24347:124:20"},"nativeSrc":"24347:131:20","nodeType":"YulFunctionCall","src":"24347:131:20"},"variableNames":[{"name":"tail","nativeSrc":"24339:4:20","nodeType":"YulIdentifier","src":"24339:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24066:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24217:9:20","nodeType":"YulTypedName","src":"24217:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24232:4:20","nodeType":"YulTypedName","src":"24232:4:20","type":""}],"src":"24066:419:20"},{"body":{"nativeSrc":"24597:61:20","nodeType":"YulBlock","src":"24597:61:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24619:6:20","nodeType":"YulIdentifier","src":"24619:6:20"},{"kind":"number","nativeSrc":"24627:1:20","nodeType":"YulLiteral","src":"24627:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24615:3:20","nodeType":"YulIdentifier","src":"24615:3:20"},"nativeSrc":"24615:14:20","nodeType":"YulFunctionCall","src":"24615:14:20"},{"hexValue":"41756374696f6e2068617320656e646564","kind":"string","nativeSrc":"24631:19:20","nodeType":"YulLiteral","src":"24631:19:20","type":"","value":"Auction has ended"}],"functionName":{"name":"mstore","nativeSrc":"24608:6:20","nodeType":"YulIdentifier","src":"24608:6:20"},"nativeSrc":"24608:43:20","nodeType":"YulFunctionCall","src":"24608:43:20"},"nativeSrc":"24608:43:20","nodeType":"YulExpressionStatement","src":"24608:43:20"}]},"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"24491:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24589:6:20","nodeType":"YulTypedName","src":"24589:6:20","type":""}],"src":"24491:167:20"},{"body":{"nativeSrc":"24810:220:20","nodeType":"YulBlock","src":"24810:220:20","statements":[{"nativeSrc":"24820:74:20","nodeType":"YulAssignment","src":"24820:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"24886:3:20","nodeType":"YulIdentifier","src":"24886:3:20"},{"kind":"number","nativeSrc":"24891:2:20","nodeType":"YulLiteral","src":"24891:2:20","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24827:58:20","nodeType":"YulIdentifier","src":"24827:58:20"},"nativeSrc":"24827:67:20","nodeType":"YulFunctionCall","src":"24827:67:20"},"variableNames":[{"name":"pos","nativeSrc":"24820:3:20","nodeType":"YulIdentifier","src":"24820:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24992:3:20","nodeType":"YulIdentifier","src":"24992:3:20"}],"functionName":{"name":"store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5","nativeSrc":"24903:88:20","nodeType":"YulIdentifier","src":"24903:88:20"},"nativeSrc":"24903:93:20","nodeType":"YulFunctionCall","src":"24903:93:20"},"nativeSrc":"24903:93:20","nodeType":"YulExpressionStatement","src":"24903:93:20"},{"nativeSrc":"25005:19:20","nodeType":"YulAssignment","src":"25005:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"25016:3:20","nodeType":"YulIdentifier","src":"25016:3:20"},{"kind":"number","nativeSrc":"25021:2:20","nodeType":"YulLiteral","src":"25021:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25012:3:20","nodeType":"YulIdentifier","src":"25012:3:20"},"nativeSrc":"25012:12:20","nodeType":"YulFunctionCall","src":"25012:12:20"},"variableNames":[{"name":"end","nativeSrc":"25005:3:20","nodeType":"YulIdentifier","src":"25005:3:20"}]}]},"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"24664:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24798:3:20","nodeType":"YulTypedName","src":"24798:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24806:3:20","nodeType":"YulTypedName","src":"24806:3:20","type":""}],"src":"24664:366:20"},{"body":{"nativeSrc":"25207:248:20","nodeType":"YulBlock","src":"25207:248:20","statements":[{"nativeSrc":"25217:26:20","nodeType":"YulAssignment","src":"25217:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"25229:9:20","nodeType":"YulIdentifier","src":"25229:9:20"},{"kind":"number","nativeSrc":"25240:2:20","nodeType":"YulLiteral","src":"25240:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25225:3:20","nodeType":"YulIdentifier","src":"25225:3:20"},"nativeSrc":"25225:18:20","nodeType":"YulFunctionCall","src":"25225:18:20"},"variableNames":[{"name":"tail","nativeSrc":"25217:4:20","nodeType":"YulIdentifier","src":"25217:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25264:9:20","nodeType":"YulIdentifier","src":"25264:9:20"},{"kind":"number","nativeSrc":"25275:1:20","nodeType":"YulLiteral","src":"25275:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25260:3:20","nodeType":"YulIdentifier","src":"25260:3:20"},"nativeSrc":"25260:17:20","nodeType":"YulFunctionCall","src":"25260:17:20"},{"arguments":[{"name":"tail","nativeSrc":"25283:4:20","nodeType":"YulIdentifier","src":"25283:4:20"},{"name":"headStart","nativeSrc":"25289:9:20","nodeType":"YulIdentifier","src":"25289:9:20"}],"functionName":{"name":"sub","nativeSrc":"25279:3:20","nodeType":"YulIdentifier","src":"25279:3:20"},"nativeSrc":"25279:20:20","nodeType":"YulFunctionCall","src":"25279:20:20"}],"functionName":{"name":"mstore","nativeSrc":"25253:6:20","nodeType":"YulIdentifier","src":"25253:6:20"},"nativeSrc":"25253:47:20","nodeType":"YulFunctionCall","src":"25253:47:20"},"nativeSrc":"25253:47:20","nodeType":"YulExpressionStatement","src":"25253:47:20"},{"nativeSrc":"25309:139:20","nodeType":"YulAssignment","src":"25309:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"25443:4:20","nodeType":"YulIdentifier","src":"25443:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack","nativeSrc":"25317:124:20","nodeType":"YulIdentifier","src":"25317:124:20"},"nativeSrc":"25317:131:20","nodeType":"YulFunctionCall","src":"25317:131:20"},"variableNames":[{"name":"tail","nativeSrc":"25309:4:20","nodeType":"YulIdentifier","src":"25309:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25036:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25187:9:20","nodeType":"YulTypedName","src":"25187:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25202:4:20","nodeType":"YulTypedName","src":"25202:4:20","type":""}],"src":"25036:419:20"},{"body":{"nativeSrc":"25567:117:20","nodeType":"YulBlock","src":"25567:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25589:6:20","nodeType":"YulIdentifier","src":"25589:6:20"},{"kind":"number","nativeSrc":"25597:1:20","nodeType":"YulLiteral","src":"25597:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25585:3:20","nodeType":"YulIdentifier","src":"25585:3:20"},"nativeSrc":"25585:14:20","nodeType":"YulFunctionCall","src":"25585:14:20"},{"hexValue":"42696420616d6f756e74206d7573742062652067726561746572207468616e20","kind":"string","nativeSrc":"25601:34:20","nodeType":"YulLiteral","src":"25601:34:20","type":"","value":"Bid amount must be greater than "}],"functionName":{"name":"mstore","nativeSrc":"25578:6:20","nodeType":"YulIdentifier","src":"25578:6:20"},"nativeSrc":"25578:58:20","nodeType":"YulFunctionCall","src":"25578:58:20"},"nativeSrc":"25578:58:20","nodeType":"YulExpressionStatement","src":"25578:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25657:6:20","nodeType":"YulIdentifier","src":"25657:6:20"},{"kind":"number","nativeSrc":"25665:2:20","nodeType":"YulLiteral","src":"25665:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25653:3:20","nodeType":"YulIdentifier","src":"25653:3:20"},"nativeSrc":"25653:15:20","nodeType":"YulFunctionCall","src":"25653:15:20"},{"hexValue":"7a65726f","kind":"string","nativeSrc":"25670:6:20","nodeType":"YulLiteral","src":"25670:6:20","type":"","value":"zero"}],"functionName":{"name":"mstore","nativeSrc":"25646:6:20","nodeType":"YulIdentifier","src":"25646:6:20"},"nativeSrc":"25646:31:20","nodeType":"YulFunctionCall","src":"25646:31:20"},"nativeSrc":"25646:31:20","nodeType":"YulExpressionStatement","src":"25646:31:20"}]},"name":"store_literal_in_memory_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570","nativeSrc":"25461:223:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25559:6:20","nodeType":"YulTypedName","src":"25559:6:20","type":""}],"src":"25461:223:20"},{"body":{"nativeSrc":"25836:220:20","nodeType":"YulBlock","src":"25836:220:20","statements":[{"nativeSrc":"25846:74:20","nodeType":"YulAssignment","src":"25846:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"25912:3:20","nodeType":"YulIdentifier","src":"25912:3:20"},{"kind":"number","nativeSrc":"25917:2:20","nodeType":"YulLiteral","src":"25917:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25853:58:20","nodeType":"YulIdentifier","src":"25853:58:20"},"nativeSrc":"25853:67:20","nodeType":"YulFunctionCall","src":"25853:67:20"},"variableNames":[{"name":"pos","nativeSrc":"25846:3:20","nodeType":"YulIdentifier","src":"25846:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26018:3:20","nodeType":"YulIdentifier","src":"26018:3:20"}],"functionName":{"name":"store_literal_in_memory_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570","nativeSrc":"25929:88:20","nodeType":"YulIdentifier","src":"25929:88:20"},"nativeSrc":"25929:93:20","nodeType":"YulFunctionCall","src":"25929:93:20"},"nativeSrc":"25929:93:20","nodeType":"YulExpressionStatement","src":"25929:93:20"},{"nativeSrc":"26031:19:20","nodeType":"YulAssignment","src":"26031:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"26042:3:20","nodeType":"YulIdentifier","src":"26042:3:20"},{"kind":"number","nativeSrc":"26047:2:20","nodeType":"YulLiteral","src":"26047:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26038:3:20","nodeType":"YulIdentifier","src":"26038:3:20"},"nativeSrc":"26038:12:20","nodeType":"YulFunctionCall","src":"26038:12:20"},"variableNames":[{"name":"end","nativeSrc":"26031:3:20","nodeType":"YulIdentifier","src":"26031:3:20"}]}]},"name":"abi_encode_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570_to_t_string_memory_ptr_fromStack","nativeSrc":"25690:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25824:3:20","nodeType":"YulTypedName","src":"25824:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25832:3:20","nodeType":"YulTypedName","src":"25832:3:20","type":""}],"src":"25690:366:20"},{"body":{"nativeSrc":"26233:248:20","nodeType":"YulBlock","src":"26233:248:20","statements":[{"nativeSrc":"26243:26:20","nodeType":"YulAssignment","src":"26243:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"26255:9:20","nodeType":"YulIdentifier","src":"26255:9:20"},{"kind":"number","nativeSrc":"26266:2:20","nodeType":"YulLiteral","src":"26266:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26251:3:20","nodeType":"YulIdentifier","src":"26251:3:20"},"nativeSrc":"26251:18:20","nodeType":"YulFunctionCall","src":"26251:18:20"},"variableNames":[{"name":"tail","nativeSrc":"26243:4:20","nodeType":"YulIdentifier","src":"26243:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26290:9:20","nodeType":"YulIdentifier","src":"26290:9:20"},{"kind":"number","nativeSrc":"26301:1:20","nodeType":"YulLiteral","src":"26301:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26286:3:20","nodeType":"YulIdentifier","src":"26286:3:20"},"nativeSrc":"26286:17:20","nodeType":"YulFunctionCall","src":"26286:17:20"},{"arguments":[{"name":"tail","nativeSrc":"26309:4:20","nodeType":"YulIdentifier","src":"26309:4:20"},{"name":"headStart","nativeSrc":"26315:9:20","nodeType":"YulIdentifier","src":"26315:9:20"}],"functionName":{"name":"sub","nativeSrc":"26305:3:20","nodeType":"YulIdentifier","src":"26305:3:20"},"nativeSrc":"26305:20:20","nodeType":"YulFunctionCall","src":"26305:20:20"}],"functionName":{"name":"mstore","nativeSrc":"26279:6:20","nodeType":"YulIdentifier","src":"26279:6:20"},"nativeSrc":"26279:47:20","nodeType":"YulFunctionCall","src":"26279:47:20"},"nativeSrc":"26279:47:20","nodeType":"YulExpressionStatement","src":"26279:47:20"},{"nativeSrc":"26335:139:20","nodeType":"YulAssignment","src":"26335:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"26469:4:20","nodeType":"YulIdentifier","src":"26469:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570_to_t_string_memory_ptr_fromStack","nativeSrc":"26343:124:20","nodeType":"YulIdentifier","src":"26343:124:20"},"nativeSrc":"26343:131:20","nodeType":"YulFunctionCall","src":"26343:131:20"},"variableNames":[{"name":"tail","nativeSrc":"26335:4:20","nodeType":"YulIdentifier","src":"26335:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26062:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26213:9:20","nodeType":"YulTypedName","src":"26213:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26228:4:20","nodeType":"YulTypedName","src":"26228:4:20","type":""}],"src":"26062:419:20"},{"body":{"nativeSrc":"26593:63:20","nodeType":"YulBlock","src":"26593:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26615:6:20","nodeType":"YulIdentifier","src":"26615:6:20"},{"kind":"number","nativeSrc":"26623:1:20","nodeType":"YulLiteral","src":"26623:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26611:3:20","nodeType":"YulIdentifier","src":"26611:3:20"},"nativeSrc":"26611:14:20","nodeType":"YulFunctionCall","src":"26611:14:20"},{"hexValue":"45544820616d6f756e74206d69736d61746368","kind":"string","nativeSrc":"26627:21:20","nodeType":"YulLiteral","src":"26627:21:20","type":"","value":"ETH amount mismatch"}],"functionName":{"name":"mstore","nativeSrc":"26604:6:20","nodeType":"YulIdentifier","src":"26604:6:20"},"nativeSrc":"26604:45:20","nodeType":"YulFunctionCall","src":"26604:45:20"},"nativeSrc":"26604:45:20","nodeType":"YulExpressionStatement","src":"26604:45:20"}]},"name":"store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7","nativeSrc":"26487:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26585:6:20","nodeType":"YulTypedName","src":"26585:6:20","type":""}],"src":"26487:169:20"},{"body":{"nativeSrc":"26808:220:20","nodeType":"YulBlock","src":"26808:220:20","statements":[{"nativeSrc":"26818:74:20","nodeType":"YulAssignment","src":"26818:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"26884:3:20","nodeType":"YulIdentifier","src":"26884:3:20"},{"kind":"number","nativeSrc":"26889:2:20","nodeType":"YulLiteral","src":"26889:2:20","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26825:58:20","nodeType":"YulIdentifier","src":"26825:58:20"},"nativeSrc":"26825:67:20","nodeType":"YulFunctionCall","src":"26825:67:20"},"variableNames":[{"name":"pos","nativeSrc":"26818:3:20","nodeType":"YulIdentifier","src":"26818:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26990:3:20","nodeType":"YulIdentifier","src":"26990:3:20"}],"functionName":{"name":"store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7","nativeSrc":"26901:88:20","nodeType":"YulIdentifier","src":"26901:88:20"},"nativeSrc":"26901:93:20","nodeType":"YulFunctionCall","src":"26901:93:20"},"nativeSrc":"26901:93:20","nodeType":"YulExpressionStatement","src":"26901:93:20"},{"nativeSrc":"27003:19:20","nodeType":"YulAssignment","src":"27003:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"27014:3:20","nodeType":"YulIdentifier","src":"27014:3:20"},{"kind":"number","nativeSrc":"27019:2:20","nodeType":"YulLiteral","src":"27019:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27010:3:20","nodeType":"YulIdentifier","src":"27010:3:20"},"nativeSrc":"27010:12:20","nodeType":"YulFunctionCall","src":"27010:12:20"},"variableNames":[{"name":"end","nativeSrc":"27003:3:20","nodeType":"YulIdentifier","src":"27003:3:20"}]}]},"name":"abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack","nativeSrc":"26662:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26796:3:20","nodeType":"YulTypedName","src":"26796:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26804:3:20","nodeType":"YulTypedName","src":"26804:3:20","type":""}],"src":"26662:366:20"},{"body":{"nativeSrc":"27205:248:20","nodeType":"YulBlock","src":"27205:248:20","statements":[{"nativeSrc":"27215:26:20","nodeType":"YulAssignment","src":"27215:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"27227:9:20","nodeType":"YulIdentifier","src":"27227:9:20"},{"kind":"number","nativeSrc":"27238:2:20","nodeType":"YulLiteral","src":"27238:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27223:3:20","nodeType":"YulIdentifier","src":"27223:3:20"},"nativeSrc":"27223:18:20","nodeType":"YulFunctionCall","src":"27223:18:20"},"variableNames":[{"name":"tail","nativeSrc":"27215:4:20","nodeType":"YulIdentifier","src":"27215:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27262:9:20","nodeType":"YulIdentifier","src":"27262:9:20"},{"kind":"number","nativeSrc":"27273:1:20","nodeType":"YulLiteral","src":"27273:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27258:3:20","nodeType":"YulIdentifier","src":"27258:3:20"},"nativeSrc":"27258:17:20","nodeType":"YulFunctionCall","src":"27258:17:20"},{"arguments":[{"name":"tail","nativeSrc":"27281:4:20","nodeType":"YulIdentifier","src":"27281:4:20"},{"name":"headStart","nativeSrc":"27287:9:20","nodeType":"YulIdentifier","src":"27287:9:20"}],"functionName":{"name":"sub","nativeSrc":"27277:3:20","nodeType":"YulIdentifier","src":"27277:3:20"},"nativeSrc":"27277:20:20","nodeType":"YulFunctionCall","src":"27277:20:20"}],"functionName":{"name":"mstore","nativeSrc":"27251:6:20","nodeType":"YulIdentifier","src":"27251:6:20"},"nativeSrc":"27251:47:20","nodeType":"YulFunctionCall","src":"27251:47:20"},"nativeSrc":"27251:47:20","nodeType":"YulExpressionStatement","src":"27251:47:20"},{"nativeSrc":"27307:139:20","nodeType":"YulAssignment","src":"27307:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"27441:4:20","nodeType":"YulIdentifier","src":"27441:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack","nativeSrc":"27315:124:20","nodeType":"YulIdentifier","src":"27315:124:20"},"nativeSrc":"27315:131:20","nodeType":"YulFunctionCall","src":"27315:131:20"},"variableNames":[{"name":"tail","nativeSrc":"27307:4:20","nodeType":"YulIdentifier","src":"27307:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27034:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27185:9:20","nodeType":"YulTypedName","src":"27185:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27200:4:20","nodeType":"YulTypedName","src":"27200:4:20","type":""}],"src":"27034:419:20"},{"body":{"nativeSrc":"27585:206:20","nodeType":"YulBlock","src":"27585:206:20","statements":[{"nativeSrc":"27595:26:20","nodeType":"YulAssignment","src":"27595:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"27607:9:20","nodeType":"YulIdentifier","src":"27607:9:20"},{"kind":"number","nativeSrc":"27618:2:20","nodeType":"YulLiteral","src":"27618:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"27603:3:20","nodeType":"YulIdentifier","src":"27603:3:20"},"nativeSrc":"27603:18:20","nodeType":"YulFunctionCall","src":"27603:18:20"},"variableNames":[{"name":"tail","nativeSrc":"27595:4:20","nodeType":"YulIdentifier","src":"27595:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"27675:6:20","nodeType":"YulIdentifier","src":"27675:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"27688:9:20","nodeType":"YulIdentifier","src":"27688:9:20"},{"kind":"number","nativeSrc":"27699:1:20","nodeType":"YulLiteral","src":"27699:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27684:3:20","nodeType":"YulIdentifier","src":"27684:3:20"},"nativeSrc":"27684:17:20","nodeType":"YulFunctionCall","src":"27684:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"27631:43:20","nodeType":"YulIdentifier","src":"27631:43:20"},"nativeSrc":"27631:71:20","nodeType":"YulFunctionCall","src":"27631:71:20"},"nativeSrc":"27631:71:20","nodeType":"YulExpressionStatement","src":"27631:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"27756:6:20","nodeType":"YulIdentifier","src":"27756:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"27769:9:20","nodeType":"YulIdentifier","src":"27769:9:20"},{"kind":"number","nativeSrc":"27780:2:20","nodeType":"YulLiteral","src":"27780:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27765:3:20","nodeType":"YulIdentifier","src":"27765:3:20"},"nativeSrc":"27765:18:20","nodeType":"YulFunctionCall","src":"27765:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"27712:43:20","nodeType":"YulIdentifier","src":"27712:43:20"},"nativeSrc":"27712:72:20","nodeType":"YulFunctionCall","src":"27712:72:20"},"nativeSrc":"27712:72:20","nodeType":"YulExpressionStatement","src":"27712:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"27459:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27549:9:20","nodeType":"YulTypedName","src":"27549:9:20","type":""},{"name":"value1","nativeSrc":"27561:6:20","nodeType":"YulTypedName","src":"27561:6:20","type":""},{"name":"value0","nativeSrc":"27569:6:20","nodeType":"YulTypedName","src":"27569:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27580:4:20","nodeType":"YulTypedName","src":"27580:4:20","type":""}],"src":"27459:332:20"},{"body":{"nativeSrc":"27860:80:20","nodeType":"YulBlock","src":"27860:80:20","statements":[{"nativeSrc":"27870:22:20","nodeType":"YulAssignment","src":"27870:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"27885:6:20","nodeType":"YulIdentifier","src":"27885:6:20"}],"functionName":{"name":"mload","nativeSrc":"27879:5:20","nodeType":"YulIdentifier","src":"27879:5:20"},"nativeSrc":"27879:13:20","nodeType":"YulFunctionCall","src":"27879:13:20"},"variableNames":[{"name":"value","nativeSrc":"27870:5:20","nodeType":"YulIdentifier","src":"27870:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"27928:5:20","nodeType":"YulIdentifier","src":"27928:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"27901:26:20","nodeType":"YulIdentifier","src":"27901:26:20"},"nativeSrc":"27901:33:20","nodeType":"YulFunctionCall","src":"27901:33:20"},"nativeSrc":"27901:33:20","nodeType":"YulExpressionStatement","src":"27901:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"27797:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"27838:6:20","nodeType":"YulTypedName","src":"27838:6:20","type":""},{"name":"end","nativeSrc":"27846:3:20","nodeType":"YulTypedName","src":"27846:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"27854:5:20","nodeType":"YulTypedName","src":"27854:5:20","type":""}],"src":"27797:143:20"},{"body":{"nativeSrc":"28023:274:20","nodeType":"YulBlock","src":"28023:274:20","statements":[{"body":{"nativeSrc":"28069:83:20","nodeType":"YulBlock","src":"28069:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"28071:77:20","nodeType":"YulIdentifier","src":"28071:77:20"},"nativeSrc":"28071:79:20","nodeType":"YulFunctionCall","src":"28071:79:20"},"nativeSrc":"28071:79:20","nodeType":"YulExpressionStatement","src":"28071:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"28044:7:20","nodeType":"YulIdentifier","src":"28044:7:20"},{"name":"headStart","nativeSrc":"28053:9:20","nodeType":"YulIdentifier","src":"28053:9:20"}],"functionName":{"name":"sub","nativeSrc":"28040:3:20","nodeType":"YulIdentifier","src":"28040:3:20"},"nativeSrc":"28040:23:20","nodeType":"YulFunctionCall","src":"28040:23:20"},{"kind":"number","nativeSrc":"28065:2:20","nodeType":"YulLiteral","src":"28065:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"28036:3:20","nodeType":"YulIdentifier","src":"28036:3:20"},"nativeSrc":"28036:32:20","nodeType":"YulFunctionCall","src":"28036:32:20"},"nativeSrc":"28033:119:20","nodeType":"YulIf","src":"28033:119:20"},{"nativeSrc":"28162:128:20","nodeType":"YulBlock","src":"28162:128:20","statements":[{"nativeSrc":"28177:15:20","nodeType":"YulVariableDeclaration","src":"28177:15:20","value":{"kind":"number","nativeSrc":"28191:1:20","nodeType":"YulLiteral","src":"28191:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"28181:6:20","nodeType":"YulTypedName","src":"28181:6:20","type":""}]},{"nativeSrc":"28206:74:20","nodeType":"YulAssignment","src":"28206:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28252:9:20","nodeType":"YulIdentifier","src":"28252:9:20"},{"name":"offset","nativeSrc":"28263:6:20","nodeType":"YulIdentifier","src":"28263:6:20"}],"functionName":{"name":"add","nativeSrc":"28248:3:20","nodeType":"YulIdentifier","src":"28248:3:20"},"nativeSrc":"28248:22:20","nodeType":"YulFunctionCall","src":"28248:22:20"},{"name":"dataEnd","nativeSrc":"28272:7:20","nodeType":"YulIdentifier","src":"28272:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"28216:31:20","nodeType":"YulIdentifier","src":"28216:31:20"},"nativeSrc":"28216:64:20","nodeType":"YulFunctionCall","src":"28216:64:20"},"variableNames":[{"name":"value0","nativeSrc":"28206:6:20","nodeType":"YulIdentifier","src":"28206:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"27946:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27993:9:20","nodeType":"YulTypedName","src":"27993:9:20","type":""},{"name":"dataEnd","nativeSrc":"28004:7:20","nodeType":"YulTypedName","src":"28004:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"28016:6:20","nodeType":"YulTypedName","src":"28016:6:20","type":""}],"src":"27946:351:20"},{"body":{"nativeSrc":"28409:75:20","nodeType":"YulBlock","src":"28409:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28431:6:20","nodeType":"YulIdentifier","src":"28431:6:20"},{"kind":"number","nativeSrc":"28439:1:20","nodeType":"YulLiteral","src":"28439:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28427:3:20","nodeType":"YulIdentifier","src":"28427:3:20"},"nativeSrc":"28427:14:20","nodeType":"YulFunctionCall","src":"28427:14:20"},{"hexValue":"455448206e6f7420616363657074656420666f722045524332302062696473","kind":"string","nativeSrc":"28443:33:20","nodeType":"YulLiteral","src":"28443:33:20","type":"","value":"ETH not accepted for ERC20 bids"}],"functionName":{"name":"mstore","nativeSrc":"28420:6:20","nodeType":"YulIdentifier","src":"28420:6:20"},"nativeSrc":"28420:57:20","nodeType":"YulFunctionCall","src":"28420:57:20"},"nativeSrc":"28420:57:20","nodeType":"YulExpressionStatement","src":"28420:57:20"}]},"name":"store_literal_in_memory_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227","nativeSrc":"28303:181:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28401:6:20","nodeType":"YulTypedName","src":"28401:6:20","type":""}],"src":"28303:181:20"},{"body":{"nativeSrc":"28636:220:20","nodeType":"YulBlock","src":"28636:220:20","statements":[{"nativeSrc":"28646:74:20","nodeType":"YulAssignment","src":"28646:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"28712:3:20","nodeType":"YulIdentifier","src":"28712:3:20"},{"kind":"number","nativeSrc":"28717:2:20","nodeType":"YulLiteral","src":"28717:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28653:58:20","nodeType":"YulIdentifier","src":"28653:58:20"},"nativeSrc":"28653:67:20","nodeType":"YulFunctionCall","src":"28653:67:20"},"variableNames":[{"name":"pos","nativeSrc":"28646:3:20","nodeType":"YulIdentifier","src":"28646:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28818:3:20","nodeType":"YulIdentifier","src":"28818:3:20"}],"functionName":{"name":"store_literal_in_memory_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227","nativeSrc":"28729:88:20","nodeType":"YulIdentifier","src":"28729:88:20"},"nativeSrc":"28729:93:20","nodeType":"YulFunctionCall","src":"28729:93:20"},"nativeSrc":"28729:93:20","nodeType":"YulExpressionStatement","src":"28729:93:20"},{"nativeSrc":"28831:19:20","nodeType":"YulAssignment","src":"28831:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"28842:3:20","nodeType":"YulIdentifier","src":"28842:3:20"},{"kind":"number","nativeSrc":"28847:2:20","nodeType":"YulLiteral","src":"28847:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28838:3:20","nodeType":"YulIdentifier","src":"28838:3:20"},"nativeSrc":"28838:12:20","nodeType":"YulFunctionCall","src":"28838:12:20"},"variableNames":[{"name":"end","nativeSrc":"28831:3:20","nodeType":"YulIdentifier","src":"28831:3:20"}]}]},"name":"abi_encode_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227_to_t_string_memory_ptr_fromStack","nativeSrc":"28490:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28624:3:20","nodeType":"YulTypedName","src":"28624:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28632:3:20","nodeType":"YulTypedName","src":"28632:3:20","type":""}],"src":"28490:366:20"},{"body":{"nativeSrc":"29033:248:20","nodeType":"YulBlock","src":"29033:248:20","statements":[{"nativeSrc":"29043:26:20","nodeType":"YulAssignment","src":"29043:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"29055:9:20","nodeType":"YulIdentifier","src":"29055:9:20"},{"kind":"number","nativeSrc":"29066:2:20","nodeType":"YulLiteral","src":"29066:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29051:3:20","nodeType":"YulIdentifier","src":"29051:3:20"},"nativeSrc":"29051:18:20","nodeType":"YulFunctionCall","src":"29051:18:20"},"variableNames":[{"name":"tail","nativeSrc":"29043:4:20","nodeType":"YulIdentifier","src":"29043:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29090:9:20","nodeType":"YulIdentifier","src":"29090:9:20"},{"kind":"number","nativeSrc":"29101:1:20","nodeType":"YulLiteral","src":"29101:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29086:3:20","nodeType":"YulIdentifier","src":"29086:3:20"},"nativeSrc":"29086:17:20","nodeType":"YulFunctionCall","src":"29086:17:20"},{"arguments":[{"name":"tail","nativeSrc":"29109:4:20","nodeType":"YulIdentifier","src":"29109:4:20"},{"name":"headStart","nativeSrc":"29115:9:20","nodeType":"YulIdentifier","src":"29115:9:20"}],"functionName":{"name":"sub","nativeSrc":"29105:3:20","nodeType":"YulIdentifier","src":"29105:3:20"},"nativeSrc":"29105:20:20","nodeType":"YulFunctionCall","src":"29105:20:20"}],"functionName":{"name":"mstore","nativeSrc":"29079:6:20","nodeType":"YulIdentifier","src":"29079:6:20"},"nativeSrc":"29079:47:20","nodeType":"YulFunctionCall","src":"29079:47:20"},"nativeSrc":"29079:47:20","nodeType":"YulExpressionStatement","src":"29079:47:20"},{"nativeSrc":"29135:139:20","nodeType":"YulAssignment","src":"29135:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"29269:4:20","nodeType":"YulIdentifier","src":"29269:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227_to_t_string_memory_ptr_fromStack","nativeSrc":"29143:124:20","nodeType":"YulIdentifier","src":"29143:124:20"},"nativeSrc":"29143:131:20","nodeType":"YulFunctionCall","src":"29143:131:20"},"variableNames":[{"name":"tail","nativeSrc":"29135:4:20","nodeType":"YulIdentifier","src":"29135:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28862:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29013:9:20","nodeType":"YulTypedName","src":"29013:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29028:4:20","nodeType":"YulTypedName","src":"29028:4:20","type":""}],"src":"28862:419:20"},{"body":{"nativeSrc":"29441:288:20","nodeType":"YulBlock","src":"29441:288:20","statements":[{"nativeSrc":"29451:26:20","nodeType":"YulAssignment","src":"29451:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"29463:9:20","nodeType":"YulIdentifier","src":"29463:9:20"},{"kind":"number","nativeSrc":"29474:2:20","nodeType":"YulLiteral","src":"29474:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"29459:3:20","nodeType":"YulIdentifier","src":"29459:3:20"},"nativeSrc":"29459:18:20","nodeType":"YulFunctionCall","src":"29459:18:20"},"variableNames":[{"name":"tail","nativeSrc":"29451:4:20","nodeType":"YulIdentifier","src":"29451:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29531:6:20","nodeType":"YulIdentifier","src":"29531:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"29544:9:20","nodeType":"YulIdentifier","src":"29544:9:20"},{"kind":"number","nativeSrc":"29555:1:20","nodeType":"YulLiteral","src":"29555:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29540:3:20","nodeType":"YulIdentifier","src":"29540:3:20"},"nativeSrc":"29540:17:20","nodeType":"YulFunctionCall","src":"29540:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29487:43:20","nodeType":"YulIdentifier","src":"29487:43:20"},"nativeSrc":"29487:71:20","nodeType":"YulFunctionCall","src":"29487:71:20"},"nativeSrc":"29487:71:20","nodeType":"YulExpressionStatement","src":"29487:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29612:6:20","nodeType":"YulIdentifier","src":"29612:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"29625:9:20","nodeType":"YulIdentifier","src":"29625:9:20"},{"kind":"number","nativeSrc":"29636:2:20","nodeType":"YulLiteral","src":"29636:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29621:3:20","nodeType":"YulIdentifier","src":"29621:3:20"},"nativeSrc":"29621:18:20","nodeType":"YulFunctionCall","src":"29621:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"29568:43:20","nodeType":"YulIdentifier","src":"29568:43:20"},"nativeSrc":"29568:72:20","nodeType":"YulFunctionCall","src":"29568:72:20"},"nativeSrc":"29568:72:20","nodeType":"YulExpressionStatement","src":"29568:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"29694:6:20","nodeType":"YulIdentifier","src":"29694:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"29707:9:20","nodeType":"YulIdentifier","src":"29707:9:20"},{"kind":"number","nativeSrc":"29718:2:20","nodeType":"YulLiteral","src":"29718:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29703:3:20","nodeType":"YulIdentifier","src":"29703:3:20"},"nativeSrc":"29703:18:20","nodeType":"YulFunctionCall","src":"29703:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29650:43:20","nodeType":"YulIdentifier","src":"29650:43:20"},"nativeSrc":"29650:72:20","nodeType":"YulFunctionCall","src":"29650:72:20"},"nativeSrc":"29650:72:20","nodeType":"YulExpressionStatement","src":"29650:72:20"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"29287:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29397:9:20","nodeType":"YulTypedName","src":"29397:9:20","type":""},{"name":"value2","nativeSrc":"29409:6:20","nodeType":"YulTypedName","src":"29409:6:20","type":""},{"name":"value1","nativeSrc":"29417:6:20","nodeType":"YulTypedName","src":"29417:6:20","type":""},{"name":"value0","nativeSrc":"29425:6:20","nodeType":"YulTypedName","src":"29425:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29436:4:20","nodeType":"YulTypedName","src":"29436:4:20","type":""}],"src":"29287:442:20"},{"body":{"nativeSrc":"29775:76:20","nodeType":"YulBlock","src":"29775:76:20","statements":[{"body":{"nativeSrc":"29829:16:20","nodeType":"YulBlock","src":"29829:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"29838:1:20","nodeType":"YulLiteral","src":"29838:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"29841:1:20","nodeType":"YulLiteral","src":"29841:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"29831:6:20","nodeType":"YulIdentifier","src":"29831:6:20"},"nativeSrc":"29831:12:20","nodeType":"YulFunctionCall","src":"29831:12:20"},"nativeSrc":"29831:12:20","nodeType":"YulExpressionStatement","src":"29831:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29798:5:20","nodeType":"YulIdentifier","src":"29798:5:20"},{"arguments":[{"name":"value","nativeSrc":"29820:5:20","nodeType":"YulIdentifier","src":"29820:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"29805:14:20","nodeType":"YulIdentifier","src":"29805:14:20"},"nativeSrc":"29805:21:20","nodeType":"YulFunctionCall","src":"29805:21:20"}],"functionName":{"name":"eq","nativeSrc":"29795:2:20","nodeType":"YulIdentifier","src":"29795:2:20"},"nativeSrc":"29795:32:20","nodeType":"YulFunctionCall","src":"29795:32:20"}],"functionName":{"name":"iszero","nativeSrc":"29788:6:20","nodeType":"YulIdentifier","src":"29788:6:20"},"nativeSrc":"29788:40:20","nodeType":"YulFunctionCall","src":"29788:40:20"},"nativeSrc":"29785:60:20","nodeType":"YulIf","src":"29785:60:20"}]},"name":"validator_revert_t_bool","nativeSrc":"29735:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29768:5:20","nodeType":"YulTypedName","src":"29768:5:20","type":""}],"src":"29735:116:20"},{"body":{"nativeSrc":"29917:77:20","nodeType":"YulBlock","src":"29917:77:20","statements":[{"nativeSrc":"29927:22:20","nodeType":"YulAssignment","src":"29927:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"29942:6:20","nodeType":"YulIdentifier","src":"29942:6:20"}],"functionName":{"name":"mload","nativeSrc":"29936:5:20","nodeType":"YulIdentifier","src":"29936:5:20"},"nativeSrc":"29936:13:20","nodeType":"YulFunctionCall","src":"29936:13:20"},"variableNames":[{"name":"value","nativeSrc":"29927:5:20","nodeType":"YulIdentifier","src":"29927:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"29982:5:20","nodeType":"YulIdentifier","src":"29982:5:20"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"29958:23:20","nodeType":"YulIdentifier","src":"29958:23:20"},"nativeSrc":"29958:30:20","nodeType":"YulFunctionCall","src":"29958:30:20"},"nativeSrc":"29958:30:20","nodeType":"YulExpressionStatement","src":"29958:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"29857:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"29895:6:20","nodeType":"YulTypedName","src":"29895:6:20","type":""},{"name":"end","nativeSrc":"29903:3:20","nodeType":"YulTypedName","src":"29903:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"29911:5:20","nodeType":"YulTypedName","src":"29911:5:20","type":""}],"src":"29857:137:20"},{"body":{"nativeSrc":"30074:271:20","nodeType":"YulBlock","src":"30074:271:20","statements":[{"body":{"nativeSrc":"30120:83:20","nodeType":"YulBlock","src":"30120:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"30122:77:20","nodeType":"YulIdentifier","src":"30122:77:20"},"nativeSrc":"30122:79:20","nodeType":"YulFunctionCall","src":"30122:79:20"},"nativeSrc":"30122:79:20","nodeType":"YulExpressionStatement","src":"30122:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30095:7:20","nodeType":"YulIdentifier","src":"30095:7:20"},{"name":"headStart","nativeSrc":"30104:9:20","nodeType":"YulIdentifier","src":"30104:9:20"}],"functionName":{"name":"sub","nativeSrc":"30091:3:20","nodeType":"YulIdentifier","src":"30091:3:20"},"nativeSrc":"30091:23:20","nodeType":"YulFunctionCall","src":"30091:23:20"},{"kind":"number","nativeSrc":"30116:2:20","nodeType":"YulLiteral","src":"30116:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"30087:3:20","nodeType":"YulIdentifier","src":"30087:3:20"},"nativeSrc":"30087:32:20","nodeType":"YulFunctionCall","src":"30087:32:20"},"nativeSrc":"30084:119:20","nodeType":"YulIf","src":"30084:119:20"},{"nativeSrc":"30213:125:20","nodeType":"YulBlock","src":"30213:125:20","statements":[{"nativeSrc":"30228:15:20","nodeType":"YulVariableDeclaration","src":"30228:15:20","value":{"kind":"number","nativeSrc":"30242:1:20","nodeType":"YulLiteral","src":"30242:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"30232:6:20","nodeType":"YulTypedName","src":"30232:6:20","type":""}]},{"nativeSrc":"30257:71:20","nodeType":"YulAssignment","src":"30257:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"30300:9:20","nodeType":"YulIdentifier","src":"30300:9:20"},{"name":"offset","nativeSrc":"30311:6:20","nodeType":"YulIdentifier","src":"30311:6:20"}],"functionName":{"name":"add","nativeSrc":"30296:3:20","nodeType":"YulIdentifier","src":"30296:3:20"},"nativeSrc":"30296:22:20","nodeType":"YulFunctionCall","src":"30296:22:20"},{"name":"dataEnd","nativeSrc":"30320:7:20","nodeType":"YulIdentifier","src":"30320:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"30267:28:20","nodeType":"YulIdentifier","src":"30267:28:20"},"nativeSrc":"30267:61:20","nodeType":"YulFunctionCall","src":"30267:61:20"},"variableNames":[{"name":"value0","nativeSrc":"30257:6:20","nodeType":"YulIdentifier","src":"30257:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"30000:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30044:9:20","nodeType":"YulTypedName","src":"30044:9:20","type":""},{"name":"dataEnd","nativeSrc":"30055:7:20","nodeType":"YulTypedName","src":"30055:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30067:6:20","nodeType":"YulTypedName","src":"30067:6:20","type":""}],"src":"30000:345:20"},{"body":{"nativeSrc":"30457:124:20","nodeType":"YulBlock","src":"30457:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30479:6:20","nodeType":"YulIdentifier","src":"30479:6:20"},{"kind":"number","nativeSrc":"30487:1:20","nodeType":"YulLiteral","src":"30487:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30475:3:20","nodeType":"YulIdentifier","src":"30475:3:20"},"nativeSrc":"30475:14:20","nodeType":"YulFunctionCall","src":"30475:14:20"},{"hexValue":"426964206d75737420626520686967686572207468616e2063757272656e7420","kind":"string","nativeSrc":"30491:34:20","nodeType":"YulLiteral","src":"30491:34:20","type":"","value":"Bid must be higher than current "}],"functionName":{"name":"mstore","nativeSrc":"30468:6:20","nodeType":"YulIdentifier","src":"30468:6:20"},"nativeSrc":"30468:58:20","nodeType":"YulFunctionCall","src":"30468:58:20"},"nativeSrc":"30468:58:20","nodeType":"YulExpressionStatement","src":"30468:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30547:6:20","nodeType":"YulIdentifier","src":"30547:6:20"},{"kind":"number","nativeSrc":"30555:2:20","nodeType":"YulLiteral","src":"30555:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30543:3:20","nodeType":"YulIdentifier","src":"30543:3:20"},"nativeSrc":"30543:15:20","nodeType":"YulFunctionCall","src":"30543:15:20"},{"hexValue":"6869676865737420626964","kind":"string","nativeSrc":"30560:13:20","nodeType":"YulLiteral","src":"30560:13:20","type":"","value":"highest bid"}],"functionName":{"name":"mstore","nativeSrc":"30536:6:20","nodeType":"YulIdentifier","src":"30536:6:20"},"nativeSrc":"30536:38:20","nodeType":"YulFunctionCall","src":"30536:38:20"},"nativeSrc":"30536:38:20","nodeType":"YulExpressionStatement","src":"30536:38:20"}]},"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"30351:230:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30449:6:20","nodeType":"YulTypedName","src":"30449:6:20","type":""}],"src":"30351:230:20"},{"body":{"nativeSrc":"30733:220:20","nodeType":"YulBlock","src":"30733:220:20","statements":[{"nativeSrc":"30743:74:20","nodeType":"YulAssignment","src":"30743:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"30809:3:20","nodeType":"YulIdentifier","src":"30809:3:20"},{"kind":"number","nativeSrc":"30814:2:20","nodeType":"YulLiteral","src":"30814:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"30750:58:20","nodeType":"YulIdentifier","src":"30750:58:20"},"nativeSrc":"30750:67:20","nodeType":"YulFunctionCall","src":"30750:67:20"},"variableNames":[{"name":"pos","nativeSrc":"30743:3:20","nodeType":"YulIdentifier","src":"30743:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"30915:3:20","nodeType":"YulIdentifier","src":"30915:3:20"}],"functionName":{"name":"store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9","nativeSrc":"30826:88:20","nodeType":"YulIdentifier","src":"30826:88:20"},"nativeSrc":"30826:93:20","nodeType":"YulFunctionCall","src":"30826:93:20"},"nativeSrc":"30826:93:20","nodeType":"YulExpressionStatement","src":"30826:93:20"},{"nativeSrc":"30928:19:20","nodeType":"YulAssignment","src":"30928:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"30939:3:20","nodeType":"YulIdentifier","src":"30939:3:20"},{"kind":"number","nativeSrc":"30944:2:20","nodeType":"YulLiteral","src":"30944:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30935:3:20","nodeType":"YulIdentifier","src":"30935:3:20"},"nativeSrc":"30935:12:20","nodeType":"YulFunctionCall","src":"30935:12:20"},"variableNames":[{"name":"end","nativeSrc":"30928:3:20","nodeType":"YulIdentifier","src":"30928:3:20"}]}]},"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"30587:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30721:3:20","nodeType":"YulTypedName","src":"30721:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30729:3:20","nodeType":"YulTypedName","src":"30729:3:20","type":""}],"src":"30587:366:20"},{"body":{"nativeSrc":"31130:248:20","nodeType":"YulBlock","src":"31130:248:20","statements":[{"nativeSrc":"31140:26:20","nodeType":"YulAssignment","src":"31140:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"31152:9:20","nodeType":"YulIdentifier","src":"31152:9:20"},{"kind":"number","nativeSrc":"31163:2:20","nodeType":"YulLiteral","src":"31163:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31148:3:20","nodeType":"YulIdentifier","src":"31148:3:20"},"nativeSrc":"31148:18:20","nodeType":"YulFunctionCall","src":"31148:18:20"},"variableNames":[{"name":"tail","nativeSrc":"31140:4:20","nodeType":"YulIdentifier","src":"31140:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31187:9:20","nodeType":"YulIdentifier","src":"31187:9:20"},{"kind":"number","nativeSrc":"31198:1:20","nodeType":"YulLiteral","src":"31198:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31183:3:20","nodeType":"YulIdentifier","src":"31183:3:20"},"nativeSrc":"31183:17:20","nodeType":"YulFunctionCall","src":"31183:17:20"},{"arguments":[{"name":"tail","nativeSrc":"31206:4:20","nodeType":"YulIdentifier","src":"31206:4:20"},{"name":"headStart","nativeSrc":"31212:9:20","nodeType":"YulIdentifier","src":"31212:9:20"}],"functionName":{"name":"sub","nativeSrc":"31202:3:20","nodeType":"YulIdentifier","src":"31202:3:20"},"nativeSrc":"31202:20:20","nodeType":"YulFunctionCall","src":"31202:20:20"}],"functionName":{"name":"mstore","nativeSrc":"31176:6:20","nodeType":"YulIdentifier","src":"31176:6:20"},"nativeSrc":"31176:47:20","nodeType":"YulFunctionCall","src":"31176:47:20"},"nativeSrc":"31176:47:20","nodeType":"YulExpressionStatement","src":"31176:47:20"},{"nativeSrc":"31232:139:20","nodeType":"YulAssignment","src":"31232:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"31366:4:20","nodeType":"YulIdentifier","src":"31366:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack","nativeSrc":"31240:124:20","nodeType":"YulIdentifier","src":"31240:124:20"},"nativeSrc":"31240:131:20","nodeType":"YulFunctionCall","src":"31240:131:20"},"variableNames":[{"name":"tail","nativeSrc":"31232:4:20","nodeType":"YulIdentifier","src":"31232:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"30959:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31110:9:20","nodeType":"YulTypedName","src":"31110:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31125:4:20","nodeType":"YulTypedName","src":"31125:4:20","type":""}],"src":"30959:419:20"},{"body":{"nativeSrc":"31490:119:20","nodeType":"YulBlock","src":"31490:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31512:6:20","nodeType":"YulIdentifier","src":"31512:6:20"},{"kind":"number","nativeSrc":"31520:1:20","nodeType":"YulLiteral","src":"31520:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31508:3:20","nodeType":"YulIdentifier","src":"31508:3:20"},"nativeSrc":"31508:14:20","nodeType":"YulFunctionCall","src":"31508:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"31524:34:20","nodeType":"YulLiteral","src":"31524:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"31501:6:20","nodeType":"YulIdentifier","src":"31501:6:20"},"nativeSrc":"31501:58:20","nodeType":"YulFunctionCall","src":"31501:58:20"},"nativeSrc":"31501:58:20","nodeType":"YulExpressionStatement","src":"31501:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"31580:6:20","nodeType":"YulIdentifier","src":"31580:6:20"},{"kind":"number","nativeSrc":"31588:2:20","nodeType":"YulLiteral","src":"31588:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31576:3:20","nodeType":"YulIdentifier","src":"31576:3:20"},"nativeSrc":"31576:15:20","nodeType":"YulFunctionCall","src":"31576:15:20"},{"hexValue":"646472657373","kind":"string","nativeSrc":"31593:8:20","nodeType":"YulLiteral","src":"31593:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"31569:6:20","nodeType":"YulIdentifier","src":"31569:6:20"},"nativeSrc":"31569:33:20","nodeType":"YulFunctionCall","src":"31569:33:20"},"nativeSrc":"31569:33:20","nodeType":"YulExpressionStatement","src":"31569:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"31384:225:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"31482:6:20","nodeType":"YulTypedName","src":"31482:6:20","type":""}],"src":"31384:225:20"},{"body":{"nativeSrc":"31761:220:20","nodeType":"YulBlock","src":"31761:220:20","statements":[{"nativeSrc":"31771:74:20","nodeType":"YulAssignment","src":"31771:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"31837:3:20","nodeType":"YulIdentifier","src":"31837:3:20"},{"kind":"number","nativeSrc":"31842:2:20","nodeType":"YulLiteral","src":"31842:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31778:58:20","nodeType":"YulIdentifier","src":"31778:58:20"},"nativeSrc":"31778:67:20","nodeType":"YulFunctionCall","src":"31778:67:20"},"variableNames":[{"name":"pos","nativeSrc":"31771:3:20","nodeType":"YulIdentifier","src":"31771:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31943:3:20","nodeType":"YulIdentifier","src":"31943:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"31854:88:20","nodeType":"YulIdentifier","src":"31854:88:20"},"nativeSrc":"31854:93:20","nodeType":"YulFunctionCall","src":"31854:93:20"},"nativeSrc":"31854:93:20","nodeType":"YulExpressionStatement","src":"31854:93:20"},{"nativeSrc":"31956:19:20","nodeType":"YulAssignment","src":"31956:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"31967:3:20","nodeType":"YulIdentifier","src":"31967:3:20"},{"kind":"number","nativeSrc":"31972:2:20","nodeType":"YulLiteral","src":"31972:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"31963:3:20","nodeType":"YulIdentifier","src":"31963:3:20"},"nativeSrc":"31963:12:20","nodeType":"YulFunctionCall","src":"31963:12:20"},"variableNames":[{"name":"end","nativeSrc":"31956:3:20","nodeType":"YulIdentifier","src":"31956:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"31615:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31749:3:20","nodeType":"YulTypedName","src":"31749:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31757:3:20","nodeType":"YulTypedName","src":"31757:3:20","type":""}],"src":"31615:366:20"},{"body":{"nativeSrc":"32158:248:20","nodeType":"YulBlock","src":"32158:248:20","statements":[{"nativeSrc":"32168:26:20","nodeType":"YulAssignment","src":"32168:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"32180:9:20","nodeType":"YulIdentifier","src":"32180:9:20"},{"kind":"number","nativeSrc":"32191:2:20","nodeType":"YulLiteral","src":"32191:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32176:3:20","nodeType":"YulIdentifier","src":"32176:3:20"},"nativeSrc":"32176:18:20","nodeType":"YulFunctionCall","src":"32176:18:20"},"variableNames":[{"name":"tail","nativeSrc":"32168:4:20","nodeType":"YulIdentifier","src":"32168:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32215:9:20","nodeType":"YulIdentifier","src":"32215:9:20"},{"kind":"number","nativeSrc":"32226:1:20","nodeType":"YulLiteral","src":"32226:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32211:3:20","nodeType":"YulIdentifier","src":"32211:3:20"},"nativeSrc":"32211:17:20","nodeType":"YulFunctionCall","src":"32211:17:20"},{"arguments":[{"name":"tail","nativeSrc":"32234:4:20","nodeType":"YulIdentifier","src":"32234:4:20"},{"name":"headStart","nativeSrc":"32240:9:20","nodeType":"YulIdentifier","src":"32240:9:20"}],"functionName":{"name":"sub","nativeSrc":"32230:3:20","nodeType":"YulIdentifier","src":"32230:3:20"},"nativeSrc":"32230:20:20","nodeType":"YulFunctionCall","src":"32230:20:20"}],"functionName":{"name":"mstore","nativeSrc":"32204:6:20","nodeType":"YulIdentifier","src":"32204:6:20"},"nativeSrc":"32204:47:20","nodeType":"YulFunctionCall","src":"32204:47:20"},"nativeSrc":"32204:47:20","nodeType":"YulExpressionStatement","src":"32204:47:20"},{"nativeSrc":"32260:139:20","nodeType":"YulAssignment","src":"32260:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"32394:4:20","nodeType":"YulIdentifier","src":"32394:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"32268:124:20","nodeType":"YulIdentifier","src":"32268:124:20"},"nativeSrc":"32268:131:20","nodeType":"YulFunctionCall","src":"32268:131:20"},"variableNames":[{"name":"tail","nativeSrc":"32260:4:20","nodeType":"YulIdentifier","src":"32260:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31987:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32138:9:20","nodeType":"YulTypedName","src":"32138:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32153:4:20","nodeType":"YulTypedName","src":"32153:4:20","type":""}],"src":"31987:419:20"},{"body":{"nativeSrc":"32518:65:20","nodeType":"YulBlock","src":"32518:65:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"32540:6:20","nodeType":"YulIdentifier","src":"32540:6:20"},{"kind":"number","nativeSrc":"32548:1:20","nodeType":"YulLiteral","src":"32548:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32536:3:20","nodeType":"YulIdentifier","src":"32536:3:20"},"nativeSrc":"32536:14:20","nodeType":"YulFunctionCall","src":"32536:14:20"},{"hexValue":"41756374696f6e206e6f7420656e64656420796574","kind":"string","nativeSrc":"32552:23:20","nodeType":"YulLiteral","src":"32552:23:20","type":"","value":"Auction not ended yet"}],"functionName":{"name":"mstore","nativeSrc":"32529:6:20","nodeType":"YulIdentifier","src":"32529:6:20"},"nativeSrc":"32529:47:20","nodeType":"YulFunctionCall","src":"32529:47:20"},"nativeSrc":"32529:47:20","nodeType":"YulExpressionStatement","src":"32529:47:20"}]},"name":"store_literal_in_memory_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00","nativeSrc":"32412:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"32510:6:20","nodeType":"YulTypedName","src":"32510:6:20","type":""}],"src":"32412:171:20"},{"body":{"nativeSrc":"32735:220:20","nodeType":"YulBlock","src":"32735:220:20","statements":[{"nativeSrc":"32745:74:20","nodeType":"YulAssignment","src":"32745:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"32811:3:20","nodeType":"YulIdentifier","src":"32811:3:20"},{"kind":"number","nativeSrc":"32816:2:20","nodeType":"YulLiteral","src":"32816:2:20","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"32752:58:20","nodeType":"YulIdentifier","src":"32752:58:20"},"nativeSrc":"32752:67:20","nodeType":"YulFunctionCall","src":"32752:67:20"},"variableNames":[{"name":"pos","nativeSrc":"32745:3:20","nodeType":"YulIdentifier","src":"32745:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"32917:3:20","nodeType":"YulIdentifier","src":"32917:3:20"}],"functionName":{"name":"store_literal_in_memory_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00","nativeSrc":"32828:88:20","nodeType":"YulIdentifier","src":"32828:88:20"},"nativeSrc":"32828:93:20","nodeType":"YulFunctionCall","src":"32828:93:20"},"nativeSrc":"32828:93:20","nodeType":"YulExpressionStatement","src":"32828:93:20"},{"nativeSrc":"32930:19:20","nodeType":"YulAssignment","src":"32930:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"32941:3:20","nodeType":"YulIdentifier","src":"32941:3:20"},{"kind":"number","nativeSrc":"32946:2:20","nodeType":"YulLiteral","src":"32946:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32937:3:20","nodeType":"YulIdentifier","src":"32937:3:20"},"nativeSrc":"32937:12:20","nodeType":"YulFunctionCall","src":"32937:12:20"},"variableNames":[{"name":"end","nativeSrc":"32930:3:20","nodeType":"YulIdentifier","src":"32930:3:20"}]}]},"name":"abi_encode_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00_to_t_string_memory_ptr_fromStack","nativeSrc":"32589:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"32723:3:20","nodeType":"YulTypedName","src":"32723:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"32731:3:20","nodeType":"YulTypedName","src":"32731:3:20","type":""}],"src":"32589:366:20"},{"body":{"nativeSrc":"33132:248:20","nodeType":"YulBlock","src":"33132:248:20","statements":[{"nativeSrc":"33142:26:20","nodeType":"YulAssignment","src":"33142:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"33154:9:20","nodeType":"YulIdentifier","src":"33154:9:20"},{"kind":"number","nativeSrc":"33165:2:20","nodeType":"YulLiteral","src":"33165:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33150:3:20","nodeType":"YulIdentifier","src":"33150:3:20"},"nativeSrc":"33150:18:20","nodeType":"YulFunctionCall","src":"33150:18:20"},"variableNames":[{"name":"tail","nativeSrc":"33142:4:20","nodeType":"YulIdentifier","src":"33142:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33189:9:20","nodeType":"YulIdentifier","src":"33189:9:20"},{"kind":"number","nativeSrc":"33200:1:20","nodeType":"YulLiteral","src":"33200:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33185:3:20","nodeType":"YulIdentifier","src":"33185:3:20"},"nativeSrc":"33185:17:20","nodeType":"YulFunctionCall","src":"33185:17:20"},{"arguments":[{"name":"tail","nativeSrc":"33208:4:20","nodeType":"YulIdentifier","src":"33208:4:20"},{"name":"headStart","nativeSrc":"33214:9:20","nodeType":"YulIdentifier","src":"33214:9:20"}],"functionName":{"name":"sub","nativeSrc":"33204:3:20","nodeType":"YulIdentifier","src":"33204:3:20"},"nativeSrc":"33204:20:20","nodeType":"YulFunctionCall","src":"33204:20:20"}],"functionName":{"name":"mstore","nativeSrc":"33178:6:20","nodeType":"YulIdentifier","src":"33178:6:20"},"nativeSrc":"33178:47:20","nodeType":"YulFunctionCall","src":"33178:47:20"},"nativeSrc":"33178:47:20","nodeType":"YulExpressionStatement","src":"33178:47:20"},{"nativeSrc":"33234:139:20","nodeType":"YulAssignment","src":"33234:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"33368:4:20","nodeType":"YulIdentifier","src":"33368:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00_to_t_string_memory_ptr_fromStack","nativeSrc":"33242:124:20","nodeType":"YulIdentifier","src":"33242:124:20"},"nativeSrc":"33242:131:20","nodeType":"YulFunctionCall","src":"33242:131:20"},"variableNames":[{"name":"tail","nativeSrc":"33234:4:20","nodeType":"YulIdentifier","src":"33234:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32961:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33112:9:20","nodeType":"YulTypedName","src":"33112:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33127:4:20","nodeType":"YulTypedName","src":"33127:4:20","type":""}],"src":"32961:419:20"},{"body":{"nativeSrc":"33429:79:20","nodeType":"YulBlock","src":"33429:79:20","statements":[{"body":{"nativeSrc":"33486:16:20","nodeType":"YulBlock","src":"33486:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"33495:1:20","nodeType":"YulLiteral","src":"33495:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"33498:1:20","nodeType":"YulLiteral","src":"33498:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"33488:6:20","nodeType":"YulIdentifier","src":"33488:6:20"},"nativeSrc":"33488:12:20","nodeType":"YulFunctionCall","src":"33488:12:20"},"nativeSrc":"33488:12:20","nodeType":"YulExpressionStatement","src":"33488:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"33452:5:20","nodeType":"YulIdentifier","src":"33452:5:20"},{"arguments":[{"name":"value","nativeSrc":"33477:5:20","nodeType":"YulIdentifier","src":"33477:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"33459:17:20","nodeType":"YulIdentifier","src":"33459:17:20"},"nativeSrc":"33459:24:20","nodeType":"YulFunctionCall","src":"33459:24:20"}],"functionName":{"name":"eq","nativeSrc":"33449:2:20","nodeType":"YulIdentifier","src":"33449:2:20"},"nativeSrc":"33449:35:20","nodeType":"YulFunctionCall","src":"33449:35:20"}],"functionName":{"name":"iszero","nativeSrc":"33442:6:20","nodeType":"YulIdentifier","src":"33442:6:20"},"nativeSrc":"33442:43:20","nodeType":"YulFunctionCall","src":"33442:43:20"},"nativeSrc":"33439:63:20","nodeType":"YulIf","src":"33439:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"33386:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33422:5:20","nodeType":"YulTypedName","src":"33422:5:20","type":""}],"src":"33386:122:20"},{"body":{"nativeSrc":"33577:80:20","nodeType":"YulBlock","src":"33577:80:20","statements":[{"nativeSrc":"33587:22:20","nodeType":"YulAssignment","src":"33587:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"33602:6:20","nodeType":"YulIdentifier","src":"33602:6:20"}],"functionName":{"name":"mload","nativeSrc":"33596:5:20","nodeType":"YulIdentifier","src":"33596:5:20"},"nativeSrc":"33596:13:20","nodeType":"YulFunctionCall","src":"33596:13:20"},"variableNames":[{"name":"value","nativeSrc":"33587:5:20","nodeType":"YulIdentifier","src":"33587:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"33645:5:20","nodeType":"YulIdentifier","src":"33645:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"33618:26:20","nodeType":"YulIdentifier","src":"33618:26:20"},"nativeSrc":"33618:33:20","nodeType":"YulFunctionCall","src":"33618:33:20"},"nativeSrc":"33618:33:20","nodeType":"YulExpressionStatement","src":"33618:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"33514:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"33555:6:20","nodeType":"YulTypedName","src":"33555:6:20","type":""},{"name":"end","nativeSrc":"33563:3:20","nodeType":"YulTypedName","src":"33563:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"33571:5:20","nodeType":"YulTypedName","src":"33571:5:20","type":""}],"src":"33514:143:20"},{"body":{"nativeSrc":"33740:274:20","nodeType":"YulBlock","src":"33740:274:20","statements":[{"body":{"nativeSrc":"33786:83:20","nodeType":"YulBlock","src":"33786:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"33788:77:20","nodeType":"YulIdentifier","src":"33788:77:20"},"nativeSrc":"33788:79:20","nodeType":"YulFunctionCall","src":"33788:79:20"},"nativeSrc":"33788:79:20","nodeType":"YulExpressionStatement","src":"33788:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"33761:7:20","nodeType":"YulIdentifier","src":"33761:7:20"},{"name":"headStart","nativeSrc":"33770:9:20","nodeType":"YulIdentifier","src":"33770:9:20"}],"functionName":{"name":"sub","nativeSrc":"33757:3:20","nodeType":"YulIdentifier","src":"33757:3:20"},"nativeSrc":"33757:23:20","nodeType":"YulFunctionCall","src":"33757:23:20"},{"kind":"number","nativeSrc":"33782:2:20","nodeType":"YulLiteral","src":"33782:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"33753:3:20","nodeType":"YulIdentifier","src":"33753:3:20"},"nativeSrc":"33753:32:20","nodeType":"YulFunctionCall","src":"33753:32:20"},"nativeSrc":"33750:119:20","nodeType":"YulIf","src":"33750:119:20"},{"nativeSrc":"33879:128:20","nodeType":"YulBlock","src":"33879:128:20","statements":[{"nativeSrc":"33894:15:20","nodeType":"YulVariableDeclaration","src":"33894:15:20","value":{"kind":"number","nativeSrc":"33908:1:20","nodeType":"YulLiteral","src":"33908:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"33898:6:20","nodeType":"YulTypedName","src":"33898:6:20","type":""}]},{"nativeSrc":"33923:74:20","nodeType":"YulAssignment","src":"33923:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"33969:9:20","nodeType":"YulIdentifier","src":"33969:9:20"},{"name":"offset","nativeSrc":"33980:6:20","nodeType":"YulIdentifier","src":"33980:6:20"}],"functionName":{"name":"add","nativeSrc":"33965:3:20","nodeType":"YulIdentifier","src":"33965:3:20"},"nativeSrc":"33965:22:20","nodeType":"YulFunctionCall","src":"33965:22:20"},{"name":"dataEnd","nativeSrc":"33989:7:20","nodeType":"YulIdentifier","src":"33989:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"33933:31:20","nodeType":"YulIdentifier","src":"33933:31:20"},"nativeSrc":"33933:64:20","nodeType":"YulFunctionCall","src":"33933:64:20"},"variableNames":[{"name":"value0","nativeSrc":"33923:6:20","nodeType":"YulIdentifier","src":"33923:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"33663:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33710:9:20","nodeType":"YulTypedName","src":"33710:9:20","type":""},{"name":"dataEnd","nativeSrc":"33721:7:20","nodeType":"YulTypedName","src":"33721:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"33733:6:20","nodeType":"YulTypedName","src":"33733:6:20","type":""}],"src":"33663:351:20"},{"body":{"nativeSrc":"34126:127:20","nodeType":"YulBlock","src":"34126:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34148:6:20","nodeType":"YulIdentifier","src":"34148:6:20"},{"kind":"number","nativeSrc":"34156:1:20","nodeType":"YulLiteral","src":"34156:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34144:3:20","nodeType":"YulIdentifier","src":"34144:3:20"},"nativeSrc":"34144:14:20","nodeType":"YulFunctionCall","src":"34144:14:20"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nativeSrc":"34160:34:20","nodeType":"YulLiteral","src":"34160:34:20","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nativeSrc":"34137:6:20","nodeType":"YulIdentifier","src":"34137:6:20"},"nativeSrc":"34137:58:20","nodeType":"YulFunctionCall","src":"34137:58:20"},"nativeSrc":"34137:58:20","nodeType":"YulExpressionStatement","src":"34137:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"34216:6:20","nodeType":"YulIdentifier","src":"34216:6:20"},{"kind":"number","nativeSrc":"34224:2:20","nodeType":"YulLiteral","src":"34224:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34212:3:20","nodeType":"YulIdentifier","src":"34212:3:20"},"nativeSrc":"34212:15:20","nodeType":"YulFunctionCall","src":"34212:15:20"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nativeSrc":"34229:16:20","nodeType":"YulLiteral","src":"34229:16:20","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nativeSrc":"34205:6:20","nodeType":"YulIdentifier","src":"34205:6:20"},"nativeSrc":"34205:41:20","nodeType":"YulFunctionCall","src":"34205:41:20"},"nativeSrc":"34205:41:20","nodeType":"YulExpressionStatement","src":"34205:41:20"}]},"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nativeSrc":"34020:233:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"34118:6:20","nodeType":"YulTypedName","src":"34118:6:20","type":""}],"src":"34020:233:20"},{"body":{"nativeSrc":"34405:220:20","nodeType":"YulBlock","src":"34405:220:20","statements":[{"nativeSrc":"34415:74:20","nodeType":"YulAssignment","src":"34415:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"34481:3:20","nodeType":"YulIdentifier","src":"34481:3:20"},{"kind":"number","nativeSrc":"34486:2:20","nodeType":"YulLiteral","src":"34486:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"34422:58:20","nodeType":"YulIdentifier","src":"34422:58:20"},"nativeSrc":"34422:67:20","nodeType":"YulFunctionCall","src":"34422:67:20"},"variableNames":[{"name":"pos","nativeSrc":"34415:3:20","nodeType":"YulIdentifier","src":"34415:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"34587:3:20","nodeType":"YulIdentifier","src":"34587:3:20"}],"functionName":{"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nativeSrc":"34498:88:20","nodeType":"YulIdentifier","src":"34498:88:20"},"nativeSrc":"34498:93:20","nodeType":"YulFunctionCall","src":"34498:93:20"},"nativeSrc":"34498:93:20","nodeType":"YulExpressionStatement","src":"34498:93:20"},{"nativeSrc":"34600:19:20","nodeType":"YulAssignment","src":"34600:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"34611:3:20","nodeType":"YulIdentifier","src":"34611:3:20"},{"kind":"number","nativeSrc":"34616:2:20","nodeType":"YulLiteral","src":"34616:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"34607:3:20","nodeType":"YulIdentifier","src":"34607:3:20"},"nativeSrc":"34607:12:20","nodeType":"YulFunctionCall","src":"34607:12:20"},"variableNames":[{"name":"end","nativeSrc":"34600:3:20","nodeType":"YulIdentifier","src":"34600:3:20"}]}]},"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nativeSrc":"34259:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"34393:3:20","nodeType":"YulTypedName","src":"34393:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"34401:3:20","nodeType":"YulTypedName","src":"34401:3:20","type":""}],"src":"34259:366:20"},{"body":{"nativeSrc":"34802:248:20","nodeType":"YulBlock","src":"34802:248:20","statements":[{"nativeSrc":"34812:26:20","nodeType":"YulAssignment","src":"34812:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"34824:9:20","nodeType":"YulIdentifier","src":"34824:9:20"},{"kind":"number","nativeSrc":"34835:2:20","nodeType":"YulLiteral","src":"34835:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"34820:3:20","nodeType":"YulIdentifier","src":"34820:3:20"},"nativeSrc":"34820:18:20","nodeType":"YulFunctionCall","src":"34820:18:20"},"variableNames":[{"name":"tail","nativeSrc":"34812:4:20","nodeType":"YulIdentifier","src":"34812:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"34859:9:20","nodeType":"YulIdentifier","src":"34859:9:20"},{"kind":"number","nativeSrc":"34870:1:20","nodeType":"YulLiteral","src":"34870:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"34855:3:20","nodeType":"YulIdentifier","src":"34855:3:20"},"nativeSrc":"34855:17:20","nodeType":"YulFunctionCall","src":"34855:17:20"},{"arguments":[{"name":"tail","nativeSrc":"34878:4:20","nodeType":"YulIdentifier","src":"34878:4:20"},{"name":"headStart","nativeSrc":"34884:9:20","nodeType":"YulIdentifier","src":"34884:9:20"}],"functionName":{"name":"sub","nativeSrc":"34874:3:20","nodeType":"YulIdentifier","src":"34874:3:20"},"nativeSrc":"34874:20:20","nodeType":"YulFunctionCall","src":"34874:20:20"}],"functionName":{"name":"mstore","nativeSrc":"34848:6:20","nodeType":"YulIdentifier","src":"34848:6:20"},"nativeSrc":"34848:47:20","nodeType":"YulFunctionCall","src":"34848:47:20"},"nativeSrc":"34848:47:20","nodeType":"YulExpressionStatement","src":"34848:47:20"},{"nativeSrc":"34904:139:20","nodeType":"YulAssignment","src":"34904:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"35038:4:20","nodeType":"YulIdentifier","src":"35038:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nativeSrc":"34912:124:20","nodeType":"YulIdentifier","src":"34912:124:20"},"nativeSrc":"34912:131:20","nodeType":"YulFunctionCall","src":"34912:131:20"},"variableNames":[{"name":"tail","nativeSrc":"34904:4:20","nodeType":"YulIdentifier","src":"34904:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"34631:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"34782:9:20","nodeType":"YulTypedName","src":"34782:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"34797:4:20","nodeType":"YulTypedName","src":"34797:4:20","type":""}],"src":"34631:419:20"},{"body":{"nativeSrc":"35162:122:20","nodeType":"YulBlock","src":"35162:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35184:6:20","nodeType":"YulIdentifier","src":"35184:6:20"},{"kind":"number","nativeSrc":"35192:1:20","nodeType":"YulLiteral","src":"35192:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35180:3:20","nodeType":"YulIdentifier","src":"35180:3:20"},"nativeSrc":"35180:14:20","nodeType":"YulFunctionCall","src":"35180:14:20"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nativeSrc":"35196:34:20","nodeType":"YulLiteral","src":"35196:34:20","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nativeSrc":"35173:6:20","nodeType":"YulIdentifier","src":"35173:6:20"},"nativeSrc":"35173:58:20","nodeType":"YulFunctionCall","src":"35173:58:20"},"nativeSrc":"35173:58:20","nodeType":"YulExpressionStatement","src":"35173:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"35252:6:20","nodeType":"YulIdentifier","src":"35252:6:20"},{"kind":"number","nativeSrc":"35260:2:20","nodeType":"YulLiteral","src":"35260:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35248:3:20","nodeType":"YulIdentifier","src":"35248:3:20"},"nativeSrc":"35248:15:20","nodeType":"YulFunctionCall","src":"35248:15:20"},{"hexValue":"6961626c6555554944","kind":"string","nativeSrc":"35265:11:20","nodeType":"YulLiteral","src":"35265:11:20","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nativeSrc":"35241:6:20","nodeType":"YulIdentifier","src":"35241:6:20"},"nativeSrc":"35241:36:20","nodeType":"YulFunctionCall","src":"35241:36:20"},"nativeSrc":"35241:36:20","nodeType":"YulExpressionStatement","src":"35241:36:20"}]},"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nativeSrc":"35056:228:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"35154:6:20","nodeType":"YulTypedName","src":"35154:6:20","type":""}],"src":"35056:228:20"},{"body":{"nativeSrc":"35436:220:20","nodeType":"YulBlock","src":"35436:220:20","statements":[{"nativeSrc":"35446:74:20","nodeType":"YulAssignment","src":"35446:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"35512:3:20","nodeType":"YulIdentifier","src":"35512:3:20"},{"kind":"number","nativeSrc":"35517:2:20","nodeType":"YulLiteral","src":"35517:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"35453:58:20","nodeType":"YulIdentifier","src":"35453:58:20"},"nativeSrc":"35453:67:20","nodeType":"YulFunctionCall","src":"35453:67:20"},"variableNames":[{"name":"pos","nativeSrc":"35446:3:20","nodeType":"YulIdentifier","src":"35446:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"35618:3:20","nodeType":"YulIdentifier","src":"35618:3:20"}],"functionName":{"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nativeSrc":"35529:88:20","nodeType":"YulIdentifier","src":"35529:88:20"},"nativeSrc":"35529:93:20","nodeType":"YulFunctionCall","src":"35529:93:20"},"nativeSrc":"35529:93:20","nodeType":"YulExpressionStatement","src":"35529:93:20"},{"nativeSrc":"35631:19:20","nodeType":"YulAssignment","src":"35631:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"35642:3:20","nodeType":"YulIdentifier","src":"35642:3:20"},{"kind":"number","nativeSrc":"35647:2:20","nodeType":"YulLiteral","src":"35647:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"35638:3:20","nodeType":"YulIdentifier","src":"35638:3:20"},"nativeSrc":"35638:12:20","nodeType":"YulFunctionCall","src":"35638:12:20"},"variableNames":[{"name":"end","nativeSrc":"35631:3:20","nodeType":"YulIdentifier","src":"35631:3:20"}]}]},"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nativeSrc":"35290:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"35424:3:20","nodeType":"YulTypedName","src":"35424:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"35432:3:20","nodeType":"YulTypedName","src":"35432:3:20","type":""}],"src":"35290:366:20"},{"body":{"nativeSrc":"35833:248:20","nodeType":"YulBlock","src":"35833:248:20","statements":[{"nativeSrc":"35843:26:20","nodeType":"YulAssignment","src":"35843:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"35855:9:20","nodeType":"YulIdentifier","src":"35855:9:20"},{"kind":"number","nativeSrc":"35866:2:20","nodeType":"YulLiteral","src":"35866:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"35851:3:20","nodeType":"YulIdentifier","src":"35851:3:20"},"nativeSrc":"35851:18:20","nodeType":"YulFunctionCall","src":"35851:18:20"},"variableNames":[{"name":"tail","nativeSrc":"35843:4:20","nodeType":"YulIdentifier","src":"35843:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"35890:9:20","nodeType":"YulIdentifier","src":"35890:9:20"},{"kind":"number","nativeSrc":"35901:1:20","nodeType":"YulLiteral","src":"35901:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"35886:3:20","nodeType":"YulIdentifier","src":"35886:3:20"},"nativeSrc":"35886:17:20","nodeType":"YulFunctionCall","src":"35886:17:20"},{"arguments":[{"name":"tail","nativeSrc":"35909:4:20","nodeType":"YulIdentifier","src":"35909:4:20"},{"name":"headStart","nativeSrc":"35915:9:20","nodeType":"YulIdentifier","src":"35915:9:20"}],"functionName":{"name":"sub","nativeSrc":"35905:3:20","nodeType":"YulIdentifier","src":"35905:3:20"},"nativeSrc":"35905:20:20","nodeType":"YulFunctionCall","src":"35905:20:20"}],"functionName":{"name":"mstore","nativeSrc":"35879:6:20","nodeType":"YulIdentifier","src":"35879:6:20"},"nativeSrc":"35879:47:20","nodeType":"YulFunctionCall","src":"35879:47:20"},"nativeSrc":"35879:47:20","nodeType":"YulExpressionStatement","src":"35879:47:20"},{"nativeSrc":"35935:139:20","nodeType":"YulAssignment","src":"35935:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"36069:4:20","nodeType":"YulIdentifier","src":"36069:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nativeSrc":"35943:124:20","nodeType":"YulIdentifier","src":"35943:124:20"},"nativeSrc":"35943:131:20","nodeType":"YulFunctionCall","src":"35943:131:20"},"variableNames":[{"name":"tail","nativeSrc":"35935:4:20","nodeType":"YulIdentifier","src":"35935:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"35662:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"35813:9:20","nodeType":"YulTypedName","src":"35813:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"35828:4:20","nodeType":"YulTypedName","src":"35828:4:20","type":""}],"src":"35662:419:20"},{"body":{"nativeSrc":"36193:76:20","nodeType":"YulBlock","src":"36193:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"36215:6:20","nodeType":"YulIdentifier","src":"36215:6:20"},{"kind":"number","nativeSrc":"36223:1:20","nodeType":"YulLiteral","src":"36223:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36211:3:20","nodeType":"YulIdentifier","src":"36211:3:20"},"nativeSrc":"36211:14:20","nodeType":"YulFunctionCall","src":"36211:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"36227:34:20","nodeType":"YulLiteral","src":"36227:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"36204:6:20","nodeType":"YulIdentifier","src":"36204:6:20"},"nativeSrc":"36204:58:20","nodeType":"YulFunctionCall","src":"36204:58:20"},"nativeSrc":"36204:58:20","nodeType":"YulExpressionStatement","src":"36204:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"36087:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"36185:6:20","nodeType":"YulTypedName","src":"36185:6:20","type":""}],"src":"36087:182:20"},{"body":{"nativeSrc":"36421:220:20","nodeType":"YulBlock","src":"36421:220:20","statements":[{"nativeSrc":"36431:74:20","nodeType":"YulAssignment","src":"36431:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"36497:3:20","nodeType":"YulIdentifier","src":"36497:3:20"},{"kind":"number","nativeSrc":"36502:2:20","nodeType":"YulLiteral","src":"36502:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"36438:58:20","nodeType":"YulIdentifier","src":"36438:58:20"},"nativeSrc":"36438:67:20","nodeType":"YulFunctionCall","src":"36438:67:20"},"variableNames":[{"name":"pos","nativeSrc":"36431:3:20","nodeType":"YulIdentifier","src":"36431:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"36603:3:20","nodeType":"YulIdentifier","src":"36603:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"36514:88:20","nodeType":"YulIdentifier","src":"36514:88:20"},"nativeSrc":"36514:93:20","nodeType":"YulFunctionCall","src":"36514:93:20"},"nativeSrc":"36514:93:20","nodeType":"YulExpressionStatement","src":"36514:93:20"},{"nativeSrc":"36616:19:20","nodeType":"YulAssignment","src":"36616:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"36627:3:20","nodeType":"YulIdentifier","src":"36627:3:20"},{"kind":"number","nativeSrc":"36632:2:20","nodeType":"YulLiteral","src":"36632:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36623:3:20","nodeType":"YulIdentifier","src":"36623:3:20"},"nativeSrc":"36623:12:20","nodeType":"YulFunctionCall","src":"36623:12:20"},"variableNames":[{"name":"end","nativeSrc":"36616:3:20","nodeType":"YulIdentifier","src":"36616:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"36275:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"36409:3:20","nodeType":"YulTypedName","src":"36409:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"36417:3:20","nodeType":"YulTypedName","src":"36417:3:20","type":""}],"src":"36275:366:20"},{"body":{"nativeSrc":"36818:248:20","nodeType":"YulBlock","src":"36818:248:20","statements":[{"nativeSrc":"36828:26:20","nodeType":"YulAssignment","src":"36828:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"36840:9:20","nodeType":"YulIdentifier","src":"36840:9:20"},{"kind":"number","nativeSrc":"36851:2:20","nodeType":"YulLiteral","src":"36851:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"36836:3:20","nodeType":"YulIdentifier","src":"36836:3:20"},"nativeSrc":"36836:18:20","nodeType":"YulFunctionCall","src":"36836:18:20"},"variableNames":[{"name":"tail","nativeSrc":"36828:4:20","nodeType":"YulIdentifier","src":"36828:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"36875:9:20","nodeType":"YulIdentifier","src":"36875:9:20"},{"kind":"number","nativeSrc":"36886:1:20","nodeType":"YulLiteral","src":"36886:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"36871:3:20","nodeType":"YulIdentifier","src":"36871:3:20"},"nativeSrc":"36871:17:20","nodeType":"YulFunctionCall","src":"36871:17:20"},{"arguments":[{"name":"tail","nativeSrc":"36894:4:20","nodeType":"YulIdentifier","src":"36894:4:20"},{"name":"headStart","nativeSrc":"36900:9:20","nodeType":"YulIdentifier","src":"36900:9:20"}],"functionName":{"name":"sub","nativeSrc":"36890:3:20","nodeType":"YulIdentifier","src":"36890:3:20"},"nativeSrc":"36890:20:20","nodeType":"YulFunctionCall","src":"36890:20:20"}],"functionName":{"name":"mstore","nativeSrc":"36864:6:20","nodeType":"YulIdentifier","src":"36864:6:20"},"nativeSrc":"36864:47:20","nodeType":"YulFunctionCall","src":"36864:47:20"},"nativeSrc":"36864:47:20","nodeType":"YulExpressionStatement","src":"36864:47:20"},{"nativeSrc":"36920:139:20","nodeType":"YulAssignment","src":"36920:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"37054:4:20","nodeType":"YulIdentifier","src":"37054:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"36928:124:20","nodeType":"YulIdentifier","src":"36928:124:20"},"nativeSrc":"36928:131:20","nodeType":"YulFunctionCall","src":"36928:131:20"},"variableNames":[{"name":"tail","nativeSrc":"36920:4:20","nodeType":"YulIdentifier","src":"36920:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"36647:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"36798:9:20","nodeType":"YulTypedName","src":"36798:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"36813:4:20","nodeType":"YulTypedName","src":"36813:4:20","type":""}],"src":"36647:419:20"},{"body":{"nativeSrc":"37178:124:20","nodeType":"YulBlock","src":"37178:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37200:6:20","nodeType":"YulIdentifier","src":"37200:6:20"},{"kind":"number","nativeSrc":"37208:1:20","nodeType":"YulLiteral","src":"37208:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37196:3:20","nodeType":"YulIdentifier","src":"37196:3:20"},"nativeSrc":"37196:14:20","nodeType":"YulFunctionCall","src":"37196:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nativeSrc":"37212:34:20","nodeType":"YulLiteral","src":"37212:34:20","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nativeSrc":"37189:6:20","nodeType":"YulIdentifier","src":"37189:6:20"},"nativeSrc":"37189:58:20","nodeType":"YulFunctionCall","src":"37189:58:20"},"nativeSrc":"37189:58:20","nodeType":"YulExpressionStatement","src":"37189:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"37268:6:20","nodeType":"YulIdentifier","src":"37268:6:20"},{"kind":"number","nativeSrc":"37276:2:20","nodeType":"YulLiteral","src":"37276:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37264:3:20","nodeType":"YulIdentifier","src":"37264:3:20"},"nativeSrc":"37264:15:20","nodeType":"YulFunctionCall","src":"37264:15:20"},{"hexValue":"6e697469616c697a696e67","kind":"string","nativeSrc":"37281:13:20","nodeType":"YulLiteral","src":"37281:13:20","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nativeSrc":"37257:6:20","nodeType":"YulIdentifier","src":"37257:6:20"},"nativeSrc":"37257:38:20","nodeType":"YulFunctionCall","src":"37257:38:20"},"nativeSrc":"37257:38:20","nodeType":"YulExpressionStatement","src":"37257:38:20"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nativeSrc":"37072:230:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"37170:6:20","nodeType":"YulTypedName","src":"37170:6:20","type":""}],"src":"37072:230:20"},{"body":{"nativeSrc":"37454:220:20","nodeType":"YulBlock","src":"37454:220:20","statements":[{"nativeSrc":"37464:74:20","nodeType":"YulAssignment","src":"37464:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"37530:3:20","nodeType":"YulIdentifier","src":"37530:3:20"},{"kind":"number","nativeSrc":"37535:2:20","nodeType":"YulLiteral","src":"37535:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"37471:58:20","nodeType":"YulIdentifier","src":"37471:58:20"},"nativeSrc":"37471:67:20","nodeType":"YulFunctionCall","src":"37471:67:20"},"variableNames":[{"name":"pos","nativeSrc":"37464:3:20","nodeType":"YulIdentifier","src":"37464:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"37636:3:20","nodeType":"YulIdentifier","src":"37636:3:20"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nativeSrc":"37547:88:20","nodeType":"YulIdentifier","src":"37547:88:20"},"nativeSrc":"37547:93:20","nodeType":"YulFunctionCall","src":"37547:93:20"},"nativeSrc":"37547:93:20","nodeType":"YulExpressionStatement","src":"37547:93:20"},{"nativeSrc":"37649:19:20","nodeType":"YulAssignment","src":"37649:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"37660:3:20","nodeType":"YulIdentifier","src":"37660:3:20"},{"kind":"number","nativeSrc":"37665:2:20","nodeType":"YulLiteral","src":"37665:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"37656:3:20","nodeType":"YulIdentifier","src":"37656:3:20"},"nativeSrc":"37656:12:20","nodeType":"YulFunctionCall","src":"37656:12:20"},"variableNames":[{"name":"end","nativeSrc":"37649:3:20","nodeType":"YulIdentifier","src":"37649:3:20"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nativeSrc":"37308:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"37442:3:20","nodeType":"YulTypedName","src":"37442:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"37450:3:20","nodeType":"YulTypedName","src":"37450:3:20","type":""}],"src":"37308:366:20"},{"body":{"nativeSrc":"37851:248:20","nodeType":"YulBlock","src":"37851:248:20","statements":[{"nativeSrc":"37861:26:20","nodeType":"YulAssignment","src":"37861:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"37873:9:20","nodeType":"YulIdentifier","src":"37873:9:20"},{"kind":"number","nativeSrc":"37884:2:20","nodeType":"YulLiteral","src":"37884:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"37869:3:20","nodeType":"YulIdentifier","src":"37869:3:20"},"nativeSrc":"37869:18:20","nodeType":"YulFunctionCall","src":"37869:18:20"},"variableNames":[{"name":"tail","nativeSrc":"37861:4:20","nodeType":"YulIdentifier","src":"37861:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"37908:9:20","nodeType":"YulIdentifier","src":"37908:9:20"},{"kind":"number","nativeSrc":"37919:1:20","nodeType":"YulLiteral","src":"37919:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"37904:3:20","nodeType":"YulIdentifier","src":"37904:3:20"},"nativeSrc":"37904:17:20","nodeType":"YulFunctionCall","src":"37904:17:20"},{"arguments":[{"name":"tail","nativeSrc":"37927:4:20","nodeType":"YulIdentifier","src":"37927:4:20"},{"name":"headStart","nativeSrc":"37933:9:20","nodeType":"YulIdentifier","src":"37933:9:20"}],"functionName":{"name":"sub","nativeSrc":"37923:3:20","nodeType":"YulIdentifier","src":"37923:3:20"},"nativeSrc":"37923:20:20","nodeType":"YulFunctionCall","src":"37923:20:20"}],"functionName":{"name":"mstore","nativeSrc":"37897:6:20","nodeType":"YulIdentifier","src":"37897:6:20"},"nativeSrc":"37897:47:20","nodeType":"YulFunctionCall","src":"37897:47:20"},"nativeSrc":"37897:47:20","nodeType":"YulExpressionStatement","src":"37897:47:20"},{"nativeSrc":"37953:139:20","nodeType":"YulAssignment","src":"37953:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"38087:4:20","nodeType":"YulIdentifier","src":"38087:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nativeSrc":"37961:124:20","nodeType":"YulIdentifier","src":"37961:124:20"},"nativeSrc":"37961:131:20","nodeType":"YulFunctionCall","src":"37961:131:20"},"variableNames":[{"name":"tail","nativeSrc":"37953:4:20","nodeType":"YulIdentifier","src":"37953:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"37680:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"37831:9:20","nodeType":"YulTypedName","src":"37831:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"37846:4:20","nodeType":"YulTypedName","src":"37846:4:20","type":""}],"src":"37680:419:20"},{"body":{"nativeSrc":"38211:126:20","nodeType":"YulBlock","src":"38211:126:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"38233:6:20","nodeType":"YulIdentifier","src":"38233:6:20"},{"kind":"number","nativeSrc":"38241:1:20","nodeType":"YulLiteral","src":"38241:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38229:3:20","nodeType":"YulIdentifier","src":"38229:3:20"},"nativeSrc":"38229:14:20","nodeType":"YulFunctionCall","src":"38229:14:20"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"38245:34:20","nodeType":"YulLiteral","src":"38245:34:20","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"38222:6:20","nodeType":"YulIdentifier","src":"38222:6:20"},"nativeSrc":"38222:58:20","nodeType":"YulFunctionCall","src":"38222:58:20"},"nativeSrc":"38222:58:20","nodeType":"YulExpressionStatement","src":"38222:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"38301:6:20","nodeType":"YulIdentifier","src":"38301:6:20"},{"kind":"number","nativeSrc":"38309:2:20","nodeType":"YulLiteral","src":"38309:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38297:3:20","nodeType":"YulIdentifier","src":"38297:3:20"},"nativeSrc":"38297:15:20","nodeType":"YulFunctionCall","src":"38297:15:20"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"38314:15:20","nodeType":"YulLiteral","src":"38314:15:20","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"38290:6:20","nodeType":"YulIdentifier","src":"38290:6:20"},"nativeSrc":"38290:40:20","nodeType":"YulFunctionCall","src":"38290:40:20"},"nativeSrc":"38290:40:20","nodeType":"YulExpressionStatement","src":"38290:40:20"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nativeSrc":"38105:232:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"38203:6:20","nodeType":"YulTypedName","src":"38203:6:20","type":""}],"src":"38105:232:20"},{"body":{"nativeSrc":"38489:220:20","nodeType":"YulBlock","src":"38489:220:20","statements":[{"nativeSrc":"38499:74:20","nodeType":"YulAssignment","src":"38499:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"38565:3:20","nodeType":"YulIdentifier","src":"38565:3:20"},{"kind":"number","nativeSrc":"38570:2:20","nodeType":"YulLiteral","src":"38570:2:20","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"38506:58:20","nodeType":"YulIdentifier","src":"38506:58:20"},"nativeSrc":"38506:67:20","nodeType":"YulFunctionCall","src":"38506:67:20"},"variableNames":[{"name":"pos","nativeSrc":"38499:3:20","nodeType":"YulIdentifier","src":"38499:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"38671:3:20","nodeType":"YulIdentifier","src":"38671:3:20"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nativeSrc":"38582:88:20","nodeType":"YulIdentifier","src":"38582:88:20"},"nativeSrc":"38582:93:20","nodeType":"YulFunctionCall","src":"38582:93:20"},"nativeSrc":"38582:93:20","nodeType":"YulExpressionStatement","src":"38582:93:20"},{"nativeSrc":"38684:19:20","nodeType":"YulAssignment","src":"38684:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"38695:3:20","nodeType":"YulIdentifier","src":"38695:3:20"},{"kind":"number","nativeSrc":"38700:2:20","nodeType":"YulLiteral","src":"38700:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"38691:3:20","nodeType":"YulIdentifier","src":"38691:3:20"},"nativeSrc":"38691:12:20","nodeType":"YulFunctionCall","src":"38691:12:20"},"variableNames":[{"name":"end","nativeSrc":"38684:3:20","nodeType":"YulIdentifier","src":"38684:3:20"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nativeSrc":"38343:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"38477:3:20","nodeType":"YulTypedName","src":"38477:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"38485:3:20","nodeType":"YulTypedName","src":"38485:3:20","type":""}],"src":"38343:366:20"},{"body":{"nativeSrc":"38886:248:20","nodeType":"YulBlock","src":"38886:248:20","statements":[{"nativeSrc":"38896:26:20","nodeType":"YulAssignment","src":"38896:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"38908:9:20","nodeType":"YulIdentifier","src":"38908:9:20"},{"kind":"number","nativeSrc":"38919:2:20","nodeType":"YulLiteral","src":"38919:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"38904:3:20","nodeType":"YulIdentifier","src":"38904:3:20"},"nativeSrc":"38904:18:20","nodeType":"YulFunctionCall","src":"38904:18:20"},"variableNames":[{"name":"tail","nativeSrc":"38896:4:20","nodeType":"YulIdentifier","src":"38896:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"38943:9:20","nodeType":"YulIdentifier","src":"38943:9:20"},{"kind":"number","nativeSrc":"38954:1:20","nodeType":"YulLiteral","src":"38954:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"38939:3:20","nodeType":"YulIdentifier","src":"38939:3:20"},"nativeSrc":"38939:17:20","nodeType":"YulFunctionCall","src":"38939:17:20"},{"arguments":[{"name":"tail","nativeSrc":"38962:4:20","nodeType":"YulIdentifier","src":"38962:4:20"},{"name":"headStart","nativeSrc":"38968:9:20","nodeType":"YulIdentifier","src":"38968:9:20"}],"functionName":{"name":"sub","nativeSrc":"38958:3:20","nodeType":"YulIdentifier","src":"38958:3:20"},"nativeSrc":"38958:20:20","nodeType":"YulFunctionCall","src":"38958:20:20"}],"functionName":{"name":"mstore","nativeSrc":"38932:6:20","nodeType":"YulIdentifier","src":"38932:6:20"},"nativeSrc":"38932:47:20","nodeType":"YulFunctionCall","src":"38932:47:20"},"nativeSrc":"38932:47:20","nodeType":"YulExpressionStatement","src":"38932:47:20"},{"nativeSrc":"38988:139:20","nodeType":"YulAssignment","src":"38988:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"39122:4:20","nodeType":"YulIdentifier","src":"39122:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nativeSrc":"38996:124:20","nodeType":"YulIdentifier","src":"38996:124:20"},"nativeSrc":"38996:131:20","nodeType":"YulFunctionCall","src":"38996:131:20"},"variableNames":[{"name":"tail","nativeSrc":"38988:4:20","nodeType":"YulIdentifier","src":"38988:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"38715:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38866:9:20","nodeType":"YulTypedName","src":"38866:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38881:4:20","nodeType":"YulTypedName","src":"38881:4:20","type":""}],"src":"38715:419:20"},{"body":{"nativeSrc":"39198:40:20","nodeType":"YulBlock","src":"39198:40:20","statements":[{"nativeSrc":"39209:22:20","nodeType":"YulAssignment","src":"39209:22:20","value":{"arguments":[{"name":"value","nativeSrc":"39225:5:20","nodeType":"YulIdentifier","src":"39225:5:20"}],"functionName":{"name":"mload","nativeSrc":"39219:5:20","nodeType":"YulIdentifier","src":"39219:5:20"},"nativeSrc":"39219:12:20","nodeType":"YulFunctionCall","src":"39219:12:20"},"variableNames":[{"name":"length","nativeSrc":"39209:6:20","nodeType":"YulIdentifier","src":"39209:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"39140:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39181:5:20","nodeType":"YulTypedName","src":"39181:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"39191:6:20","nodeType":"YulTypedName","src":"39191:6:20","type":""}],"src":"39140:98:20"},{"body":{"nativeSrc":"39357:34:20","nodeType":"YulBlock","src":"39357:34:20","statements":[{"nativeSrc":"39367:18:20","nodeType":"YulAssignment","src":"39367:18:20","value":{"name":"pos","nativeSrc":"39382:3:20","nodeType":"YulIdentifier","src":"39382:3:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"39367:11:20","nodeType":"YulIdentifier","src":"39367:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"39244:147:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"39329:3:20","nodeType":"YulTypedName","src":"39329:3:20","type":""},{"name":"length","nativeSrc":"39334:6:20","nodeType":"YulTypedName","src":"39334:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"39345:11:20","nodeType":"YulTypedName","src":"39345:11:20","type":""}],"src":"39244:147:20"},{"body":{"nativeSrc":"39459:186:20","nodeType":"YulBlock","src":"39459:186:20","statements":[{"nativeSrc":"39470:10:20","nodeType":"YulVariableDeclaration","src":"39470:10:20","value":{"kind":"number","nativeSrc":"39479:1:20","nodeType":"YulLiteral","src":"39479:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"39474:1:20","nodeType":"YulTypedName","src":"39474:1:20","type":""}]},{"body":{"nativeSrc":"39539:63:20","nodeType":"YulBlock","src":"39539:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"39564:3:20","nodeType":"YulIdentifier","src":"39564:3:20"},{"name":"i","nativeSrc":"39569:1:20","nodeType":"YulIdentifier","src":"39569:1:20"}],"functionName":{"name":"add","nativeSrc":"39560:3:20","nodeType":"YulIdentifier","src":"39560:3:20"},"nativeSrc":"39560:11:20","nodeType":"YulFunctionCall","src":"39560:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"39583:3:20","nodeType":"YulIdentifier","src":"39583:3:20"},{"name":"i","nativeSrc":"39588:1:20","nodeType":"YulIdentifier","src":"39588:1:20"}],"functionName":{"name":"add","nativeSrc":"39579:3:20","nodeType":"YulIdentifier","src":"39579:3:20"},"nativeSrc":"39579:11:20","nodeType":"YulFunctionCall","src":"39579:11:20"}],"functionName":{"name":"mload","nativeSrc":"39573:5:20","nodeType":"YulIdentifier","src":"39573:5:20"},"nativeSrc":"39573:18:20","nodeType":"YulFunctionCall","src":"39573:18:20"}],"functionName":{"name":"mstore","nativeSrc":"39553:6:20","nodeType":"YulIdentifier","src":"39553:6:20"},"nativeSrc":"39553:39:20","nodeType":"YulFunctionCall","src":"39553:39:20"},"nativeSrc":"39553:39:20","nodeType":"YulExpressionStatement","src":"39553:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"39500:1:20","nodeType":"YulIdentifier","src":"39500:1:20"},{"name":"length","nativeSrc":"39503:6:20","nodeType":"YulIdentifier","src":"39503:6:20"}],"functionName":{"name":"lt","nativeSrc":"39497:2:20","nodeType":"YulIdentifier","src":"39497:2:20"},"nativeSrc":"39497:13:20","nodeType":"YulFunctionCall","src":"39497:13:20"},"nativeSrc":"39489:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"39511:19:20","nodeType":"YulBlock","src":"39511:19:20","statements":[{"nativeSrc":"39513:15:20","nodeType":"YulAssignment","src":"39513:15:20","value":{"arguments":[{"name":"i","nativeSrc":"39522:1:20","nodeType":"YulIdentifier","src":"39522:1:20"},{"kind":"number","nativeSrc":"39525:2:20","nodeType":"YulLiteral","src":"39525:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39518:3:20","nodeType":"YulIdentifier","src":"39518:3:20"},"nativeSrc":"39518:10:20","nodeType":"YulFunctionCall","src":"39518:10:20"},"variableNames":[{"name":"i","nativeSrc":"39513:1:20","nodeType":"YulIdentifier","src":"39513:1:20"}]}]},"pre":{"nativeSrc":"39493:3:20","nodeType":"YulBlock","src":"39493:3:20","statements":[]},"src":"39489:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"39622:3:20","nodeType":"YulIdentifier","src":"39622:3:20"},{"name":"length","nativeSrc":"39627:6:20","nodeType":"YulIdentifier","src":"39627:6:20"}],"functionName":{"name":"add","nativeSrc":"39618:3:20","nodeType":"YulIdentifier","src":"39618:3:20"},"nativeSrc":"39618:16:20","nodeType":"YulFunctionCall","src":"39618:16:20"},{"kind":"number","nativeSrc":"39636:1:20","nodeType":"YulLiteral","src":"39636:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"39611:6:20","nodeType":"YulIdentifier","src":"39611:6:20"},"nativeSrc":"39611:27:20","nodeType":"YulFunctionCall","src":"39611:27:20"},"nativeSrc":"39611:27:20","nodeType":"YulExpressionStatement","src":"39611:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"39397:248:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"39441:3:20","nodeType":"YulTypedName","src":"39441:3:20","type":""},{"name":"dst","nativeSrc":"39446:3:20","nodeType":"YulTypedName","src":"39446:3:20","type":""},{"name":"length","nativeSrc":"39451:6:20","nodeType":"YulTypedName","src":"39451:6:20","type":""}],"src":"39397:248:20"},{"body":{"nativeSrc":"39759:278:20","nodeType":"YulBlock","src":"39759:278:20","statements":[{"nativeSrc":"39769:52:20","nodeType":"YulVariableDeclaration","src":"39769:52:20","value":{"arguments":[{"name":"value","nativeSrc":"39815:5:20","nodeType":"YulIdentifier","src":"39815:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"39783:31:20","nodeType":"YulIdentifier","src":"39783:31:20"},"nativeSrc":"39783:38:20","nodeType":"YulFunctionCall","src":"39783:38:20"},"variables":[{"name":"length","nativeSrc":"39773:6:20","nodeType":"YulTypedName","src":"39773:6:20","type":""}]},{"nativeSrc":"39830:95:20","nodeType":"YulAssignment","src":"39830:95:20","value":{"arguments":[{"name":"pos","nativeSrc":"39913:3:20","nodeType":"YulIdentifier","src":"39913:3:20"},{"name":"length","nativeSrc":"39918:6:20","nodeType":"YulIdentifier","src":"39918:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"39837:75:20","nodeType":"YulIdentifier","src":"39837:75:20"},"nativeSrc":"39837:88:20","nodeType":"YulFunctionCall","src":"39837:88:20"},"variableNames":[{"name":"pos","nativeSrc":"39830:3:20","nodeType":"YulIdentifier","src":"39830:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"39973:5:20","nodeType":"YulIdentifier","src":"39973:5:20"},{"kind":"number","nativeSrc":"39980:4:20","nodeType":"YulLiteral","src":"39980:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"39969:3:20","nodeType":"YulIdentifier","src":"39969:3:20"},"nativeSrc":"39969:16:20","nodeType":"YulFunctionCall","src":"39969:16:20"},{"name":"pos","nativeSrc":"39987:3:20","nodeType":"YulIdentifier","src":"39987:3:20"},{"name":"length","nativeSrc":"39992:6:20","nodeType":"YulIdentifier","src":"39992:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"39934:34:20","nodeType":"YulIdentifier","src":"39934:34:20"},"nativeSrc":"39934:65:20","nodeType":"YulFunctionCall","src":"39934:65:20"},"nativeSrc":"39934:65:20","nodeType":"YulExpressionStatement","src":"39934:65:20"},{"nativeSrc":"40008:23:20","nodeType":"YulAssignment","src":"40008:23:20","value":{"arguments":[{"name":"pos","nativeSrc":"40019:3:20","nodeType":"YulIdentifier","src":"40019:3:20"},{"name":"length","nativeSrc":"40024:6:20","nodeType":"YulIdentifier","src":"40024:6:20"}],"functionName":{"name":"add","nativeSrc":"40015:3:20","nodeType":"YulIdentifier","src":"40015:3:20"},"nativeSrc":"40015:16:20","nodeType":"YulFunctionCall","src":"40015:16:20"},"variableNames":[{"name":"end","nativeSrc":"40008:3:20","nodeType":"YulIdentifier","src":"40008:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"39651:386:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"39740:5:20","nodeType":"YulTypedName","src":"39740:5:20","type":""},{"name":"pos","nativeSrc":"39747:3:20","nodeType":"YulTypedName","src":"39747:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"39755:3:20","nodeType":"YulTypedName","src":"39755:3:20","type":""}],"src":"39651:386:20"},{"body":{"nativeSrc":"40177:137:20","nodeType":"YulBlock","src":"40177:137:20","statements":[{"nativeSrc":"40188:100:20","nodeType":"YulAssignment","src":"40188:100:20","value":{"arguments":[{"name":"value0","nativeSrc":"40275:6:20","nodeType":"YulIdentifier","src":"40275:6:20"},{"name":"pos","nativeSrc":"40284:3:20","nodeType":"YulIdentifier","src":"40284:3:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"40195:79:20","nodeType":"YulIdentifier","src":"40195:79:20"},"nativeSrc":"40195:93:20","nodeType":"YulFunctionCall","src":"40195:93:20"},"variableNames":[{"name":"pos","nativeSrc":"40188:3:20","nodeType":"YulIdentifier","src":"40188:3:20"}]},{"nativeSrc":"40298:10:20","nodeType":"YulAssignment","src":"40298:10:20","value":{"name":"pos","nativeSrc":"40305:3:20","nodeType":"YulIdentifier","src":"40305:3:20"},"variableNames":[{"name":"end","nativeSrc":"40298:3:20","nodeType":"YulIdentifier","src":"40298:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"40043:271:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40156:3:20","nodeType":"YulTypedName","src":"40156:3:20","type":""},{"name":"value0","nativeSrc":"40162:6:20","nodeType":"YulTypedName","src":"40162:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40173:3:20","nodeType":"YulTypedName","src":"40173:3:20","type":""}],"src":"40043:271:20"},{"body":{"nativeSrc":"40426:73:20","nodeType":"YulBlock","src":"40426:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"40448:6:20","nodeType":"YulIdentifier","src":"40448:6:20"},{"kind":"number","nativeSrc":"40456:1:20","nodeType":"YulLiteral","src":"40456:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40444:3:20","nodeType":"YulIdentifier","src":"40444:3:20"},"nativeSrc":"40444:14:20","nodeType":"YulFunctionCall","src":"40444:14:20"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"40460:31:20","nodeType":"YulLiteral","src":"40460:31:20","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"40437:6:20","nodeType":"YulIdentifier","src":"40437:6:20"},"nativeSrc":"40437:55:20","nodeType":"YulFunctionCall","src":"40437:55:20"},"nativeSrc":"40437:55:20","nodeType":"YulExpressionStatement","src":"40437:55:20"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nativeSrc":"40320:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"40418:6:20","nodeType":"YulTypedName","src":"40418:6:20","type":""}],"src":"40320:179:20"},{"body":{"nativeSrc":"40651:220:20","nodeType":"YulBlock","src":"40651:220:20","statements":[{"nativeSrc":"40661:74:20","nodeType":"YulAssignment","src":"40661:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"40727:3:20","nodeType":"YulIdentifier","src":"40727:3:20"},{"kind":"number","nativeSrc":"40732:2:20","nodeType":"YulLiteral","src":"40732:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"40668:58:20","nodeType":"YulIdentifier","src":"40668:58:20"},"nativeSrc":"40668:67:20","nodeType":"YulFunctionCall","src":"40668:67:20"},"variableNames":[{"name":"pos","nativeSrc":"40661:3:20","nodeType":"YulIdentifier","src":"40661:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"40833:3:20","nodeType":"YulIdentifier","src":"40833:3:20"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nativeSrc":"40744:88:20","nodeType":"YulIdentifier","src":"40744:88:20"},"nativeSrc":"40744:93:20","nodeType":"YulFunctionCall","src":"40744:93:20"},"nativeSrc":"40744:93:20","nodeType":"YulExpressionStatement","src":"40744:93:20"},{"nativeSrc":"40846:19:20","nodeType":"YulAssignment","src":"40846:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"40857:3:20","nodeType":"YulIdentifier","src":"40857:3:20"},{"kind":"number","nativeSrc":"40862:2:20","nodeType":"YulLiteral","src":"40862:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40853:3:20","nodeType":"YulIdentifier","src":"40853:3:20"},"nativeSrc":"40853:12:20","nodeType":"YulFunctionCall","src":"40853:12:20"},"variableNames":[{"name":"end","nativeSrc":"40846:3:20","nodeType":"YulIdentifier","src":"40846:3:20"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nativeSrc":"40505:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"40639:3:20","nodeType":"YulTypedName","src":"40639:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"40647:3:20","nodeType":"YulTypedName","src":"40647:3:20","type":""}],"src":"40505:366:20"},{"body":{"nativeSrc":"41048:248:20","nodeType":"YulBlock","src":"41048:248:20","statements":[{"nativeSrc":"41058:26:20","nodeType":"YulAssignment","src":"41058:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"41070:9:20","nodeType":"YulIdentifier","src":"41070:9:20"},{"kind":"number","nativeSrc":"41081:2:20","nodeType":"YulLiteral","src":"41081:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41066:3:20","nodeType":"YulIdentifier","src":"41066:3:20"},"nativeSrc":"41066:18:20","nodeType":"YulFunctionCall","src":"41066:18:20"},"variableNames":[{"name":"tail","nativeSrc":"41058:4:20","nodeType":"YulIdentifier","src":"41058:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41105:9:20","nodeType":"YulIdentifier","src":"41105:9:20"},{"kind":"number","nativeSrc":"41116:1:20","nodeType":"YulLiteral","src":"41116:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41101:3:20","nodeType":"YulIdentifier","src":"41101:3:20"},"nativeSrc":"41101:17:20","nodeType":"YulFunctionCall","src":"41101:17:20"},{"arguments":[{"name":"tail","nativeSrc":"41124:4:20","nodeType":"YulIdentifier","src":"41124:4:20"},{"name":"headStart","nativeSrc":"41130:9:20","nodeType":"YulIdentifier","src":"41130:9:20"}],"functionName":{"name":"sub","nativeSrc":"41120:3:20","nodeType":"YulIdentifier","src":"41120:3:20"},"nativeSrc":"41120:20:20","nodeType":"YulFunctionCall","src":"41120:20:20"}],"functionName":{"name":"mstore","nativeSrc":"41094:6:20","nodeType":"YulIdentifier","src":"41094:6:20"},"nativeSrc":"41094:47:20","nodeType":"YulFunctionCall","src":"41094:47:20"},"nativeSrc":"41094:47:20","nodeType":"YulExpressionStatement","src":"41094:47:20"},{"nativeSrc":"41150:139:20","nodeType":"YulAssignment","src":"41150:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"41284:4:20","nodeType":"YulIdentifier","src":"41284:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nativeSrc":"41158:124:20","nodeType":"YulIdentifier","src":"41158:124:20"},"nativeSrc":"41158:131:20","nodeType":"YulFunctionCall","src":"41158:131:20"},"variableNames":[{"name":"tail","nativeSrc":"41150:4:20","nodeType":"YulIdentifier","src":"41150:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"40877:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41028:9:20","nodeType":"YulTypedName","src":"41028:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41043:4:20","nodeType":"YulTypedName","src":"41043:4:20","type":""}],"src":"40877:419:20"},{"body":{"nativeSrc":"41361:40:20","nodeType":"YulBlock","src":"41361:40:20","statements":[{"nativeSrc":"41372:22:20","nodeType":"YulAssignment","src":"41372:22:20","value":{"arguments":[{"name":"value","nativeSrc":"41388:5:20","nodeType":"YulIdentifier","src":"41388:5:20"}],"functionName":{"name":"mload","nativeSrc":"41382:5:20","nodeType":"YulIdentifier","src":"41382:5:20"},"nativeSrc":"41382:12:20","nodeType":"YulFunctionCall","src":"41382:12:20"},"variableNames":[{"name":"length","nativeSrc":"41372:6:20","nodeType":"YulIdentifier","src":"41372:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"41302:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41344:5:20","nodeType":"YulTypedName","src":"41344:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"41354:6:20","nodeType":"YulTypedName","src":"41354:6:20","type":""}],"src":"41302:99:20"},{"body":{"nativeSrc":"41499:285:20","nodeType":"YulBlock","src":"41499:285:20","statements":[{"nativeSrc":"41509:53:20","nodeType":"YulVariableDeclaration","src":"41509:53:20","value":{"arguments":[{"name":"value","nativeSrc":"41556:5:20","nodeType":"YulIdentifier","src":"41556:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"41523:32:20","nodeType":"YulIdentifier","src":"41523:32:20"},"nativeSrc":"41523:39:20","nodeType":"YulFunctionCall","src":"41523:39:20"},"variables":[{"name":"length","nativeSrc":"41513:6:20","nodeType":"YulTypedName","src":"41513:6:20","type":""}]},{"nativeSrc":"41571:78:20","nodeType":"YulAssignment","src":"41571:78:20","value":{"arguments":[{"name":"pos","nativeSrc":"41637:3:20","nodeType":"YulIdentifier","src":"41637:3:20"},{"name":"length","nativeSrc":"41642:6:20","nodeType":"YulIdentifier","src":"41642:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"41578:58:20","nodeType":"YulIdentifier","src":"41578:58:20"},"nativeSrc":"41578:71:20","nodeType":"YulFunctionCall","src":"41578:71:20"},"variableNames":[{"name":"pos","nativeSrc":"41571:3:20","nodeType":"YulIdentifier","src":"41571:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"41697:5:20","nodeType":"YulIdentifier","src":"41697:5:20"},{"kind":"number","nativeSrc":"41704:4:20","nodeType":"YulLiteral","src":"41704:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"41693:3:20","nodeType":"YulIdentifier","src":"41693:3:20"},"nativeSrc":"41693:16:20","nodeType":"YulFunctionCall","src":"41693:16:20"},{"name":"pos","nativeSrc":"41711:3:20","nodeType":"YulIdentifier","src":"41711:3:20"},{"name":"length","nativeSrc":"41716:6:20","nodeType":"YulIdentifier","src":"41716:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"41658:34:20","nodeType":"YulIdentifier","src":"41658:34:20"},"nativeSrc":"41658:65:20","nodeType":"YulFunctionCall","src":"41658:65:20"},"nativeSrc":"41658:65:20","nodeType":"YulExpressionStatement","src":"41658:65:20"},{"nativeSrc":"41732:46:20","nodeType":"YulAssignment","src":"41732:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"41743:3:20","nodeType":"YulIdentifier","src":"41743:3:20"},{"arguments":[{"name":"length","nativeSrc":"41770:6:20","nodeType":"YulIdentifier","src":"41770:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"41748:21:20","nodeType":"YulIdentifier","src":"41748:21:20"},"nativeSrc":"41748:29:20","nodeType":"YulFunctionCall","src":"41748:29:20"}],"functionName":{"name":"add","nativeSrc":"41739:3:20","nodeType":"YulIdentifier","src":"41739:3:20"},"nativeSrc":"41739:39:20","nodeType":"YulFunctionCall","src":"41739:39:20"},"variableNames":[{"name":"end","nativeSrc":"41732:3:20","nodeType":"YulIdentifier","src":"41732:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"41407:377:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"41480:5:20","nodeType":"YulTypedName","src":"41480:5:20","type":""},{"name":"pos","nativeSrc":"41487:3:20","nodeType":"YulTypedName","src":"41487:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"41495:3:20","nodeType":"YulTypedName","src":"41495:3:20","type":""}],"src":"41407:377:20"},{"body":{"nativeSrc":"41908:195:20","nodeType":"YulBlock","src":"41908:195:20","statements":[{"nativeSrc":"41918:26:20","nodeType":"YulAssignment","src":"41918:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"41930:9:20","nodeType":"YulIdentifier","src":"41930:9:20"},{"kind":"number","nativeSrc":"41941:2:20","nodeType":"YulLiteral","src":"41941:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41926:3:20","nodeType":"YulIdentifier","src":"41926:3:20"},"nativeSrc":"41926:18:20","nodeType":"YulFunctionCall","src":"41926:18:20"},"variableNames":[{"name":"tail","nativeSrc":"41918:4:20","nodeType":"YulIdentifier","src":"41918:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"41965:9:20","nodeType":"YulIdentifier","src":"41965:9:20"},{"kind":"number","nativeSrc":"41976:1:20","nodeType":"YulLiteral","src":"41976:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41961:3:20","nodeType":"YulIdentifier","src":"41961:3:20"},"nativeSrc":"41961:17:20","nodeType":"YulFunctionCall","src":"41961:17:20"},{"arguments":[{"name":"tail","nativeSrc":"41984:4:20","nodeType":"YulIdentifier","src":"41984:4:20"},{"name":"headStart","nativeSrc":"41990:9:20","nodeType":"YulIdentifier","src":"41990:9:20"}],"functionName":{"name":"sub","nativeSrc":"41980:3:20","nodeType":"YulIdentifier","src":"41980:3:20"},"nativeSrc":"41980:20:20","nodeType":"YulFunctionCall","src":"41980:20:20"}],"functionName":{"name":"mstore","nativeSrc":"41954:6:20","nodeType":"YulIdentifier","src":"41954:6:20"},"nativeSrc":"41954:47:20","nodeType":"YulFunctionCall","src":"41954:47:20"},"nativeSrc":"41954:47:20","nodeType":"YulExpressionStatement","src":"41954:47:20"},{"nativeSrc":"42010:86:20","nodeType":"YulAssignment","src":"42010:86:20","value":{"arguments":[{"name":"value0","nativeSrc":"42082:6:20","nodeType":"YulIdentifier","src":"42082:6:20"},{"name":"tail","nativeSrc":"42091:4:20","nodeType":"YulIdentifier","src":"42091:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"42018:63:20","nodeType":"YulIdentifier","src":"42018:63:20"},"nativeSrc":"42018:78:20","nodeType":"YulFunctionCall","src":"42018:78:20"},"variableNames":[{"name":"tail","nativeSrc":"42010:4:20","nodeType":"YulIdentifier","src":"42010:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"41790:313:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41880:9:20","nodeType":"YulTypedName","src":"41880:9:20","type":""},{"name":"value0","nativeSrc":"41892:6:20","nodeType":"YulTypedName","src":"41892:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41903:4:20","nodeType":"YulTypedName","src":"41903:4:20","type":""}],"src":"41790:313:20"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Auction.AuctionItem -> struct Auction.AuctionItem\n    function abi_encode_t_struct$_AuctionItem_$2095_memory_ptr_to_t_struct$_AuctionItem_$2095_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // nftContract\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // endTime\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // ended\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_AuctionItem_$2095_memory_ptr__to_t_struct$_AuctionItem_$2095_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_struct$_AuctionItem_$2095_memory_ptr_to_t_struct$_AuctionItem_$2095_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PriceOracle_$2956_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PriceOracle_$2956_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PriceOracle_$2956_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PriceOracle_$2956__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PriceOracle_$2956_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct Auction.Bid -> struct Auction.Bid\n    function abi_encode_t_struct$_Bid_$2104_memory_ptr_to_t_struct$_Bid_$2104_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // bidder\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Bid_$2104_memory_ptr__to_t_struct$_Bid_$2104_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Bid_$2104_memory_ptr_to_t_struct$_Bid_$2104_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"active proxy\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"UUPSUpgradeable: must not be cal\")\n\n        mstore(add(memPtr, 32), \"led through delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid NFT contract address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9aed7b0616d8c9fe14374e69e4744bf67c7a7af9c4d77700b9a659bf9f45ad31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid seller address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab7cc7a62fcae0ff4cfdce30bdb796365b92e6d1352e46d2a397b50773f88be4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be in the future\")\n\n    }\n\n    function abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"End time must be after start tim\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price oracle address\")\n\n    }\n\n    function abi_encode_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a62bca163e9e1fc0f951df846833f8bfc3c56cfef7b8c39283253e65543148a3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbc0b651c4d6c1d58cddad3e671c643dc0dc3905254185a02eb2d748d76eead2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36020d7b7b79be3186d0224484952c41e479aaf134eacdd764b3d17624762006_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56b97bcc53ee0c0e9403b910ca18980144503ea7aa8dd9200096ebdea6941df5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4400785be16e93f4f6825a1055c70d726e691267818ca31972681c95f3ddb570_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH not accepted for ERC20 bids\")\n\n    }\n\n    function abi_encode_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14b9847649b7bdf8cdf89016125bc9443bb96e688bf058ca39da362bb8809227_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid must be higher than current \")\n\n        mstore(add(memPtr, 32), \"highest bid\")\n\n    }\n\n    function abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3338389faa2ce2db86168b7174563b79cecf63db26e91789532b92e2004a32b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction not ended yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5a8b4997787508a7e29e0c8c48f5f44100773184f407c7bb05898900b4d9cc00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: new implementati\")\n\n        mstore(add(memPtr, 32), \"on is not UUPS\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: unsupported prox\")\n\n        mstore(add(memPtr, 32), \"iableUUID\")\n\n    }\n\n    function abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"733":[{"length":32,"start":1066},{"length":32,"start":1208},{"length":32,"start":1676},{"length":32,"start":1818},{"length":32,"start":1994}]},"linkReferences":{},"object":"6080604052600436106100e15760003560e01c8063871b62361161007f578063d57bde7911610059578063d57bde7914610279578063d98b9bb5146102a7578063f2fde38b146102c3578063fe67a54b146102ec576100e8565b8063871b6236146101f55780638da5cb5b1461021e578063c2c042ca14610249576100e8565b80634979440a116100bb5780634979440a1461016c5780634f1ef2861461019757806352d1902d146101b3578063715018a6146101de576100e8565b806304de63a5146100ed5780632630c12f146101185780633659cfe614610143576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b50610102610303565b60405161010f919061235e565b60405180910390f35b34801561012457600080fd5b5061012d610402565b60405161013a91906123d8565b60405180910390f35b34801561014f57600080fd5b5061016a60048036038101906101659190612433565b610428565b005b34801561017857600080fd5b506101816105b0565b60405161018e91906124b5565b60405180910390f35b6101b160048036038101906101ac9190612616565b61068a565b005b3480156101bf57600080fd5b506101c86107c6565b6040516101d5919061268b565b60405180910390f35b3480156101ea57600080fd5b506101f361087f565b005b34801561020157600080fd5b5061021c600480360381019061021791906126d2565b610893565b005b34801561022a57600080fd5b50610233610d1f565b604051610240919061276e565b60405180910390f35b34801561025557600080fd5b5061025e610d49565b604051610270969594939291906127a7565b60405180910390f35b34801561028557600080fd5b5061028e610dc0565b60405161029e9493929190612808565b60405180910390f35b6102c160048036038101906102bc919061284d565b610e1e565b005b3480156102cf57600080fd5b506102ea60048036038101906102e59190612433565b6115d4565b005b3480156102f857600080fd5b50610301611657565b005b61030b6121b6565b60cd6040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff161515151581525050905090565b60d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16036104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90612910565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104f5611aac565b73ffffffffffffffffffffffffffffffffffffffff161461054b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610542906129a2565b60405180910390fd5b61055481611b03565b6105ad81600067ffffffffffffffff811115610573576105726124eb565b5b6040519080825280601f01601f1916602001820160405280156105a55781602001600182028036833780820191505090505b506000611b0e565b50565b6105b861221a565b60c96040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481525050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f90612910565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610757611aac565b73ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a4906129a2565b60405180910390fd5b6107b682611b03565b6107c282826001611b0e565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90612a34565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610887611c7c565b6108916000611cfa565b565b60008060019054906101000a900460ff161590508080156108c45750600160008054906101000a900460ff1660ff16105b806108f157506108d330611dc0565b1580156108f05750600160008054906101000a900460ff1660ff16145b5b610930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092790612ac6565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561096d576001600060016101000a81548160ff0219169083151502179055505b610975611de3565b61097d611e3c565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e390612b32565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290612b9e565b60405180910390fd5b42841015610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590612c0a565b60405180910390fd5b838311610ae0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad790612c9c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690612d08565b60405180910390fd5b6040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581525060cd60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050508160d360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d165760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610d0d9190612d70565b60405180910390a15b50505050505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60cd8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154908060050160009054906101000a900460ff16905086565b60c98060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154905084565b60cd60030154421015610e66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5d90612dd7565b60405180910390fd5b60cd60040154421115610eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea590612e43565b60405180910390fd5b60cd60050160009054906101000a900460ff1615610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612eaf565b60405180910390fd5b60008111610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90612f41565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106157813414610fbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb290612fad565b60405180910390fd5b60d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed6000846040518363ffffffff1660e01b8152600401611019929190612fcd565b602060405180830381865afa158015611036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105a919061300b565b90506111c6565b600034146110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90613084565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016110e1939291906130a4565b6020604051808303816000875af1158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190613107565b5060d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed84846040518363ffffffff1660e01b8152600401611182929190612fcd565b602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c3919061300b565b90505b60008060c96002015411156112a05760d360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f08a25ed60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b815260040161125c929190612fcd565b602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d919061300b565b90505b8082116112e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d9906131a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114da57600073ffffffffffffffffffffffffffffffffffffffff1660c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361140a5760c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60c9600201549081150290604051600060405180830381858888f19350505050158015611404573d6000803e3d6000fd5b506114d9565b60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b8152600401611494929190612fcd565b6020604051808303816000875af11580156114b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d79190613107565b505b5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525060c960008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015590505050505050565b6115dc611c7c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290613238565b60405180910390fd5b61165481611cfa565b50565b60cd60050160009054906101000a900460ff16156116aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a190612e43565b60405180910390fd5b60cd60040154421015806116d4575060cd6003015442101580156116d35750600060c960020154115b5b611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170a906132a4565b60405180910390fd5b600160cd60050160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff1660c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119eb5760cd60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060c960000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660cd600101546040518463ffffffff1660e01b8152600401611816939291906130a4565b600060405180830381600087803b15801561183057600080fd5b505af1158015611844573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff1660c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119175760cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60c9600201549081150290604051600060405180830381858888f19350505050158015611911573d6000803e3d6000fd5b506119e6565b60c960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660c9600201546040518363ffffffff1660e01b81526004016119a1929190612fcd565b6020604051808303816000875af11580156119c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e49190613107565b505b611aaa565b60cd60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060cd60020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660cd600101546040518463ffffffff1660e01b8152600401611a77939291906130a4565b600060405180830381600087803b158015611a9157600080fd5b505af1158015611aa5573d6000803e3d6000fd5b505050505b565b6000611ada7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e8d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611b0b611c7c565b50565b611b3a7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611e97565b60000160009054906101000a900460ff1615611b5e57611b5983611ea1565b611c77565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611bc657506040513d601f19601f82011682018060405250810190611bc391906132f0565b60015b611c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bfc9061338f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6190613421565b60405180910390fd5b50611c76838383611f5a565b5b505050565b611c84611f86565b73ffffffffffffffffffffffffffffffffffffffff16611ca2610d1f565b73ffffffffffffffffffffffffffffffffffffffff1614611cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cef9061348d565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e299061351f565b60405180910390fd5b611e3a611f8e565b565b600060019054906101000a900460ff16611e8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e829061351f565b60405180910390fd5b565b6000819050919050565b6000819050919050565b611eaa81611dc0565b611ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee0906135b1565b60405180910390fd5b80611f167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611e8d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611f6383611fef565b600082511180611f705750805b15611f8157611f7f838361203e565b505b505050565b600033905090565b600060019054906101000a900460ff16611fdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd49061351f565b60405180910390fd5b611fed611fe8611f86565b611cfa565b565b611ff881611ea1565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060612063838360405180606001604052806027815260200161372c6027913961206b565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516120959190613642565b600060405180830381855af49150503d80600081146120d0576040519150601f19603f3d011682016040523d82523d6000602084013e6120d5565b606091505b50915091506120e6868383876120f1565b925050509392505050565b6060831561215357600083510361214b5761210b85611dc0565b61214a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612141906136a5565b60405180910390fd5b5b82905061215e565b61215d8383612166565b5b949350505050565b6000825111156121795781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ad9190613709565b60405180910390fd5b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122998261226e565b9050919050565b6122a98161228e565b82525050565b6000819050919050565b6122c2816122af565b82525050565b60008115159050919050565b6122dd816122c8565b82525050565b60c0820160008201516122f960008501826122a0565b50602082015161230c60208501826122b9565b50604082015161231f60408501826122a0565b50606082015161233260608501826122b9565b50608082015161234560808501826122b9565b5060a082015161235860a08501826122d4565b50505050565b600060c08201905061237360008301846122e3565b92915050565b6000819050919050565b600061239e6123996123948461226e565b612379565b61226e565b9050919050565b60006123b082612383565b9050919050565b60006123c2826123a5565b9050919050565b6123d2816123b7565b82525050565b60006020820190506123ed60008301846123c9565b92915050565b6000604051905090565b600080fd5b600080fd5b6124108161228e565b811461241b57600080fd5b50565b60008135905061242d81612407565b92915050565b600060208284031215612449576124486123fd565b5b60006124578482850161241e565b91505092915050565b60808201600082015161247660008501826122a0565b50602082015161248960208501826122a0565b50604082015161249c60408501826122b9565b5060608201516124af60608501826122b9565b50505050565b60006080820190506124ca6000830184612460565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612523826124da565b810181811067ffffffffffffffff82111715612542576125416124eb565b5b80604052505050565b60006125556123f3565b9050612561828261251a565b919050565b600067ffffffffffffffff821115612581576125806124eb565b5b61258a826124da565b9050602081019050919050565b82818337600083830152505050565b60006125b96125b484612566565b61254b565b9050828152602081018484840111156125d5576125d46124d5565b5b6125e0848285612597565b509392505050565b600082601f8301126125fd576125fc6124d0565b5b813561260d8482602086016125a6565b91505092915050565b6000806040838503121561262d5761262c6123fd565b5b600061263b8582860161241e565b925050602083013567ffffffffffffffff81111561265c5761265b612402565b5b612668858286016125e8565b9150509250929050565b6000819050919050565b61268581612672565b82525050565b60006020820190506126a0600083018461267c565b92915050565b6126af816122af565b81146126ba57600080fd5b50565b6000813590506126cc816126a6565b92915050565b60008060008060008060c087890312156126ef576126ee6123fd565b5b60006126fd89828a0161241e565b965050602061270e89828a016126bd565b955050604061271f89828a0161241e565b945050606061273089828a016126bd565b935050608061274189828a016126bd565b92505060a061275289828a0161241e565b9150509295509295509295565b6127688161228e565b82525050565b6000602082019050612783600083018461275f565b92915050565b612792816122af565b82525050565b6127a1816122c8565b82525050565b600060c0820190506127bc600083018961275f565b6127c96020830188612789565b6127d6604083018761275f565b6127e36060830186612789565b6127f06080830185612789565b6127fd60a0830184612798565b979650505050505050565b600060808201905061281d600083018761275f565b61282a602083018661275f565b6128376040830185612789565b6128446060830184612789565b95945050505050565b60008060408385031215612864576128636123fd565b5b60006128728582860161241e565b9250506020612883858286016126bd565b9150509250929050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006128fa602c8361288d565b91506129058261289e565b604082019050919050565b60006020820190508181036000830152612929816128ed565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b600061298c602c8361288d565b915061299782612930565b604082019050919050565b600060208201905081810360008301526129bb8161297f565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000612a1e60388361288d565b9150612a29826129c2565b604082019050919050565b60006020820190508181036000830152612a4d81612a11565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612ab0602e8361288d565b9150612abb82612a54565b604082019050919050565b60006020820190508181036000830152612adf81612aa3565b9050919050565b7f496e76616c6964204e465420636f6e7472616374206164647265737300000000600082015250565b6000612b1c601c8361288d565b9150612b2782612ae6565b602082019050919050565b60006020820190508181036000830152612b4b81612b0f565b9050919050565b7f496e76616c69642073656c6c6572206164647265737300000000000000000000600082015250565b6000612b8860168361288d565b9150612b9382612b52565b602082019050919050565b60006020820190508181036000830152612bb781612b7b565b9050919050565b7f53746172742074696d65206d75737420626520696e2074686520667574757265600082015250565b6000612bf460208361288d565b9150612bff82612bbe565b602082019050919050565b60006020820190508181036000830152612c2381612be7565b9050919050565b7f456e642074696d65206d7573742062652061667465722073746172742074696d60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c8660218361288d565b9150612c9182612c2a565b604082019050919050565b60006020820190508181036000830152612cb581612c79565b9050919050565b7f496e76616c6964207072696365206f7261636c65206164647265737300000000600082015250565b6000612cf2601c8361288d565b9150612cfd82612cbc565b602082019050919050565b60006020820190508181036000830152612d2181612ce5565b9050919050565b6000819050919050565b600060ff82169050919050565b6000612d5a612d55612d5084612d28565b612379565b612d32565b9050919050565b612d6a81612d3f565b82525050565b6000602082019050612d856000830184612d61565b92915050565b7f41756374696f6e206e6f74207374617274656420796574000000000000000000600082015250565b6000612dc160178361288d565b9150612dcc82612d8b565b602082019050919050565b60006020820190508181036000830152612df081612db4565b9050919050565b7f41756374696f6e20616c726561647920656e6465640000000000000000000000600082015250565b6000612e2d60158361288d565b9150612e3882612df7565b602082019050919050565b60006020820190508181036000830152612e5c81612e20565b9050919050565b7f41756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b6000612e9960118361288d565b9150612ea482612e63565b602082019050919050565b60006020820190508181036000830152612ec881612e8c565b9050919050565b7f42696420616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000612f2b60248361288d565b9150612f3682612ecf565b604082019050919050565b60006020820190508181036000830152612f5a81612f1e565b9050919050565b7f45544820616d6f756e74206d69736d6174636800000000000000000000000000600082015250565b6000612f9760138361288d565b9150612fa282612f61565b602082019050919050565b60006020820190508181036000830152612fc681612f8a565b9050919050565b6000604082019050612fe2600083018561275f565b612fef6020830184612789565b9392505050565b600081519050613005816126a6565b92915050565b600060208284031215613021576130206123fd565b5b600061302f84828501612ff6565b91505092915050565b7f455448206e6f7420616363657074656420666f72204552433230206269647300600082015250565b600061306e601f8361288d565b915061307982613038565b602082019050919050565b6000602082019050818103600083015261309d81613061565b9050919050565b60006060820190506130b9600083018661275f565b6130c6602083018561275f565b6130d36040830184612789565b949350505050565b6130e4816122c8565b81146130ef57600080fd5b50565b600081519050613101816130db565b92915050565b60006020828403121561311d5761311c6123fd565b5b600061312b848285016130f2565b91505092915050565b7f426964206d75737420626520686967686572207468616e2063757272656e742060008201527f6869676865737420626964000000000000000000000000000000000000000000602082015250565b6000613190602b8361288d565b915061319b82613134565b604082019050919050565b600060208201905081810360008301526131bf81613183565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061322260268361288d565b915061322d826131c6565b604082019050919050565b6000602082019050818103600083015261325181613215565b9050919050565b7f41756374696f6e206e6f7420656e646564207965740000000000000000000000600082015250565b600061328e60158361288d565b915061329982613258565b602082019050919050565b600060208201905081810360008301526132bd81613281565b9050919050565b6132cd81612672565b81146132d857600080fd5b50565b6000815190506132ea816132c4565b92915050565b600060208284031215613306576133056123fd565b5b6000613314848285016132db565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000613379602e8361288d565b91506133848261331d565b604082019050919050565b600060208201905081810360008301526133a88161336c565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b600061340b60298361288d565b9150613416826133af565b604082019050919050565b6000602082019050818103600083015261343a816133fe565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061347760208361288d565b915061348282613441565b602082019050919050565b600060208201905081810360008301526134a68161346a565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613509602b8361288d565b9150613514826134ad565b604082019050919050565b60006020820190508181036000830152613538816134fc565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061359b602d8361288d565b91506135a68261353f565b604082019050919050565b600060208201905081810360008301526135ca8161358e565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156136055780820151818401526020810190506135ea565b60008484015250505050565b600061361c826135d1565b61362681856135dc565b93506136368185602086016135e7565b80840191505092915050565b600061364e8284613611565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061368f601d8361288d565b915061369a82613659565b602082019050919050565b600060208201905081810360008301526136be81613682565b9050919050565b600081519050919050565b60006136db826136c5565b6136e5818561288d565b93506136f58185602086016135e7565b6136fe816124da565b840191505092915050565b6000602082019050818103600083015261372381846136d0565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207d609c61f0ac0a557941610e4d1dc8d72d2170379ca81afe2c38fc5bc51d7be364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x871B6236 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD57BDE79 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD98B9BB5 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xFE67A54B EQ PUSH2 0x2EC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x871B6236 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xC2C042CA EQ PUSH2 0x249 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x4979440A GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x4979440A EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x4DE63A5 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x143 JUMPI PUSH2 0xE8 JUMP JUMPDEST CALLDATASIZE PUSH2 0xE8 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x235E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x268B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x87F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x26D2 JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25E PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x284D JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2433 JUMP JUMPDEST PUSH2 0x15D4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0x1657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4F5 PUSH2 0x1AAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x542 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x5AD DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x573 JUMPI PUSH2 0x572 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0x1B0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0x221A JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x757 PUSH2 0x1AAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x29A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x7C2 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1B0E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP1 PUSH2 0x2A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0x891 PUSH1 0x0 PUSH2 0x1CFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x8F1 JUMPI POP PUSH2 0x8D3 ADDRESS PUSH2 0x1DC0 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x8F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x927 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x96D JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x975 PUSH2 0x1DE3 JUMP JUMPDEST PUSH2 0x97D PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E3 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x2B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x2C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 GT PUSH2 0xAE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD7 SWAP1 PUSH2 0x2C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP1 PUSH2 0x2D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xCD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xD3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x2D70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xCD DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0xC9 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0xCD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF8 SWAP1 PUSH2 0x2EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3B SWAP1 PUSH2 0x2F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1061 JUMPI DUP2 CALLVALUE EQ PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB2 SWAP1 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1019 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1036 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP PUSH2 0x11C6 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1100 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1182 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC9 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0xD3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF08A25ED PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x300B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 GT PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D9 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14DA JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140A JUMPI PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xC9 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1494 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D7 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0xC9 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15DC PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1642 SWAP1 PUSH2 0x3238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1654 DUP2 PUSH2 0x1CFA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A1 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCD PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x16D4 JUMPI POP PUSH1 0xCD PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x0 PUSH1 0xC9 PUSH1 0x2 ADD SLOAD GT JUMPDEST JUMPDEST PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP1 PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xCD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19EB JUMPI PUSH1 0xCD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0xC9 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1816 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1844 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1917 JUMPI PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xC9 PUSH1 0x2 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x19E6 JUMP JUMPDEST PUSH1 0xC9 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC9 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A1 SWAP3 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E4 SWAP2 SWAP1 PUSH2 0x3107 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0xCD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS PUSH1 0xCD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B0B PUSH2 0x1C7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B3A PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x1E97 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B5E JUMPI PUSH2 0x1B59 DUP4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x1C77 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1BC6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BC3 SWAP2 SWAP1 PUSH2 0x32F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFC SWAP1 PUSH2 0x338F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C61 SWAP1 PUSH2 0x3421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1C76 DUP4 DUP4 DUP4 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C84 PUSH2 0x1F86 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CA2 PUSH2 0xD1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CEF SWAP1 PUSH2 0x348D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E29 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E3A PUSH2 0x1F8E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E82 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP1 PUSH2 0x35B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1F16 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1E8D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1F63 DUP4 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1F70 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1F81 JUMPI PUSH2 0x1F7F DUP4 DUP4 PUSH2 0x203E JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD4 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FED PUSH2 0x1FE8 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x1CFA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1EA1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2063 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x372C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2095 SWAP2 SWAP1 PUSH2 0x3642 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20E6 DUP7 DUP4 DUP4 DUP8 PUSH2 0x20F1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2153 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x214B JUMPI PUSH2 0x210B DUP6 PUSH2 0x1DC0 JUMP JUMPDEST PUSH2 0x214A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2141 SWAP1 PUSH2 0x36A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x215E JUMP JUMPDEST PUSH2 0x215D DUP4 DUP4 PUSH2 0x2166 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x2179 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AD SWAP2 SWAP1 PUSH2 0x3709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2299 DUP3 PUSH2 0x226E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A9 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22DD DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22F9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x230C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x231F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2332 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2345 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2358 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x22D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2373 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E PUSH2 0x2399 PUSH2 0x2394 DUP5 PUSH2 0x226E JUMP JUMPDEST PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x226E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23B0 DUP3 PUSH2 0x2383 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C2 DUP3 PUSH2 0x23A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D2 DUP2 PUSH2 0x23B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2410 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP2 EQ PUSH2 0x241B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242D DUP2 PUSH2 0x2407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2449 JUMPI PUSH2 0x2448 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP5 DUP3 DUP6 ADD PUSH2 0x241E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2476 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2489 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x22A0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x249C PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24AF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x22B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2523 DUP3 PUSH2 0x24DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2542 JUMPI PUSH2 0x2541 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2555 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2561 DUP3 DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2581 JUMPI PUSH2 0x2580 PUSH2 0x24EB JUMP JUMPDEST JUMPDEST PUSH2 0x258A DUP3 PUSH2 0x24DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B9 PUSH2 0x25B4 DUP5 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0x254B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D4 PUSH2 0x24D5 JUMP JUMPDEST JUMPDEST PUSH2 0x25E0 DUP5 DUP3 DUP6 PUSH2 0x2597 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25FD JUMPI PUSH2 0x25FC PUSH2 0x24D0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x260D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x262D JUMPI PUSH2 0x262C PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x263B DUP6 DUP3 DUP7 ADD PUSH2 0x241E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x265B PUSH2 0x2402 JUMP JUMPDEST JUMPDEST PUSH2 0x2668 DUP6 DUP3 DUP7 ADD PUSH2 0x25E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2685 DUP2 PUSH2 0x2672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x267C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26AF DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP2 EQ PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26CC DUP2 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x26EF JUMPI PUSH2 0x26EE PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26FD DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x270E DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x271F DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2730 DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2741 DUP10 DUP3 DUP11 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2752 DUP10 DUP3 DUP11 ADD PUSH2 0x241E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x2768 DUP2 PUSH2 0x228E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2783 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x275F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2792 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x27A1 DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x27BC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27C9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27D6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x27E3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27F0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x27FD PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2798 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x281D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x282A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2837 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2789 JUMP JUMPDEST PUSH2 0x2844 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2864 JUMPI PUSH2 0x2863 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2872 DUP6 DUP3 DUP7 ADD PUSH2 0x241E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2883 DUP6 DUP3 DUP7 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28FA PUSH1 0x2C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2905 DUP3 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2929 DUP2 PUSH2 0x28ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298C PUSH1 0x2C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2997 DUP3 PUSH2 0x2930 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BB DUP2 PUSH2 0x297F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1E PUSH1 0x38 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A29 DUP3 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A4D DUP2 PUSH2 0x2A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB0 PUSH1 0x2E DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABB DUP3 PUSH2 0x2A54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADF DUP2 PUSH2 0x2AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204E465420636F6E7472616374206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1C PUSH1 0x1C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B27 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B4B DUP2 PUSH2 0x2B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656C6C6572206164647265737300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B88 PUSH1 0x16 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP3 PUSH2 0x2B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BB7 DUP2 PUSH2 0x2B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF4 PUSH1 0x20 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFF DUP3 PUSH2 0x2BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C23 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C86 PUSH1 0x21 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C91 DUP3 PUSH2 0x2C2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CB5 DUP2 PUSH2 0x2C79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207072696365206F7261636C65206164647265737300000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF2 PUSH1 0x1C DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFD DUP3 PUSH2 0x2CBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D21 DUP2 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5A PUSH2 0x2D55 PUSH2 0x2D50 DUP5 PUSH2 0x2D28 JUMP JUMPDEST PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x2D32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D6A DUP2 PUSH2 0x2D3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E206E6F74207374617274656420796574000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC1 PUSH1 0x17 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCC DUP3 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF0 DUP2 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20616C726561647920656E6465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2D PUSH1 0x15 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2E38 DUP3 PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5C DUP2 PUSH2 0x2E20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E99 PUSH1 0x11 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA4 DUP3 PUSH2 0x2E63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC8 DUP2 PUSH2 0x2E8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42696420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2B PUSH1 0x24 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2F36 DUP3 PUSH2 0x2ECF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F5A DUP2 PUSH2 0x2F1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F97 PUSH1 0x13 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA2 DUP3 PUSH2 0x2F61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC6 DUP2 PUSH2 0x2F8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x2FEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3005 DUP2 PUSH2 0x26A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3021 JUMPI PUSH2 0x3020 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302F DUP5 DUP3 DUP6 ADD PUSH2 0x2FF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455448206E6F7420616363657074656420666F72204552433230206269647300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x306E PUSH1 0x1F DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3079 DUP3 PUSH2 0x3038 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309D DUP2 PUSH2 0x3061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x30B9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x30C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x275F JUMP JUMPDEST PUSH2 0x30D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2789 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x30E4 DUP2 PUSH2 0x22C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x30EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3101 DUP2 PUSH2 0x30DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x311D JUMPI PUSH2 0x311C PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x312B DUP5 DUP3 DUP6 ADD PUSH2 0x30F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x426964206D75737420626520686967686572207468616E2063757272656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6869676865737420626964000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3190 PUSH1 0x2B DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x319B DUP3 PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31BF DUP2 PUSH2 0x3183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3222 PUSH1 0x26 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x322D DUP3 PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3251 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E206E6F7420656E646564207965740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328E PUSH1 0x15 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3299 DUP3 PUSH2 0x3258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BD DUP2 PUSH2 0x3281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32CD DUP2 PUSH2 0x2672 JUMP JUMPDEST DUP2 EQ PUSH2 0x32D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x32EA DUP2 PUSH2 0x32C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x23FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3314 DUP5 DUP3 DUP6 ADD PUSH2 0x32DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3379 PUSH1 0x2E DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3384 DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33A8 DUP2 PUSH2 0x336C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340B PUSH1 0x29 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3416 DUP3 PUSH2 0x33AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x343A DUP2 PUSH2 0x33FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3477 PUSH1 0x20 DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3482 DUP3 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34A6 DUP2 PUSH2 0x346A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3509 PUSH1 0x2B DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x3514 DUP3 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3538 DUP2 PUSH2 0x34FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359B PUSH1 0x2D DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x35A6 DUP3 PUSH2 0x353F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CA DUP2 PUSH2 0x358E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3605 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361C DUP3 PUSH2 0x35D1 JUMP JUMPDEST PUSH2 0x3626 DUP2 DUP6 PUSH2 0x35DC JUMP JUMPDEST SWAP4 POP PUSH2 0x3636 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x35E7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364E DUP3 DUP5 PUSH2 0x3611 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368F PUSH1 0x1D DUP4 PUSH2 0x288D JUMP JUMPDEST SWAP2 POP PUSH2 0x369A DUP3 PUSH2 0x3659 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BE DUP2 PUSH2 0x3682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36DB DUP3 PUSH2 0x36C5 JUMP JUMPDEST PUSH2 0x36E5 DUP2 DUP6 PUSH2 0x288D JUMP JUMPDEST SWAP4 POP PUSH2 0x36F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x35E7 JUMP JUMPDEST PUSH2 0x36FE DUP2 PUSH2 0x24DA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3723 DUP2 DUP5 PUSH2 0x36D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212207D609C PUSH2 0xF0AC EXP SSTORE PUSH26 0x41610E4D1DC8D72D2170379CA81AFE2C38FC5BC51D7BE364736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"432:5596:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5760:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1334:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:195:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5612:94:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3922:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3027:131;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:1;;;;;;;;;;;;;:::i;:::-;;1563:982:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1462:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1266:30:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1204:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2627:1869;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2335:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4538:1026:17;;;;;;;;;;;;;:::i;:::-;;5760:104;5809:18;;:::i;:::-;5846:11;5839:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5760:104;:::o;1334:30::-;;;;;;;;;;;;;:::o;3408:195:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3489:36:::1;3507:17;3489;:36::i;:::-;3535:61;3557:17;3586:1;3576:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:5;3535:21;:61::i;:::-;3408:195:::0;:::o;5612:94:17:-;5660:10;;:::i;:::-;5689;5682:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5612:94;:::o;3922:220:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;:::-;3922:220:::0;;:::o;3027:131::-;3105:7;2199:6;2182:23;;2190:4;2182:23;;;2174:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1180:66:4::1;3131:20:7;;3124:27;;3027:131:::0;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;1563:982:17:-;3279:19:6;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;1778:16:17::1;:14;:16::i;:::-;1804:24;:22;:24::i;:::-;1910:1;1886:26;;:12;:26;;::::0;1878:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1982:1;1963:21;;:7;:21;;::::0;1955:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2043:15;2029:10;:29;;2021:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2124:10;2113:8;:21;2105:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2214:1;2190:26;;:12;:26;;::::0;2182:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2274:214;;;;;;;;2313:12;2274:214;;;;;;2348:8;2274:214;;;;2378:7;2274:214;;;;;;2410:10;2274:214;;;;2443:8;2274:214;;;;2472:5;2274:214;;;;::::0;2260:11:::1;:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:12;2499:11;;:39;;;;;;;;;;;;;;;;;;3651:14:6::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;1563:982:17;;;;;;:::o;1462:85:1:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;1266:30:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1204:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2627:1869::-;2732:11;:21;;;2713:15;:40;;2705:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2818:11;:19;;;2799:15;:38;;2791:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2882:11;:17;;;;;;;;;;;;2881:18;2873:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2949:1;2939:7;:11;2931:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3026:17;3075:1;3057:20;;:6;:20;;;3053:484;;3151:7;3138:9;:20;3130:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3208:11;;;;;;;;;;;:24;;;3241:1;3245:7;3208:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3196:57;;3053:484;;;3345:1;3332:9;:14;3324:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3403:6;3396:27;;;3424:10;3444:4;3451:7;3396:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3485:11;;;;;;;;;;;:24;;;3510:6;3518:7;3485:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3473:53;;3053:484;3618:25;3681:1;3661:10;:17;;;:21;3657:133;;;3718:11;;;;;;;;;;;:24;;;3743:10;:16;;;;;;;;;;;;3761:10;:17;;;3718:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3698:81;;3657:133;3819:17;3807:9;:29;3799:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3964:1;3935:31;;:10;:17;;;;;;;;;;;;:31;;;3931:362;;4014:1;3986:30;;:10;:16;;;;;;;;;;;;:30;;;3982:301;;4074:10;:17;;;;;;;;;;;;4066:35;;:54;4102:10;:17;;;4066:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:301;;;4204:10;:16;;;;;;;;;;;;4197:33;;;4231:10;:17;;;;;;;;;;;;4250:10;:17;;;4197:71;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3982:301;3931:362;4346:143;;;;;;;;4372:10;4346:143;;;;;;4403:6;4346:143;;;;;;4431:7;4346:143;;;;4463:15;4346:143;;;4333:10;:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:1801;;2627:1869;;:::o;2335:198:1:-;1355:13;:11;:13::i;:::-;2443:1:::1;2423:22;;:8;:22;;::::0;2415:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2498:28;2517:8;2498:18;:28::i;:::-;2335:198:::0;:::o;4538:1026:17:-;4588:11;:17;;;;;;;;;;;;4587:18;4579:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4668:11;:19;;;4649:15;:38;;:109;;;;4711:11;:21;;;4692:15;:40;;:65;;;;;4756:1;4736:10;:17;;;:21;4692:65;4649:109;4641:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;4834:4;4814:11;:17;;;:24;;;;;;;;;;;;;;;;;;4911:1;4882:31;;:10;:17;;;;;;;;;;;;:31;;;4878:680;;4982:11;:23;;;;;;;;;;;;4974:45;;;5028:4;5035:10;:17;;;;;;;;;;;;5054:11;:19;;;4974:100;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5163:1;5135:30;;:10;:16;;;;;;;;;;;;:30;;;5131:235;;5193:11;:18;;;;;;;;;;;;5185:36;;:55;5222:10;:17;;;5185:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5131:235;;;5286:10;:16;;;;;;;;;;;;5279:33;;;5313:11;:18;;;;;;;;;;;;5333:10;:17;;;5279:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5131:235;4878:680;;;5454:11;:23;;;;;;;;;;;;5446:45;;;5500:4;5507:11;:18;;;;;;;;;;;;5527:11;:19;;;5446:101;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4878:680;4538:1026::o;1478:151:4:-;1531:7;1557:59;1180:66;1595:20;;1557:37;:59::i;:::-;:65;;;;;;;;;;;;1550:72;;1478:151;:::o;5870:92:17:-;1355:13:1;:11;:13::i;:::-;5870:92:17;:::o;2841:944:4:-;3257:53;839:66;3295:14;;3257:37;:53::i;:::-;:59;;;;;;;;;;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;:::-;3253:526;;;3433:17;3404:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;;;;;;;;;:::i;:::-;;;;;;;;3400:302;1180:66;3525:20;;3517:4;:28;3509:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;:::-;3253:526;2841:944;;;:::o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2687:187::-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;1423:320:8:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;1024:95:1:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:26:1::1;:24;:26::i;:::-;1024:95::o:0;2290:67:7:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2290:67:7:o;1870:190:10:-;1931:21;2040:4;2030:14;;1870:190;;;:::o;2158:::-;2219:21;2328:4;2318:14;;2158:190;;;:::o;1720:281:4:-;1801:48;1831:17;1801:29;:48::i;:::-;1793:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1977:17;1909:59;1180:66;1947:20;;1909:37;:59::i;:::-;:65;;;:85;;;;;;;;;;;;;;;;;;1720:281;:::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;:::-;;2540:123;2393:276;;;:::o;886:96:9:-;939:7;965:10;958:17;;886:96;:::o;1125:111:1:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:1::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;2107:152:4:-;2173:37;2192:17;2173:18;:37::i;:::-;2234:17;2225:27;;;;;;;;;;;;2107:152;:::o;6685:198:8:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;;;;7069:325;;;;;:::o;7682:628::-;7862:12;7890:7;7886:418;;;7938:1;7917:10;:17;:22;7913:286;;8132:18;8143:6;8132:10;:18::i;:::-;8124:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7913:286;8219:10;8212:17;;;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;;:::o;8832:540::-;9011:1;8991:10;:17;:21;8987:379;;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:20:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:108::-;318:24;336:5;318:24;:::i;:::-;313:3;306:37;241:108;;:::o;355:77::-;392:7;421:5;410:16;;355:77;;;:::o;438:108::-;515:24;533:5;515:24;:::i;:::-;510:3;503:37;438:108;;:::o;552:90::-;586:7;629:5;622:13;615:21;604:32;;552:90;;;:::o;648:99::-;719:21;734:5;719:21;:::i;:::-;714:3;707:34;648:99;;:::o;817:1226::-;972:4;967:3;963:14;1066:4;1059:5;1055:16;1049:23;1085:63;1142:4;1137:3;1133:14;1119:12;1085:63;:::i;:::-;987:171;1243:4;1236:5;1232:16;1226:23;1262:63;1319:4;1314:3;1310:14;1296:12;1262:63;:::i;:::-;1168:167;1419:4;1412:5;1408:16;1402:23;1438:63;1495:4;1490:3;1486:14;1472:12;1438:63;:::i;:::-;1345:166;1598:4;1591:5;1587:16;1581:23;1617:63;1674:4;1669:3;1665:14;1651:12;1617:63;:::i;:::-;1521:169;1775:4;1768:5;1764:16;1758:23;1794:63;1851:4;1846:3;1842:14;1828:12;1794:63;:::i;:::-;1700:167;1950:4;1943:5;1939:16;1933:23;1969:57;2020:4;2015:3;2011:14;1997:12;1969:57;:::i;:::-;1877:159;941:1102;817:1226;;:::o;2049:339::-;2200:4;2238:3;2227:9;2223:19;2215:27;;2252:129;2378:1;2367:9;2363:17;2354:6;2252:129;:::i;:::-;2049:339;;;;:::o;2394:60::-;2422:3;2443:5;2436:12;;2394:60;;;:::o;2460:142::-;2510:9;2543:53;2561:34;2570:24;2588:5;2570:24;:::i;:::-;2561:34;:::i;:::-;2543:53;:::i;:::-;2530:66;;2460:142;;;:::o;2608:126::-;2658:9;2691:37;2722:5;2691:37;:::i;:::-;2678:50;;2608:126;;;:::o;2740:146::-;2810:9;2843:37;2874:5;2843:37;:::i;:::-;2830:50;;2740:146;;;:::o;2892:171::-;2999:57;3050:5;2999:57;:::i;:::-;2994:3;2987:70;2892:171;;:::o;3069:262::-;3182:4;3220:2;3209:9;3205:18;3197:26;;3233:91;3321:1;3310:9;3306:17;3297:6;3233:91;:::i;:::-;3069:262;;;;:::o;3337:75::-;3370:6;3403:2;3397:9;3387:19;;3337:75;:::o;3418:117::-;3527:1;3524;3517:12;3541:117;3650:1;3647;3640:12;3664:122;3737:24;3755:5;3737:24;:::i;:::-;3730:5;3727:35;3717:63;;3776:1;3773;3766:12;3717:63;3664:122;:::o;3792:139::-;3838:5;3876:6;3863:20;3854:29;;3892:33;3919:5;3892:33;:::i;:::-;3792:139;;;;:::o;3937:329::-;3996:6;4045:2;4033:9;4024:7;4020:23;4016:32;4013:119;;;4051:79;;:::i;:::-;4013:119;4171:1;4196:53;4241:7;4232:6;4221:9;4217:22;4196:53;:::i;:::-;4186:63;;4142:117;3937:329;;;;:::o;4320:857::-;4459:4;4454:3;4450:14;4548:4;4541:5;4537:16;4531:23;4567:63;4624:4;4619:3;4615:14;4601:12;4567:63;:::i;:::-;4474:166;4723:4;4716:5;4712:16;4706:23;4742:63;4799:4;4794:3;4790:14;4776:12;4742:63;:::i;:::-;4650:165;4899:4;4892:5;4888:16;4882:23;4918:63;4975:4;4970:3;4966:14;4952:12;4918:63;:::i;:::-;4825:166;5078:4;5071:5;5067:16;5061:23;5097:63;5154:4;5149:3;5145:14;5131:12;5097:63;:::i;:::-;5001:169;4428:749;4320:857;;:::o;5183:307::-;5318:4;5356:3;5345:9;5341:19;5333:27;;5370:113;5480:1;5469:9;5465:17;5456:6;5370:113;:::i;:::-;5183:307;;;;:::o;5496:117::-;5605:1;5602;5595:12;5619:117;5728:1;5725;5718:12;5742:102;5783:6;5834:2;5830:7;5825:2;5818:5;5814:14;5810:28;5800:38;;5742:102;;;:::o;5850:180::-;5898:77;5895:1;5888:88;5995:4;5992:1;5985:15;6019:4;6016:1;6009:15;6036:281;6119:27;6141:4;6119:27;:::i;:::-;6111:6;6107:40;6249:6;6237:10;6234:22;6213:18;6201:10;6198:34;6195:62;6192:88;;;6260:18;;:::i;:::-;6192:88;6300:10;6296:2;6289:22;6079:238;6036:281;;:::o;6323:129::-;6357:6;6384:20;;:::i;:::-;6374:30;;6413:33;6441:4;6433:6;6413:33;:::i;:::-;6323:129;;;:::o;6458:307::-;6519:4;6609:18;6601:6;6598:30;6595:56;;;6631:18;;:::i;:::-;6595:56;6669:29;6691:6;6669:29;:::i;:::-;6661:37;;6753:4;6747;6743:15;6735:23;;6458:307;;;:::o;6771:148::-;6869:6;6864:3;6859;6846:30;6910:1;6901:6;6896:3;6892:16;6885:27;6771:148;;;:::o;6925:423::-;7002:5;7027:65;7043:48;7084:6;7043:48;:::i;:::-;7027:65;:::i;:::-;7018:74;;7115:6;7108:5;7101:21;7153:4;7146:5;7142:16;7191:3;7182:6;7177:3;7173:16;7170:25;7167:112;;;7198:79;;:::i;:::-;7167:112;7288:54;7335:6;7330:3;7325;7288:54;:::i;:::-;7008:340;6925:423;;;;;:::o;7367:338::-;7422:5;7471:3;7464:4;7456:6;7452:17;7448:27;7438:122;;7479:79;;:::i;:::-;7438:122;7596:6;7583:20;7621:78;7695:3;7687:6;7680:4;7672:6;7668:17;7621:78;:::i;:::-;7612:87;;7428:277;7367:338;;;;:::o;7711:652::-;7788:6;7796;7845:2;7833:9;7824:7;7820:23;7816:32;7813:119;;;7851:79;;:::i;:::-;7813:119;7971:1;7996:53;8041:7;8032:6;8021:9;8017:22;7996:53;:::i;:::-;7986:63;;7942:117;8126:2;8115:9;8111:18;8098:32;8157:18;8149:6;8146:30;8143:117;;;8179:79;;:::i;:::-;8143:117;8284:62;8338:7;8329:6;8318:9;8314:22;8284:62;:::i;:::-;8274:72;;8069:287;7711:652;;;;;:::o;8369:77::-;8406:7;8435:5;8424:16;;8369:77;;;:::o;8452:118::-;8539:24;8557:5;8539:24;:::i;:::-;8534:3;8527:37;8452:118;;:::o;8576:222::-;8669:4;8707:2;8696:9;8692:18;8684:26;;8720:71;8788:1;8777:9;8773:17;8764:6;8720:71;:::i;:::-;8576:222;;;;:::o;8804:122::-;8877:24;8895:5;8877:24;:::i;:::-;8870:5;8867:35;8857:63;;8916:1;8913;8906:12;8857:63;8804:122;:::o;8932:139::-;8978:5;9016:6;9003:20;8994:29;;9032:33;9059:5;9032:33;:::i;:::-;8932:139;;;;:::o;9077:1057::-;9181:6;9189;9197;9205;9213;9221;9270:3;9258:9;9249:7;9245:23;9241:33;9238:120;;;9277:79;;:::i;:::-;9238:120;9397:1;9422:53;9467:7;9458:6;9447:9;9443:22;9422:53;:::i;:::-;9412:63;;9368:117;9524:2;9550:53;9595:7;9586:6;9575:9;9571:22;9550:53;:::i;:::-;9540:63;;9495:118;9652:2;9678:53;9723:7;9714:6;9703:9;9699:22;9678:53;:::i;:::-;9668:63;;9623:118;9780:2;9806:53;9851:7;9842:6;9831:9;9827:22;9806:53;:::i;:::-;9796:63;;9751:118;9908:3;9935:53;9980:7;9971:6;9960:9;9956:22;9935:53;:::i;:::-;9925:63;;9879:119;10037:3;10064:53;10109:7;10100:6;10089:9;10085:22;10064:53;:::i;:::-;10054:63;;10008:119;9077:1057;;;;;;;;:::o;10140:118::-;10227:24;10245:5;10227:24;:::i;:::-;10222:3;10215:37;10140:118;;:::o;10264:222::-;10357:4;10395:2;10384:9;10380:18;10372:26;;10408:71;10476:1;10465:9;10461:17;10452:6;10408:71;:::i;:::-;10264:222;;;;:::o;10492:118::-;10579:24;10597:5;10579:24;:::i;:::-;10574:3;10567:37;10492:118;;:::o;10616:109::-;10697:21;10712:5;10697:21;:::i;:::-;10692:3;10685:34;10616:109;;:::o;10731:763::-;10958:4;10996:3;10985:9;10981:19;10973:27;;11010:71;11078:1;11067:9;11063:17;11054:6;11010:71;:::i;:::-;11091:72;11159:2;11148:9;11144:18;11135:6;11091:72;:::i;:::-;11173;11241:2;11230:9;11226:18;11217:6;11173:72;:::i;:::-;11255;11323:2;11312:9;11308:18;11299:6;11255:72;:::i;:::-;11337:73;11405:3;11394:9;11390:19;11381:6;11337:73;:::i;:::-;11420:67;11482:3;11471:9;11467:19;11458:6;11420:67;:::i;:::-;10731:763;;;;;;;;;:::o;11500:553::-;11677:4;11715:3;11704:9;11700:19;11692:27;;11729:71;11797:1;11786:9;11782:17;11773:6;11729:71;:::i;:::-;11810:72;11878:2;11867:9;11863:18;11854:6;11810:72;:::i;:::-;11892;11960:2;11949:9;11945:18;11936:6;11892:72;:::i;:::-;11974;12042:2;12031:9;12027:18;12018:6;11974:72;:::i;:::-;11500:553;;;;;;;:::o;12059:474::-;12127:6;12135;12184:2;12172:9;12163:7;12159:23;12155:32;12152:119;;;12190:79;;:::i;:::-;12152:119;12310:1;12335:53;12380:7;12371:6;12360:9;12356:22;12335:53;:::i;:::-;12325:63;;12281:117;12437:2;12463:53;12508:7;12499:6;12488:9;12484:22;12463:53;:::i;:::-;12453:63;;12408:118;12059:474;;;;;:::o;12539:169::-;12623:11;12657:6;12652:3;12645:19;12697:4;12692:3;12688:14;12673:29;;12539:169;;;;:::o;12714:231::-;12854:34;12850:1;12842:6;12838:14;12831:58;12923:14;12918:2;12910:6;12906:15;12899:39;12714:231;:::o;12951:366::-;13093:3;13114:67;13178:2;13173:3;13114:67;:::i;:::-;13107:74;;13190:93;13279:3;13190:93;:::i;:::-;13308:2;13303:3;13299:12;13292:19;;12951:366;;;:::o;13323:419::-;13489:4;13527:2;13516:9;13512:18;13504:26;;13576:9;13570:4;13566:20;13562:1;13551:9;13547:17;13540:47;13604:131;13730:4;13604:131;:::i;:::-;13596:139;;13323:419;;;:::o;13748:231::-;13888:34;13884:1;13876:6;13872:14;13865:58;13957:14;13952:2;13944:6;13940:15;13933:39;13748:231;:::o;13985:366::-;14127:3;14148:67;14212:2;14207:3;14148:67;:::i;:::-;14141:74;;14224:93;14313:3;14224:93;:::i;:::-;14342:2;14337:3;14333:12;14326:19;;13985:366;;;:::o;14357:419::-;14523:4;14561:2;14550:9;14546:18;14538:26;;14610:9;14604:4;14600:20;14596:1;14585:9;14581:17;14574:47;14638:131;14764:4;14638:131;:::i;:::-;14630:139;;14357:419;;;:::o;14782:243::-;14922:34;14918:1;14910:6;14906:14;14899:58;14991:26;14986:2;14978:6;14974:15;14967:51;14782:243;:::o;15031:366::-;15173:3;15194:67;15258:2;15253:3;15194:67;:::i;:::-;15187:74;;15270:93;15359:3;15270:93;:::i;:::-;15388:2;15383:3;15379:12;15372:19;;15031:366;;;:::o;15403:419::-;15569:4;15607:2;15596:9;15592:18;15584:26;;15656:9;15650:4;15646:20;15642:1;15631:9;15627:17;15620:47;15684:131;15810:4;15684:131;:::i;:::-;15676:139;;15403:419;;;:::o;15828:233::-;15968:34;15964:1;15956:6;15952:14;15945:58;16037:16;16032:2;16024:6;16020:15;16013:41;15828:233;:::o;16067:366::-;16209:3;16230:67;16294:2;16289:3;16230:67;:::i;:::-;16223:74;;16306:93;16395:3;16306:93;:::i;:::-;16424:2;16419:3;16415:12;16408:19;;16067:366;;;:::o;16439:419::-;16605:4;16643:2;16632:9;16628:18;16620:26;;16692:9;16686:4;16682:20;16678:1;16667:9;16663:17;16656:47;16720:131;16846:4;16720:131;:::i;:::-;16712:139;;16439:419;;;:::o;16864:178::-;17004:30;17000:1;16992:6;16988:14;16981:54;16864:178;:::o;17048:366::-;17190:3;17211:67;17275:2;17270:3;17211:67;:::i;:::-;17204:74;;17287:93;17376:3;17287:93;:::i;:::-;17405:2;17400:3;17396:12;17389:19;;17048:366;;;:::o;17420:419::-;17586:4;17624:2;17613:9;17609:18;17601:26;;17673:9;17667:4;17663:20;17659:1;17648:9;17644:17;17637:47;17701:131;17827:4;17701:131;:::i;:::-;17693:139;;17420:419;;;:::o;17845:172::-;17985:24;17981:1;17973:6;17969:14;17962:48;17845:172;:::o;18023:366::-;18165:3;18186:67;18250:2;18245:3;18186:67;:::i;:::-;18179:74;;18262:93;18351:3;18262:93;:::i;:::-;18380:2;18375:3;18371:12;18364:19;;18023:366;;;:::o;18395:419::-;18561:4;18599:2;18588:9;18584:18;18576:26;;18648:9;18642:4;18638:20;18634:1;18623:9;18619:17;18612:47;18676:131;18802:4;18676:131;:::i;:::-;18668:139;;18395:419;;;:::o;18820:182::-;18960:34;18956:1;18948:6;18944:14;18937:58;18820:182;:::o;19008:366::-;19150:3;19171:67;19235:2;19230:3;19171:67;:::i;:::-;19164:74;;19247:93;19336:3;19247:93;:::i;:::-;19365:2;19360:3;19356:12;19349:19;;19008:366;;;:::o;19380:419::-;19546:4;19584:2;19573:9;19569:18;19561:26;;19633:9;19627:4;19623:20;19619:1;19608:9;19604:17;19597:47;19661:131;19787:4;19661:131;:::i;:::-;19653:139;;19380:419;;;:::o;19805:220::-;19945:34;19941:1;19933:6;19929:14;19922:58;20014:3;20009:2;20001:6;19997:15;19990:28;19805:220;:::o;20031:366::-;20173:3;20194:67;20258:2;20253:3;20194:67;:::i;:::-;20187:74;;20270:93;20359:3;20270:93;:::i;:::-;20388:2;20383:3;20379:12;20372:19;;20031:366;;;:::o;20403:419::-;20569:4;20607:2;20596:9;20592:18;20584:26;;20656:9;20650:4;20646:20;20642:1;20631:9;20627:17;20620:47;20684:131;20810:4;20684:131;:::i;:::-;20676:139;;20403:419;;;:::o;20828:178::-;20968:30;20964:1;20956:6;20952:14;20945:54;20828:178;:::o;21012:366::-;21154:3;21175:67;21239:2;21234:3;21175:67;:::i;:::-;21168:74;;21251:93;21340:3;21251:93;:::i;:::-;21369:2;21364:3;21360:12;21353:19;;21012:366;;;:::o;21384:419::-;21550:4;21588:2;21577:9;21573:18;21565:26;;21637:9;21631:4;21627:20;21623:1;21612:9;21608:17;21601:47;21665:131;21791:4;21665:131;:::i;:::-;21657:139;;21384:419;;;:::o;21809:85::-;21854:7;21883:5;21872:16;;21809:85;;;:::o;21900:86::-;21935:7;21975:4;21968:5;21964:16;21953:27;;21900:86;;;:::o;21992:154::-;22048:9;22081:59;22097:42;22106:32;22132:5;22106:32;:::i;:::-;22097:42;:::i;:::-;22081:59;:::i;:::-;22068:72;;21992:154;;;:::o;22152:143::-;22245:43;22282:5;22245:43;:::i;:::-;22240:3;22233:56;22152:143;;:::o;22301:234::-;22400:4;22438:2;22427:9;22423:18;22415:26;;22451:77;22525:1;22514:9;22510:17;22501:6;22451:77;:::i;:::-;22301:234;;;;:::o;22541:173::-;22681:25;22677:1;22669:6;22665:14;22658:49;22541:173;:::o;22720:366::-;22862:3;22883:67;22947:2;22942:3;22883:67;:::i;:::-;22876:74;;22959:93;23048:3;22959:93;:::i;:::-;23077:2;23072:3;23068:12;23061:19;;22720:366;;;:::o;23092:419::-;23258:4;23296:2;23285:9;23281:18;23273:26;;23345:9;23339:4;23335:20;23331:1;23320:9;23316:17;23309:47;23373:131;23499:4;23373:131;:::i;:::-;23365:139;;23092:419;;;:::o;23517:171::-;23657:23;23653:1;23645:6;23641:14;23634:47;23517:171;:::o;23694:366::-;23836:3;23857:67;23921:2;23916:3;23857:67;:::i;:::-;23850:74;;23933:93;24022:3;23933:93;:::i;:::-;24051:2;24046:3;24042:12;24035:19;;23694:366;;;:::o;24066:419::-;24232:4;24270:2;24259:9;24255:18;24247:26;;24319:9;24313:4;24309:20;24305:1;24294:9;24290:17;24283:47;24347:131;24473:4;24347:131;:::i;:::-;24339:139;;24066:419;;;:::o;24491:167::-;24631:19;24627:1;24619:6;24615:14;24608:43;24491:167;:::o;24664:366::-;24806:3;24827:67;24891:2;24886:3;24827:67;:::i;:::-;24820:74;;24903:93;24992:3;24903:93;:::i;:::-;25021:2;25016:3;25012:12;25005:19;;24664:366;;;:::o;25036:419::-;25202:4;25240:2;25229:9;25225:18;25217:26;;25289:9;25283:4;25279:20;25275:1;25264:9;25260:17;25253:47;25317:131;25443:4;25317:131;:::i;:::-;25309:139;;25036:419;;;:::o;25461:223::-;25601:34;25597:1;25589:6;25585:14;25578:58;25670:6;25665:2;25657:6;25653:15;25646:31;25461:223;:::o;25690:366::-;25832:3;25853:67;25917:2;25912:3;25853:67;:::i;:::-;25846:74;;25929:93;26018:3;25929:93;:::i;:::-;26047:2;26042:3;26038:12;26031:19;;25690:366;;;:::o;26062:419::-;26228:4;26266:2;26255:9;26251:18;26243:26;;26315:9;26309:4;26305:20;26301:1;26290:9;26286:17;26279:47;26343:131;26469:4;26343:131;:::i;:::-;26335:139;;26062:419;;;:::o;26487:169::-;26627:21;26623:1;26615:6;26611:14;26604:45;26487:169;:::o;26662:366::-;26804:3;26825:67;26889:2;26884:3;26825:67;:::i;:::-;26818:74;;26901:93;26990:3;26901:93;:::i;:::-;27019:2;27014:3;27010:12;27003:19;;26662:366;;;:::o;27034:419::-;27200:4;27238:2;27227:9;27223:18;27215:26;;27287:9;27281:4;27277:20;27273:1;27262:9;27258:17;27251:47;27315:131;27441:4;27315:131;:::i;:::-;27307:139;;27034:419;;;:::o;27459:332::-;27580:4;27618:2;27607:9;27603:18;27595:26;;27631:71;27699:1;27688:9;27684:17;27675:6;27631:71;:::i;:::-;27712:72;27780:2;27769:9;27765:18;27756:6;27712:72;:::i;:::-;27459:332;;;;;:::o;27797:143::-;27854:5;27885:6;27879:13;27870:22;;27901:33;27928:5;27901:33;:::i;:::-;27797:143;;;;:::o;27946:351::-;28016:6;28065:2;28053:9;28044:7;28040:23;28036:32;28033:119;;;28071:79;;:::i;:::-;28033:119;28191:1;28216:64;28272:7;28263:6;28252:9;28248:22;28216:64;:::i;:::-;28206:74;;28162:128;27946:351;;;;:::o;28303:181::-;28443:33;28439:1;28431:6;28427:14;28420:57;28303:181;:::o;28490:366::-;28632:3;28653:67;28717:2;28712:3;28653:67;:::i;:::-;28646:74;;28729:93;28818:3;28729:93;:::i;:::-;28847:2;28842:3;28838:12;28831:19;;28490:366;;;:::o;28862:419::-;29028:4;29066:2;29055:9;29051:18;29043:26;;29115:9;29109:4;29105:20;29101:1;29090:9;29086:17;29079:47;29143:131;29269:4;29143:131;:::i;:::-;29135:139;;28862:419;;;:::o;29287:442::-;29436:4;29474:2;29463:9;29459:18;29451:26;;29487:71;29555:1;29544:9;29540:17;29531:6;29487:71;:::i;:::-;29568:72;29636:2;29625:9;29621:18;29612:6;29568:72;:::i;:::-;29650;29718:2;29707:9;29703:18;29694:6;29650:72;:::i;:::-;29287:442;;;;;;:::o;29735:116::-;29805:21;29820:5;29805:21;:::i;:::-;29798:5;29795:32;29785:60;;29841:1;29838;29831:12;29785:60;29735:116;:::o;29857:137::-;29911:5;29942:6;29936:13;29927:22;;29958:30;29982:5;29958:30;:::i;:::-;29857:137;;;;:::o;30000:345::-;30067:6;30116:2;30104:9;30095:7;30091:23;30087:32;30084:119;;;30122:79;;:::i;:::-;30084:119;30242:1;30267:61;30320:7;30311:6;30300:9;30296:22;30267:61;:::i;:::-;30257:71;;30213:125;30000:345;;;;:::o;30351:230::-;30491:34;30487:1;30479:6;30475:14;30468:58;30560:13;30555:2;30547:6;30543:15;30536:38;30351:230;:::o;30587:366::-;30729:3;30750:67;30814:2;30809:3;30750:67;:::i;:::-;30743:74;;30826:93;30915:3;30826:93;:::i;:::-;30944:2;30939:3;30935:12;30928:19;;30587:366;;;:::o;30959:419::-;31125:4;31163:2;31152:9;31148:18;31140:26;;31212:9;31206:4;31202:20;31198:1;31187:9;31183:17;31176:47;31240:131;31366:4;31240:131;:::i;:::-;31232:139;;30959:419;;;:::o;31384:225::-;31524:34;31520:1;31512:6;31508:14;31501:58;31593:8;31588:2;31580:6;31576:15;31569:33;31384:225;:::o;31615:366::-;31757:3;31778:67;31842:2;31837:3;31778:67;:::i;:::-;31771:74;;31854:93;31943:3;31854:93;:::i;:::-;31972:2;31967:3;31963:12;31956:19;;31615:366;;;:::o;31987:419::-;32153:4;32191:2;32180:9;32176:18;32168:26;;32240:9;32234:4;32230:20;32226:1;32215:9;32211:17;32204:47;32268:131;32394:4;32268:131;:::i;:::-;32260:139;;31987:419;;;:::o;32412:171::-;32552:23;32548:1;32540:6;32536:14;32529:47;32412:171;:::o;32589:366::-;32731:3;32752:67;32816:2;32811:3;32752:67;:::i;:::-;32745:74;;32828:93;32917:3;32828:93;:::i;:::-;32946:2;32941:3;32937:12;32930:19;;32589:366;;;:::o;32961:419::-;33127:4;33165:2;33154:9;33150:18;33142:26;;33214:9;33208:4;33204:20;33200:1;33189:9;33185:17;33178:47;33242:131;33368:4;33242:131;:::i;:::-;33234:139;;32961:419;;;:::o;33386:122::-;33459:24;33477:5;33459:24;:::i;:::-;33452:5;33449:35;33439:63;;33498:1;33495;33488:12;33439:63;33386:122;:::o;33514:143::-;33571:5;33602:6;33596:13;33587:22;;33618:33;33645:5;33618:33;:::i;:::-;33514:143;;;;:::o;33663:351::-;33733:6;33782:2;33770:9;33761:7;33757:23;33753:32;33750:119;;;33788:79;;:::i;:::-;33750:119;33908:1;33933:64;33989:7;33980:6;33969:9;33965:22;33933:64;:::i;:::-;33923:74;;33879:128;33663:351;;;;:::o;34020:233::-;34160:34;34156:1;34148:6;34144:14;34137:58;34229:16;34224:2;34216:6;34212:15;34205:41;34020:233;:::o;34259:366::-;34401:3;34422:67;34486:2;34481:3;34422:67;:::i;:::-;34415:74;;34498:93;34587:3;34498:93;:::i;:::-;34616:2;34611:3;34607:12;34600:19;;34259:366;;;:::o;34631:419::-;34797:4;34835:2;34824:9;34820:18;34812:26;;34884:9;34878:4;34874:20;34870:1;34859:9;34855:17;34848:47;34912:131;35038:4;34912:131;:::i;:::-;34904:139;;34631:419;;;:::o;35056:228::-;35196:34;35192:1;35184:6;35180:14;35173:58;35265:11;35260:2;35252:6;35248:15;35241:36;35056:228;:::o;35290:366::-;35432:3;35453:67;35517:2;35512:3;35453:67;:::i;:::-;35446:74;;35529:93;35618:3;35529:93;:::i;:::-;35647:2;35642:3;35638:12;35631:19;;35290:366;;;:::o;35662:419::-;35828:4;35866:2;35855:9;35851:18;35843:26;;35915:9;35909:4;35905:20;35901:1;35890:9;35886:17;35879:47;35943:131;36069:4;35943:131;:::i;:::-;35935:139;;35662:419;;;:::o;36087:182::-;36227:34;36223:1;36215:6;36211:14;36204:58;36087:182;:::o;36275:366::-;36417:3;36438:67;36502:2;36497:3;36438:67;:::i;:::-;36431:74;;36514:93;36603:3;36514:93;:::i;:::-;36632:2;36627:3;36623:12;36616:19;;36275:366;;;:::o;36647:419::-;36813:4;36851:2;36840:9;36836:18;36828:26;;36900:9;36894:4;36890:20;36886:1;36875:9;36871:17;36864:47;36928:131;37054:4;36928:131;:::i;:::-;36920:139;;36647:419;;;:::o;37072:230::-;37212:34;37208:1;37200:6;37196:14;37189:58;37281:13;37276:2;37268:6;37264:15;37257:38;37072:230;:::o;37308:366::-;37450:3;37471:67;37535:2;37530:3;37471:67;:::i;:::-;37464:74;;37547:93;37636:3;37547:93;:::i;:::-;37665:2;37660:3;37656:12;37649:19;;37308:366;;;:::o;37680:419::-;37846:4;37884:2;37873:9;37869:18;37861:26;;37933:9;37927:4;37923:20;37919:1;37908:9;37904:17;37897:47;37961:131;38087:4;37961:131;:::i;:::-;37953:139;;37680:419;;;:::o;38105:232::-;38245:34;38241:1;38233:6;38229:14;38222:58;38314:15;38309:2;38301:6;38297:15;38290:40;38105:232;:::o;38343:366::-;38485:3;38506:67;38570:2;38565:3;38506:67;:::i;:::-;38499:74;;38582:93;38671:3;38582:93;:::i;:::-;38700:2;38695:3;38691:12;38684:19;;38343:366;;;:::o;38715:419::-;38881:4;38919:2;38908:9;38904:18;38896:26;;38968:9;38962:4;38958:20;38954:1;38943:9;38939:17;38932:47;38996:131;39122:4;38996:131;:::i;:::-;38988:139;;38715:419;;;:::o;39140:98::-;39191:6;39225:5;39219:12;39209:22;;39140:98;;;:::o;39244:147::-;39345:11;39382:3;39367:18;;39244:147;;;;:::o;39397:248::-;39479:1;39489:113;39503:6;39500:1;39497:13;39489:113;;;39588:1;39583:3;39579:11;39573:18;39569:1;39564:3;39560:11;39553:39;39525:2;39522:1;39518:10;39513:15;;39489:113;;;39636:1;39627:6;39622:3;39618:16;39611:27;39459:186;39397:248;;;:::o;39651:386::-;39755:3;39783:38;39815:5;39783:38;:::i;:::-;39837:88;39918:6;39913:3;39837:88;:::i;:::-;39830:95;;39934:65;39992:6;39987:3;39980:4;39973:5;39969:16;39934:65;:::i;:::-;40024:6;40019:3;40015:16;40008:23;;39759:278;39651:386;;;;:::o;40043:271::-;40173:3;40195:93;40284:3;40275:6;40195:93;:::i;:::-;40188:100;;40305:3;40298:10;;40043:271;;;;:::o;40320:179::-;40460:31;40456:1;40448:6;40444:14;40437:55;40320:179;:::o;40505:366::-;40647:3;40668:67;40732:2;40727:3;40668:67;:::i;:::-;40661:74;;40744:93;40833:3;40744:93;:::i;:::-;40862:2;40857:3;40853:12;40846:19;;40505:366;;;:::o;40877:419::-;41043:4;41081:2;41070:9;41066:18;41058:26;;41130:9;41124:4;41120:20;41116:1;41105:9;41101:17;41094:47;41158:131;41284:4;41158:131;:::i;:::-;41150:139;;40877:419;;;:::o;41302:99::-;41354:6;41388:5;41382:12;41372:22;;41302:99;;;:::o;41407:377::-;41495:3;41523:39;41556:5;41523:39;:::i;:::-;41578:71;41642:6;41637:3;41578:71;:::i;:::-;41571:78;;41658:65;41716:6;41711:3;41704:4;41697:5;41693:16;41658:65;:::i;:::-;41748:29;41770:6;41748:29;:::i;:::-;41743:3;41739:39;41732:46;;41499:285;41407:377;;;;:::o;41790:313::-;41903:4;41941:2;41930:9;41926:18;41918:26;;41990:9;41984:4;41980:20;41976:1;41965:9;41961:17;41954:47;42018:78;42091:4;42082:6;42018:78;:::i;:::-;42010:86;;41790:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2843200","executionCost":"infinite","totalCost":"infinite"},"external":{"auctionItem()":"infinite","endAuction()":"infinite","getAuctionItem()":"infinite","getHighestBid()":"infinite","highestBid()":"infinite","initialize(address,uint256,address,uint256,uint256,address)":"infinite","owner()":"2567","placeBid(address,uint256)":"infinite","priceOracle()":"infinite","proxiableUUID()":"infinite","renounceOwnership()":"30487","transferOwnership(address)":"30810","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"auctionItem()":"c2c042ca","endAuction()":"fe67a54b","getAuctionItem()":"04de63a5","getHighestBid()":"4979440a","highestBid()":"d57bde79","initialize(address,uint256,address,uint256,uint256,address)":"871b6236","owner()":"8da5cb5b","placeBid(address,uint256)":"d98b9bb5","priceOracle()":"2630c12f","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionItem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctionItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"internalType\":\"struct Auction.AuctionItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHighestBid\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.Bid\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endAuction()\":{\"notice\":\"\\u7ed3\\u675f\\u62cd\\u5356\"},\"getAuctionItem()\":{\"notice\":\"\\u83b7\\u53d6\\u62cd\\u5356\\u9879\\u76ee\\u4fe1\\u606f\"},\"getHighestBid()\":{\"notice\":\"\\u83b7\\u53d6\\u6700\\u9ad8\\u51fa\\u4ef7\"},\"initialize(address,uint256,address,uint256,uint256,address)\":{\"notice\":\"\\u521d\\u59cb\\u5316\\u62cd\\u5356\\u5408\\u7ea6\"},\"placeBid(address,uint256)\":{\"notice\":\"\\u51fa\\u4ef7\\u51fd\\u6570\\uff0c\\u652f\\u6301\\u4ee5\\u592a\\u574a\\u548c ERC20 \\u4ee3\\u5e01\\u51fa\\u4ef7\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./PriceOracle.sol\\\";\\n\\ncontract Auction is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\n    \\n    struct AuctionItem {\\n        // \\u62cd\\u5356\\u57fa\\u672c\\u4fe1\\u606f\\u5b57\\u6bb5\\n        address nftContract;     // NFT \\u5408\\u7ea6\\u5730\\u5740\\n        uint256 tokenId;         // NFT \\u4ee3\\u5e01 ID\\n        address seller;          // \\u5356\\u5bb6\\u5730\\u5740\\n        uint256 startTime;       // \\u62cd\\u5356\\u5f00\\u59cb\\u65f6\\u95f4\\n        uint256 endTime;         // \\u62cd\\u5356\\u7ed3\\u675f\\u65f6\\u95f4\\n        bool ended;              // \\u62cd\\u5356\\u662f\\u5426\\u7ed3\\u675f\\n    }\\n\\n    struct Bid {\\n        // \\u51fa\\u4ef7\\u4fe1\\u606f\\u5b57\\u6bb5\\n        address bidder;          // \\u51fa\\u4ef7\\u4eba\\u5730\\u5740\\n        address token;           // \\u51fa\\u4ef7\\u4f7f\\u7528\\u7684\\u4ee3\\u5e01\\u5730\\u5740 (ddress(0) for ETH)\\n        uint256 amount;          // \\u51fa\\u4ef7\\u91d1\\u989d(\\u7f8e\\u5143\\u4ef7\\u503c)\\n        uint256 timestamp;       // \\u51fa\\u4ef7\\u65f6\\u95f4\\u6233\\n    }\\n\\n    Bid public highestBid;              // \\u5f53\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7\\n    AuctionItem public auctionItem;     // \\u5f53\\u524d\\u62cd\\u5356\\u9879\\u76ee\\u4fe1\\u606f\\n    PriceOracle public priceOracle;     // \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5408\\u7ea6\\u5730\\u5740\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * \\u521d\\u59cb\\u5316\\u62cd\\u5356\\u5408\\u7ea6\\n     */\\n    function initialize(\\n        address _nftContract,\\n        uint256 _tokenId,\\n        address _seller,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _priceOracle) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n\\n        // \\u521d\\u59cb\\u5316\\u62cd\\u5356\\u5408\\u7ea6\\u72b6\\u6001\\n        require(_nftContract != address(0), \\\"Invalid NFT contract address\\\");\\n        require(_seller != address(0), \\\"Invalid seller address\\\");\\n        require(_startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start time\\\");\\n        require(_priceOracle != address(0), \\\"Invalid price oracle address\\\");\\n\\n        auctionItem = AuctionItem({\\n            nftContract: _nftContract,\\n            tokenId: _tokenId,\\n            seller: _seller,\\n            startTime: _startTime,\\n            endTime: _endTime,\\n            ended: false\\n        }); \\n        priceOracle = PriceOracle(_priceOracle);\\n    }\\n\\n    /**\\n     * \\u51fa\\u4ef7\\u51fd\\u6570\\uff0c\\u652f\\u6301\\u4ee5\\u592a\\u574a\\u548c ERC20 \\u4ee3\\u5e01\\u51fa\\u4ef7\\n     */\\n    function placeBid(address _token, uint256 _amount) external payable {\\n        require(block.timestamp >= auctionItem.startTime, \\\"Auction not started yet\\\");\\n        require(block.timestamp <= auctionItem.endTime, \\\"Auction already ended\\\");\\n        require(!auctionItem.ended, \\\"Auction has ended\\\");\\n        require(_amount > 0, \\\"Bid amount must be greater than zero\\\");\\n\\n        // \\u7ade\\u62cd\\u903b\\u8f91\\n        uint256 usdAmount;\\n        if (_token == address(0)) {\\n            // \\u4ee5\\u592a\\u574a\\u51fa\\u4ef7\\u903b\\u8f91\\n            require(msg.value == _amount, \\\"ETH amount mismatch\\\");\\n            usdAmount = priceOracle.convertToUSD(address(0), _amount);\\n        } else {\\n            // ERC20 \\u4ee3\\u5e01\\u51fa\\u4ef7\\u903b\\u8f91\\n            require(msg.value == 0, \\\"ETH not accepted for ERC20 bids\\\");\\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount);\\n            usdAmount = priceOracle.convertToUSD(_token, _amount);\\n        }\\n        // \\u68c0\\u67e5\\u662f\\u5426\\u9ad8\\u4e8e\\u5f53\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7 (\\u6309\\u7f8e\\u5143\\u4ef7\\u503c\\u6bd4\\u8f83)\\n        uint256 currentHighestUSD = 0;\\n        if (highestBid.amount > 0) {\\n            currentHighestUSD = priceOracle.convertToUSD(highestBid.token, highestBid.amount);\\n        }\\n        require(usdAmount > currentHighestUSD, \\\"Bid must be higher than current highest bid\\\");\\n\\n        // \\u9000\\u8fd8\\u4e4b\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7\\n        if (highestBid.bidder != address(0)) {\\n            if (highestBid.token == address(0)) {\\n                // \\u9000\\u8fd8 ETH\\n                payable(highestBid.bidder).transfer(highestBid.amount);\\n            } else {\\n                //\\u9000\\u8fd8 ERC20 \\u4ee3\\u5e01\\n                IERC20(highestBid.token).transfer(highestBid.bidder, highestBid.amount);\\n            }\\n        }\\n\\n        // \\u66f4\\u65b0\\u6700\\u9ad8\\u51fa\\u4ef7\\n        highestBid = Bid({\\n            bidder: msg.sender,\\n            token: _token,\\n            amount: _amount,\\n            timestamp: block.timestamp\\n        });\\n    }\\n\\n    /**\\n     * \\u7ed3\\u675f\\u62cd\\u5356\\n     */\\n    function endAuction() external {\\n        require(!auctionItem.ended, \\\"Auction already ended\\\");\\n        require(block.timestamp >= auctionItem.endTime || (block.timestamp >= auctionItem.startTime && highestBid.amount > 0), \\n                \\\"Auction not ended yet\\\");   \\n        auctionItem.ended = true;\\n        // \\u5904\\u7406\\u62cd\\u5356\\u7ed3\\u679c\\n        if (highestBid.bidder != address(0)) {\\n            // \\u8f6c\\u79fb NFT \\u7ed9\\u6700\\u9ad8\\u51fa\\u4ef7\\u8005\\n            IERC721(auctionItem.nftContract).transferFrom(address(this), highestBid.bidder, auctionItem.tokenId);\\n            // \\u5c06\\u51fa\\u4ef7\\u91d1\\u989d\\u8f6c\\u7ed9\\u5356\\u5bb6\\n            if (highestBid.token == address(0)) {\\n                payable(auctionItem.seller).transfer(highestBid.amount);\\n            } else {\\n                IERC20(highestBid.token).transfer(auctionItem.seller, highestBid.amount);\\n            }\\n        } else {\\n            // \\u65e0\\u4eba\\u51fa\\u4ef7\\uff0cNFT \\u5f52\\u8fd8\\u7ed9\\u5356\\u5bb6\\n            IERC721(auctionItem.nftContract).transferFrom(address(this), auctionItem.seller, auctionItem.tokenId);\\n        }\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u6700\\u9ad8\\u51fa\\u4ef7\\n     */\\n    function getHighestBid() external view returns (Bid memory) {\\n        return highestBid;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u62cd\\u5356\\u9879\\u76ee\\u4fe1\\u606f\\n     */\\n    function getAuctionItem() external view returns (AuctionItem memory) {\\n        return auctionItem;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal virtual override onlyOwner {}\\n\\n    // \\u63a5\\u53d7\\u4ee5\\u592a\\u574a\\u8f6c\\u8d26\\n    receive() external payable {}\\n}   \",\"keccak256\":\"0x466126d9fda3c5024b4ceaeefa68f0e544b829b010dc6bc3fa2fa1231db99403\",\"license\":\"MIT\"},\"contracts/PriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceOracle {\\n    mapping(address => AggregatorV3Interface) public priceFeeds;\\n    \\n    // \\u6a21\\u62df\\u4ef7\\u683c\\u5b58\\u50a8\\uff08\\u7528\\u4e8e\\u6d4b\\u8bd5\\uff09\\n    mapping(uint256 => uint256) public testEthPrices;\\n    mapping(address => uint256) public testTokenPrices;\\n\\n    constructor(address ethUsdFeed) {\\n        // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n        priceFeeds[address(0)] = AggregatorV3Interface(ethUsdFeed); // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n    }\\n\\n    /**\\n     * \\u8bbe\\u7f6e\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5730\\u5740\\n     */\\n    function setPriceFeed(address token, address feed) external {\\n        priceFeeds[token] = AggregatorV3Interface(feed);\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n     */\\n    function getLatestPrice(address token) external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[token];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for this token\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6 ETH/USD \\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n    */\\n    function getEthUsdPrice() external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[address(0)];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for ETH\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u5c06\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\u8f6c\\u6362\\u4e3a USD \\u4ef7\\u503c\\n     */\\n    function convertToUSD(address token, uint256 amount) external view returns (uint256) {\\n        if (token == address(0)) {\\n            // ETH \\u76f4\\u63a5\\u8fd4\\u56de USD \\u4ef7\\u503c\\n            int256 ethPrice = this.getEthUsdPrice();\\n            require(ethPrice > 0, \\\"Invalid ETH price\\\");\\n            return (amount * uint256(ethPrice)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        } else {\\n            // \\u5176\\u4ed6\\u4ee3\\u5e01\\u9700\\u8981\\u5148\\u83b7\\u53d6\\u5176\\u4ef7\\u683c\\n            int256 price = this.getLatestPrice(token);\\n            require(price > 0, \\\"Invalid price\\\");\\n            return (amount * uint256(price)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        }\\n    }\\n\\n    /**\\n     * @dev \\u8bbe\\u7f6e\\u6d4b\\u8bd5\\u4ef7\\u683c\\uff08\\u4ec5\\u7528\\u4e8e\\u6d4b\\u8bd5\\u73af\\u5883\\uff09\\n     */\\n    function setTestPrice(address token, uint256 price) external {\\n        if (token == address(0)) {\\n            testEthPrices[block.chainid] = price;\\n        } else {\\n            testTokenPrices[token] = price;\\n        }\\n    }\\n}\",\"keccak256\":\"0x5da541360795204931c7e6bf78f8670d5384f9d154a4f9863489e05b575d0eff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"contracts/Auction.sol:Auction","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"contracts/Auction.sol:Auction","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1230,"contract":"contracts/Auction.sol:Auction","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":57,"contract":"contracts/Auction.sol:Auction","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":177,"contract":"contracts/Auction.sol:Auction","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":533,"contract":"contracts/Auction.sol:Auction","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":849,"contract":"contracts/Auction.sol:Auction","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":2107,"contract":"contracts/Auction.sol:Auction","label":"highestBid","offset":0,"slot":"201","type":"t_struct(Bid)2104_storage"},{"astId":2110,"contract":"contracts/Auction.sol:Auction","label":"auctionItem","offset":0,"slot":"205","type":"t_struct(AuctionItem)2095_storage"},{"astId":2113,"contract":"contracts/Auction.sol:Auction","label":"priceOracle","offset":0,"slot":"211","type":"t_contract(PriceOracle)2956"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(PriceOracle)2956":{"encoding":"inplace","label":"contract PriceOracle","numberOfBytes":"20"},"t_struct(AuctionItem)2095_storage":{"encoding":"inplace","label":"struct Auction.AuctionItem","members":[{"astId":2084,"contract":"contracts/Auction.sol:Auction","label":"nftContract","offset":0,"slot":"0","type":"t_address"},{"astId":2086,"contract":"contracts/Auction.sol:Auction","label":"tokenId","offset":0,"slot":"1","type":"t_uint256"},{"astId":2088,"contract":"contracts/Auction.sol:Auction","label":"seller","offset":0,"slot":"2","type":"t_address"},{"astId":2090,"contract":"contracts/Auction.sol:Auction","label":"startTime","offset":0,"slot":"3","type":"t_uint256"},{"astId":2092,"contract":"contracts/Auction.sol:Auction","label":"endTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":2094,"contract":"contracts/Auction.sol:Auction","label":"ended","offset":0,"slot":"5","type":"t_bool"}],"numberOfBytes":"192"},"t_struct(Bid)2104_storage":{"encoding":"inplace","label":"struct Auction.Bid","members":[{"astId":2097,"contract":"contracts/Auction.sol:Auction","label":"bidder","offset":0,"slot":"0","type":"t_address"},{"astId":2099,"contract":"contracts/Auction.sol:Auction","label":"token","offset":0,"slot":"1","type":"t_address"},{"astId":2101,"contract":"contracts/Auction.sol:Auction","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":2103,"contract":"contracts/Auction.sol:Auction","label":"timestamp","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"endAuction()":{"notice":"结束拍卖"},"getAuctionItem()":{"notice":"获取拍卖项目信息"},"getHighestBid()":{"notice":"获取最高出价"},"initialize(address,uint256,address,uint256,uint256,address)":{"notice":"初始化拍卖合约"},"placeBid(address,uint256)":{"notice":"出价函数，支持以太坊和 ERC20 代币出价"}},"version":1}}},"contracts/AuctionFactory.sol":{"AuctionFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"auctionImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"auctions","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_seller","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"createAuction","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuctions","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_auctionImplementation","type":"address"},{"internalType":"address","name":"_priceOracle","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2559":{"entryPoint":null,"id":2559,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_694":{"entryPoint":87,"id":694,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":455,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":410,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":470,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":279,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":442,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":296,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1638:20","nodeType":"YulBlock","src":"0:1638:20","statements":[{"body":{"nativeSrc":"103:73:20","nodeType":"YulBlock","src":"103:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"120:3:20","nodeType":"YulIdentifier","src":"120:3:20"},{"name":"length","nativeSrc":"125:6:20","nodeType":"YulIdentifier","src":"125:6:20"}],"functionName":{"name":"mstore","nativeSrc":"113:6:20","nodeType":"YulIdentifier","src":"113:6:20"},"nativeSrc":"113:19:20","nodeType":"YulFunctionCall","src":"113:19:20"},"nativeSrc":"113:19:20","nodeType":"YulExpressionStatement","src":"113:19:20"},{"nativeSrc":"141:29:20","nodeType":"YulAssignment","src":"141:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"160:3:20","nodeType":"YulIdentifier","src":"160:3:20"},{"kind":"number","nativeSrc":"165:4:20","nodeType":"YulLiteral","src":"165:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"156:3:20","nodeType":"YulIdentifier","src":"156:3:20"},"nativeSrc":"156:14:20","nodeType":"YulFunctionCall","src":"156:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"141:11:20","nodeType":"YulIdentifier","src":"141:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"75:3:20","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nativeSrc":"80:6:20","nodeType":"YulTypedName","src":"80:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"91:11:20","nodeType":"YulTypedName","src":"91:11:20","type":""}],"src":"7:169:20"},{"body":{"nativeSrc":"288:120:20","nodeType":"YulBlock","src":"288:120:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},{"kind":"number","nativeSrc":"318:1:20","nodeType":"YulLiteral","src":"318:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"306:3:20","nodeType":"YulIdentifier","src":"306:3:20"},"nativeSrc":"306:14:20","nodeType":"YulFunctionCall","src":"306:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nativeSrc":"322:34:20","nodeType":"YulLiteral","src":"322:34:20","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nativeSrc":"299:6:20","nodeType":"YulIdentifier","src":"299:6:20"},"nativeSrc":"299:58:20","nodeType":"YulFunctionCall","src":"299:58:20"},"nativeSrc":"299:58:20","nodeType":"YulExpressionStatement","src":"299:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"378:6:20","nodeType":"YulIdentifier","src":"378:6:20"},{"kind":"number","nativeSrc":"386:2:20","nodeType":"YulLiteral","src":"386:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"374:3:20","nodeType":"YulIdentifier","src":"374:3:20"},"nativeSrc":"374:15:20","nodeType":"YulFunctionCall","src":"374:15:20"},{"hexValue":"616c697a696e67","kind":"string","nativeSrc":"391:9:20","nodeType":"YulLiteral","src":"391:9:20","type":"","value":"alizing"}],"functionName":{"name":"mstore","nativeSrc":"367:6:20","nodeType":"YulIdentifier","src":"367:6:20"},"nativeSrc":"367:34:20","nodeType":"YulFunctionCall","src":"367:34:20"},"nativeSrc":"367:34:20","nodeType":"YulExpressionStatement","src":"367:34:20"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nativeSrc":"182:226:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"280:6:20","nodeType":"YulTypedName","src":"280:6:20","type":""}],"src":"182:226:20"},{"body":{"nativeSrc":"560:220:20","nodeType":"YulBlock","src":"560:220:20","statements":[{"nativeSrc":"570:74:20","nodeType":"YulAssignment","src":"570:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"636:3:20","nodeType":"YulIdentifier","src":"636:3:20"},{"kind":"number","nativeSrc":"641:2:20","nodeType":"YulLiteral","src":"641:2:20","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"577:58:20","nodeType":"YulIdentifier","src":"577:58:20"},"nativeSrc":"577:67:20","nodeType":"YulFunctionCall","src":"577:67:20"},"variableNames":[{"name":"pos","nativeSrc":"570:3:20","nodeType":"YulIdentifier","src":"570:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"742:3:20","nodeType":"YulIdentifier","src":"742:3:20"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nativeSrc":"653:88:20","nodeType":"YulIdentifier","src":"653:88:20"},"nativeSrc":"653:93:20","nodeType":"YulFunctionCall","src":"653:93:20"},"nativeSrc":"653:93:20","nodeType":"YulExpressionStatement","src":"653:93:20"},{"nativeSrc":"755:19:20","nodeType":"YulAssignment","src":"755:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"766:3:20","nodeType":"YulIdentifier","src":"766:3:20"},{"kind":"number","nativeSrc":"771:2:20","nodeType":"YulLiteral","src":"771:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"762:3:20","nodeType":"YulIdentifier","src":"762:3:20"},"nativeSrc":"762:12:20","nodeType":"YulFunctionCall","src":"762:12:20"},"variableNames":[{"name":"end","nativeSrc":"755:3:20","nodeType":"YulIdentifier","src":"755:3:20"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nativeSrc":"414:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"548:3:20","nodeType":"YulTypedName","src":"548:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"556:3:20","nodeType":"YulTypedName","src":"556:3:20","type":""}],"src":"414:366:20"},{"body":{"nativeSrc":"957:248:20","nodeType":"YulBlock","src":"957:248:20","statements":[{"nativeSrc":"967:26:20","nodeType":"YulAssignment","src":"967:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"979:9:20","nodeType":"YulIdentifier","src":"979:9:20"},{"kind":"number","nativeSrc":"990:2:20","nodeType":"YulLiteral","src":"990:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"975:3:20","nodeType":"YulIdentifier","src":"975:3:20"},"nativeSrc":"975:18:20","nodeType":"YulFunctionCall","src":"975:18:20"},"variableNames":[{"name":"tail","nativeSrc":"967:4:20","nodeType":"YulIdentifier","src":"967:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1014:9:20","nodeType":"YulIdentifier","src":"1014:9:20"},{"kind":"number","nativeSrc":"1025:1:20","nodeType":"YulLiteral","src":"1025:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1010:3:20","nodeType":"YulIdentifier","src":"1010:3:20"},"nativeSrc":"1010:17:20","nodeType":"YulFunctionCall","src":"1010:17:20"},{"arguments":[{"name":"tail","nativeSrc":"1033:4:20","nodeType":"YulIdentifier","src":"1033:4:20"},{"name":"headStart","nativeSrc":"1039:9:20","nodeType":"YulIdentifier","src":"1039:9:20"}],"functionName":{"name":"sub","nativeSrc":"1029:3:20","nodeType":"YulIdentifier","src":"1029:3:20"},"nativeSrc":"1029:20:20","nodeType":"YulFunctionCall","src":"1029:20:20"}],"functionName":{"name":"mstore","nativeSrc":"1003:6:20","nodeType":"YulIdentifier","src":"1003:6:20"},"nativeSrc":"1003:47:20","nodeType":"YulFunctionCall","src":"1003:47:20"},"nativeSrc":"1003:47:20","nodeType":"YulExpressionStatement","src":"1003:47:20"},{"nativeSrc":"1059:139:20","nodeType":"YulAssignment","src":"1059:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"1193:4:20","nodeType":"YulIdentifier","src":"1193:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nativeSrc":"1067:124:20","nodeType":"YulIdentifier","src":"1067:124:20"},"nativeSrc":"1067:131:20","nodeType":"YulFunctionCall","src":"1067:131:20"},"variableNames":[{"name":"tail","nativeSrc":"1059:4:20","nodeType":"YulIdentifier","src":"1059:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"786:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"937:9:20","nodeType":"YulTypedName","src":"937:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"952:4:20","nodeType":"YulTypedName","src":"952:4:20","type":""}],"src":"786:419:20"},{"body":{"nativeSrc":"1254:43:20","nodeType":"YulBlock","src":"1254:43:20","statements":[{"nativeSrc":"1264:27:20","nodeType":"YulAssignment","src":"1264:27:20","value":{"arguments":[{"name":"value","nativeSrc":"1279:5:20","nodeType":"YulIdentifier","src":"1279:5:20"},{"kind":"number","nativeSrc":"1286:4:20","nodeType":"YulLiteral","src":"1286:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1275:3:20","nodeType":"YulIdentifier","src":"1275:3:20"},"nativeSrc":"1275:16:20","nodeType":"YulFunctionCall","src":"1275:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1264:7:20","nodeType":"YulIdentifier","src":"1264:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"1211:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1236:5:20","nodeType":"YulTypedName","src":"1236:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1246:7:20","nodeType":"YulTypedName","src":"1246:7:20","type":""}],"src":"1211:86:20"},{"body":{"nativeSrc":"1364:51:20","nodeType":"YulBlock","src":"1364:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1381:3:20","nodeType":"YulIdentifier","src":"1381:3:20"},{"arguments":[{"name":"value","nativeSrc":"1402:5:20","nodeType":"YulIdentifier","src":"1402:5:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"1386:15:20","nodeType":"YulIdentifier","src":"1386:15:20"},"nativeSrc":"1386:22:20","nodeType":"YulFunctionCall","src":"1386:22:20"}],"functionName":{"name":"mstore","nativeSrc":"1374:6:20","nodeType":"YulIdentifier","src":"1374:6:20"},"nativeSrc":"1374:35:20","nodeType":"YulFunctionCall","src":"1374:35:20"},"nativeSrc":"1374:35:20","nodeType":"YulExpressionStatement","src":"1374:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"1303:112:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1352:5:20","nodeType":"YulTypedName","src":"1352:5:20","type":""},{"name":"pos","nativeSrc":"1359:3:20","nodeType":"YulTypedName","src":"1359:3:20","type":""}],"src":"1303:112:20"},{"body":{"nativeSrc":"1515:120:20","nodeType":"YulBlock","src":"1515:120:20","statements":[{"nativeSrc":"1525:26:20","nodeType":"YulAssignment","src":"1525:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1537:9:20","nodeType":"YulIdentifier","src":"1537:9:20"},{"kind":"number","nativeSrc":"1548:2:20","nodeType":"YulLiteral","src":"1548:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1533:3:20","nodeType":"YulIdentifier","src":"1533:3:20"},"nativeSrc":"1533:18:20","nodeType":"YulFunctionCall","src":"1533:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1525:4:20","nodeType":"YulIdentifier","src":"1525:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1601:6:20","nodeType":"YulIdentifier","src":"1601:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"1614:9:20","nodeType":"YulIdentifier","src":"1614:9:20"},{"kind":"number","nativeSrc":"1625:1:20","nodeType":"YulLiteral","src":"1625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1610:3:20","nodeType":"YulIdentifier","src":"1610:3:20"},"nativeSrc":"1610:17:20","nodeType":"YulFunctionCall","src":"1610:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"1561:39:20","nodeType":"YulIdentifier","src":"1561:39:20"},"nativeSrc":"1561:67:20","nodeType":"YulFunctionCall","src":"1561:67:20"},"nativeSrc":"1561:67:20","nodeType":"YulExpressionStatement","src":"1561:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1421:214:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1487:9:20","nodeType":"YulTypedName","src":"1487:9:20","type":""},{"name":"value0","nativeSrc":"1499:6:20","nodeType":"YulTypedName","src":"1499:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1510:4:20","nodeType":"YulTypedName","src":"1510:4:20","type":""}],"src":"1421:214:20"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101f1565b600060019054906101000a900460ff16156100a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009e9061019a565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff16146101155760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff60405161010c91906101d6565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b6000610184602783610117565b915061018f82610128565b604082019050919050565b600060208201905081810360008301526101b381610177565b9050919050565b600060ff82169050919050565b6101d0816101ba565b82525050565b60006020820190506101eb60008301846101c7565b92915050565b608051612774610228600039600081816102d3015281816103610152818161070301528181610791015261084101526127746000f3fe6080604052600436106100a75760003560e01c80636a7f3f6c116100645780636a7f3f6c146101ad578063715018a6146101d85780638da5cb5b146101ef578063d7c069191461021a578063f2df504714610245578063f2fde38b14610282576100a7565b80632630c12f146100ac5780633659cfe6146100d7578063485cc955146101005780634f1ef2861461012957806352d1902d14610145578063571a26a014610170575b600080fd5b3480156100b857600080fd5b506100c16102ab565b6040516100ce91906116f8565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190611753565b6102d1565b005b34801561010c57600080fd5b5061012760048036038101906101229190611780565b610459565b005b610143600480360381019061013e9190611906565b610701565b005b34801561015157600080fd5b5061015a61083d565b604051610167919061197b565b60405180910390f35b34801561017c57600080fd5b50610197600480360381019061019291906119cc565b6108f6565b6040516101a491906116f8565b60405180910390f35b3480156101b957600080fd5b506101c2610935565b6040516101cf91906116f8565b60405180910390f35b3480156101e457600080fd5b506101ed61095b565b005b3480156101fb57600080fd5b5061020461096f565b60405161021191906116f8565b60405180910390f35b34801561022657600080fd5b5061022f610999565b60405161023c9190611ab7565b60405180910390f35b34801561025157600080fd5b5061026c60048036038101906102679190611ad9565b610a27565b60405161027991906116f8565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a49190611753565b610e1e565b005b60ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690611bd7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661039e610ea1565b73ffffffffffffffffffffffffffffffffffffffff16146103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb90611c69565b60405180910390fd5b6103fd81610ef8565b61045681600067ffffffffffffffff81111561041c5761041b6117db565b5b6040519080825280601f01601f19166020018201604052801561044e5781602001600182028036833780820191505090505b506000610f03565b50565b60008060019054906101000a900460ff1615905080801561048a5750600160008054906101000a900460ff1660ff16105b806104b7575061049930611071565b1580156104b65750600160008054906101000a900460ff1660ff16145b5b6104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611cfb565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610533576001600060016101000a81548160ff0219169083151502179055505b61053b611094565b6105436110ed565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990611d67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061890611dd3565b60405180910390fd5b8260cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160ca60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106fc5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516106f39190611e45565b60405180910390a15b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff160361078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690611bd7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107ce610ea1565b73ffffffffffffffffffffffffffffffffffffffff1614610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90611c69565b60405180910390fd5b61082d82610ef8565b61083982826001610f03565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146108cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c490611ed2565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60c9818154811061090657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61096361113e565b61096d60006111bc565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060c9805480602002602001604051908101604052809291908181526020018280548015610a1d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109d3575b5050505050905090565b6000610a3161113e565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9790611f3e565b60405180910390fd5b42831015610ae3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ada90611faa565b60405180910390fd5b828211610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c9061203c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b8152600401610b75919061206b565b602060405180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb6919061209b565b73ffffffffffffffffffffffffffffffffffffffff1614610c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0390612114565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b330876040518363ffffffff1660e01b8152600401610c47929190612134565b600060405180830381600087803b158015610c6157600080fd5b505af1158015610c75573d6000803e3d6000fd5b505050506000610ca660cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611282565b90508073ffffffffffffffffffffffffffffffffffffffff1663871b6236888888888860ca60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff1660e01b8152600401610d0d9695949392919061215d565b600060405180830381600087803b158015610d2757600080fd5b505af1158015610d3b573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff166323b872dd3383896040518463ffffffff1660e01b8152600401610d7c939291906121be565b600060405180830381600087803b158015610d9657600080fd5b505af1158015610daa573d6000803e3d6000fd5b5050505060c9819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508091505095945050505050565b610e2661113e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c90612267565b60405180910390fd5b610e9e816111bc565b50565b6000610ecf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611296565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f0061113e565b50565b610f2f7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b6112a0565b60000160009054906101000a900460ff1615610f5357610f4e836112aa565b61106c565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610fbb57506040513d601f19601f82011682018060405250810190610fb891906122b3565b60015b610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190612352565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461105f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611056906123e4565b60405180910390fd5b5061106b838383611363565b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166110e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110da90612476565b60405180910390fd5b6110eb61138f565b565b600060019054906101000a900460ff1661113c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113390612476565b60405180910390fd5b565b6111466113f0565b73ffffffffffffffffffffffffffffffffffffffff1661116461096f565b73ffffffffffffffffffffffffffffffffffffffff16146111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b1906124e2565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061128f8260006113f8565b9050919050565b6000819050919050565b6000819050919050565b6112b381611071565b6112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612574565b60405180910390fd5b8061131f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611296565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61136c836114f0565b6000825111806113795750805b1561138a57611388838361153f565b505b505050565b600060019054906101000a900460ff166113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d590612476565b60405180910390fd5b6113ee6113e96113f0565b6111bc565b565b600033905090565b6000814710156114415747826040517fcf479181000000000000000000000000000000000000000000000000000000008152600401611438929190612594565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ea576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b6114f9816112aa565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b606061156483836040518060600160405280602781526020016127186027913961156c565b905092915050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611596919061262e565b600060405180830381855af49150503d80600081146115d1576040519150601f19603f3d011682016040523d82523d6000602084013e6115d6565b606091505b50915091506115e7868383876115f2565b925050509392505050565b6060831561165457600083510361164c5761160c85611071565b61164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290612691565b60405180910390fd5b5b82905061165f565b61165e8383611667565b5b949350505050565b60008251111561167a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ae91906126f5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116e2826116b7565b9050919050565b6116f2816116d7565b82525050565b600060208201905061170d60008301846116e9565b92915050565b6000604051905090565b600080fd5b600080fd5b611730816116d7565b811461173b57600080fd5b50565b60008135905061174d81611727565b92915050565b6000602082840312156117695761176861171d565b5b60006117778482850161173e565b91505092915050565b600080604083850312156117975761179661171d565b5b60006117a58582860161173e565b92505060206117b68582860161173e565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611813826117ca565b810181811067ffffffffffffffff82111715611832576118316117db565b5b80604052505050565b6000611845611713565b9050611851828261180a565b919050565b600067ffffffffffffffff821115611871576118706117db565b5b61187a826117ca565b9050602081019050919050565b82818337600083830152505050565b60006118a96118a484611856565b61183b565b9050828152602081018484840111156118c5576118c46117c5565b5b6118d0848285611887565b509392505050565b600082601f8301126118ed576118ec6117c0565b5b81356118fd848260208601611896565b91505092915050565b6000806040838503121561191d5761191c61171d565b5b600061192b8582860161173e565b925050602083013567ffffffffffffffff81111561194c5761194b611722565b5b611958858286016118d8565b9150509250929050565b6000819050919050565b61197581611962565b82525050565b6000602082019050611990600083018461196c565b92915050565b6000819050919050565b6119a981611996565b81146119b457600080fd5b50565b6000813590506119c6816119a0565b92915050565b6000602082840312156119e2576119e161171d565b5b60006119f0848285016119b7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a2e816116d7565b82525050565b6000611a408383611a25565b60208301905092915050565b6000602082019050919050565b6000611a64826119f9565b611a6e8185611a04565b9350611a7983611a15565b8060005b83811015611aaa578151611a918882611a34565b9750611a9c83611a4c565b925050600181019050611a7d565b5085935050505092915050565b60006020820190508181036000830152611ad18184611a59565b905092915050565b600080600080600060a08688031215611af557611af461171d565b5b6000611b038882890161173e565b9550506020611b14888289016119b7565b9450506040611b258882890161173e565b9350506060611b36888289016119b7565b9250506080611b47888289016119b7565b9150509295509295909350565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b6000611bc1602c83611b54565b9150611bcc82611b65565b604082019050919050565b60006020820190508181036000830152611bf081611bb4565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611c53602c83611b54565b9150611c5e82611bf7565b604082019050919050565b60006020820190508181036000830152611c8281611c46565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611ce5602e83611b54565b9150611cf082611c89565b604082019050919050565b60006020820190508181036000830152611d1481611cd8565b9050919050565b7f496e76616c69642061756374696f6e20696d706c656d656e746174696f6e0000600082015250565b6000611d51601e83611b54565b9150611d5c82611d1b565b602082019050919050565b60006020820190508181036000830152611d8081611d44565b9050919050565b7f496e76616c6964207072696365206f7261636c65000000000000000000000000600082015250565b6000611dbd601483611b54565b9150611dc882611d87565b602082019050919050565b60006020820190508181036000830152611dec81611db0565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000611e2f611e2a611e2584611df3565b611e0a565b611dfd565b9050919050565b611e3f81611e14565b82525050565b6000602082019050611e5a6000830184611e36565b92915050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000611ebc603883611b54565b9150611ec782611e60565b604082019050919050565b60006020820190508181036000830152611eeb81611eaf565b9050919050565b7f496e76616c6964204e465420636f6e7472616374000000000000000000000000600082015250565b6000611f28601483611b54565b9150611f3382611ef2565b602082019050919050565b60006020820190508181036000830152611f5781611f1b565b9050919050565b7f53746172742074696d65206d75737420626520696e2074686520667574757265600082015250565b6000611f94602083611b54565b9150611f9f82611f5e565b602082019050919050565b60006020820190508181036000830152611fc381611f87565b9050919050565b7f456e642074696d65206d7573742062652061667465722073746172742074696d60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000612026602183611b54565b915061203182611fca565b604082019050919050565b6000602082019050818103600083015261205581612019565b9050919050565b61206581611996565b82525050565b6000602082019050612080600083018461205c565b92915050565b60008151905061209581611727565b92915050565b6000602082840312156120b1576120b061171d565b5b60006120bf84828501612086565b91505092915050565b7f4e6f74206f776e6572206f66204e465400000000000000000000000000000000600082015250565b60006120fe601083611b54565b9150612109826120c8565b602082019050919050565b6000602082019050818103600083015261212d816120f1565b9050919050565b600060408201905061214960008301856116e9565b612156602083018461205c565b9392505050565b600060c08201905061217260008301896116e9565b61217f602083018861205c565b61218c60408301876116e9565b612199606083018661205c565b6121a6608083018561205c565b6121b360a08301846116e9565b979650505050505050565b60006060820190506121d360008301866116e9565b6121e060208301856116e9565b6121ed604083018461205c565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612251602683611b54565b915061225c826121f5565b604082019050919050565b6000602082019050818103600083015261228081612244565b9050919050565b61229081611962565b811461229b57600080fd5b50565b6000815190506122ad81612287565b92915050565b6000602082840312156122c9576122c861171d565b5b60006122d78482850161229e565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b600061233c602e83611b54565b9150612347826122e0565b604082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006123ce602983611b54565b91506123d982612372565b604082019050919050565b600060208201905081810360008301526123fd816123c1565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612460602b83611b54565b915061246b82612404565b604082019050919050565b6000602082019050818103600083015261248f81612453565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006124cc602083611b54565b91506124d782612496565b602082019050919050565b600060208201905081810360008301526124fb816124bf565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600061255e602d83611b54565b915061256982612502565b604082019050919050565b6000602082019050818103600083015261258d81612551565b9050919050565b60006040820190506125a9600083018561205c565b6125b6602083018461205c565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156125f15780820151818401526020810190506125d6565b60008484015250505050565b6000612608826125bd565b61261281856125c8565b93506126228185602086016125d3565b80840191505092915050565b600061263a82846125fd565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061267b601d83611b54565b915061268682612645565b602082019050919050565b600060208201905081810360008301526126aa8161266e565b9050919050565b600081519050919050565b60006126c7826126b1565b6126d18185611b54565b93506126e18185602086016125d3565b6126ea816117ca565b840191505092915050565b6000602082019050818103600083015261270f81846126bc565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122081c6c4eba6bc207b1ba1d60be40e088becdab8f2213aa06f33968be4466d442b64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x115 JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184 PUSH1 0x27 DUP4 PUSH2 0x117 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F DUP3 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3 DUP2 PUSH2 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0 DUP2 PUSH2 0x1BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2774 PUSH2 0x228 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2D3 ADD MSTORE DUP2 DUP2 PUSH2 0x361 ADD MSTORE DUP2 DUP2 PUSH2 0x703 ADD MSTORE DUP2 DUP2 PUSH2 0x791 ADD MSTORE PUSH2 0x841 ADD MSTORE PUSH2 0x2774 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A7F3F6C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6A7F3F6C EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7C06919 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xF2DF5047 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x282 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x2630C12F EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x356 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x39E PUSH2 0xEA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FD DUP2 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x456 DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x17DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0xF03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x48A JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x4B7 JUMPI POP PUSH2 0x499 ADDRESS PUSH2 0x1071 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x53B PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x543 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CE PUSH2 0xEA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81B SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D DUP3 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x839 DUP3 DUP3 PUSH1 0x1 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x963 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x96D PUSH1 0x0 PUSH2 0x11BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA1D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9D3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA31 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 LT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP3 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xCA6 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1282 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x871B6236 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xC9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x11BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x113E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF2F PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF53 JUMPI PUSH2 0xF4E DUP4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x106C JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF1 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x106B DUP4 DUP4 DUP4 PUSH2 0x1363 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EB PUSH2 0x138F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1133 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1146 PUSH2 0x13F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1164 PUSH2 0x96F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128F DUP3 PUSH1 0x0 PUSH2 0x13F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x131F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x136C DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1379 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x138A JUMPI PUSH2 0x1388 DUP4 DUP4 PUSH2 0x153F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D5 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EE PUSH2 0x13E9 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1441 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1438 SWAP3 SWAP2 SWAP1 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1564 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2718 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15E7 DUP7 DUP4 DUP4 DUP8 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x164C JUMPI PUSH2 0x160C DUP6 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1642 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x165F JUMP JUMPDEST PUSH2 0x165E DUP4 DUP4 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x167A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AE SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x170D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174D DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP5 DUP3 DUP6 ADD PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1797 JUMPI PUSH2 0x1796 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1813 DUP3 PUSH2 0x17CA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x17DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1845 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH2 0x1851 DUP3 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x17DB JUMP JUMPDEST JUMPDEST PUSH2 0x187A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A9 PUSH2 0x18A4 DUP5 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x18D0 DUP5 DUP3 DUP6 PUSH2 0x1887 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x1722 JUMP JUMPDEST JUMPDEST PUSH2 0x1958 DUP6 DUP3 DUP7 ADD PUSH2 0x18D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C6 DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F0 DUP5 DUP3 DUP6 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 DUP4 DUP4 PUSH2 0x1A25 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 DUP3 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0x1A6E DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A79 DUP4 PUSH2 0x1A15 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AAA JUMPI DUP2 MLOAD PUSH2 0x1A91 DUP9 DUP3 PUSH2 0x1A34 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A9C DUP4 PUSH2 0x1A4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A7D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD1 DUP2 DUP5 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF4 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B03 DUP9 DUP3 DUP10 ADD PUSH2 0x173E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B14 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B25 DUP9 DUP3 DUP10 ADD PUSH2 0x173E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B36 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B47 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH1 0x2C DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP3 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF0 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C53 PUSH1 0x2C DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5E DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 PUSH2 0x1C46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 PUSH1 0x2E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF0 DUP3 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D14 DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061756374696F6E20696D706C656D656E746174696F6E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D51 PUSH1 0x1E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5C DUP3 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D80 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207072696365206F7261636C65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD PUSH1 0x14 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2F PUSH2 0x1E2A PUSH2 0x1E25 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3F DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH1 0x38 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC7 DUP3 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EEB DUP2 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204E465420636F6E7472616374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F28 PUSH1 0x14 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP3 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC3 DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2026 PUSH1 0x21 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2031 DUP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2055 DUP2 PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2065 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2080 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2095 DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BF DUP5 DUP3 DUP6 ADD PUSH2 0x2086 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66204E465400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE PUSH1 0x10 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2109 DUP3 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212D DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2149 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x2156 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x21A6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x21E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x21ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2251 PUSH1 0x26 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x225C DUP3 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2280 DUP2 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2290 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP2 EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22AD DUP2 PUSH2 0x2287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C9 JUMPI PUSH2 0x22C8 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D7 DUP5 DUP3 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233C PUSH1 0x2E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2347 DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x232F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CE PUSH1 0x29 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D9 DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FD DUP2 PUSH2 0x23C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH1 0x2B DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x246B DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CC PUSH1 0x20 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D7 DUP3 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24FB DUP2 PUSH2 0x24BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255E PUSH1 0x2D DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2569 DUP3 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258D DUP2 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25A9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x25B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2608 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH2 0x2612 DUP2 DUP6 PUSH2 0x25C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2622 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25D3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263A DUP3 DUP5 PUSH2 0x25FD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267B PUSH1 0x1D DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2686 DUP3 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 PUSH2 0x266E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C7 DUP3 PUSH2 0x26B1 JUMP JUMPDEST PUSH2 0x26D1 DUP2 DUP6 PUSH2 0x1B54 JUMP JUMPDEST SWAP4 POP PUSH2 0x26E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0x26EA DUP2 PUSH2 0x17CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270F DUP2 DUP5 PUSH2 0x26BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122081C6C4 0xEB 0xA6 0xBC KECCAK256 PUSH28 0x1BA1D60BE40E088BECDAB8F2213AA06F33968BE4466D442B64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"363:2155:18:-:0;;;1198:4:7;1155:48;;;;;;;;;708:53:18;;;;;;;;;;732:22;:20;;;:22;;:::i;:::-;363:2155;;5939:280:6;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:20:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;363:2155:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__Ownable_init_73":{"entryPoint":4244,"id":73,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_84":{"entryPoint":5007,"id":84,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_777":{"entryPoint":4333,"id":777,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2730":{"entryPoint":3832,"id":2730,"parameterSlots":1,"returnSlots":0},"@_checkOwner_115":{"entryPoint":4414,"id":115,"parameterSlots":0,"returnSlots":0},"@_getImplementation_255":{"entryPoint":3745,"id":255,"parameterSlots":0,"returnSlots":1},"@_msgSender_1208":{"entryPoint":5104,"id":1208,"parameterSlots":0,"returnSlots":1},"@_revert_1179":{"entryPoint":5735,"id":1179,"parameterSlots":2,"returnSlots":0},"@_setImplementation_279":{"entryPoint":4778,"id":279,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_172":{"entryPoint":4540,"id":172,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_377":{"entryPoint":3843,"id":377,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_324":{"entryPoint":4963,"id":324,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_294":{"entryPoint":5360,"id":294,"parameterSlots":1,"returnSlots":0},"@auctionImplementation_2551":{"entryPoint":2357,"id":2551,"parameterSlots":0,"returnSlots":0},"@auctions_2547":{"entryPoint":2294,"id":2547,"parameterSlots":0,"returnSlots":0},"@clone_1364":{"entryPoint":4738,"id":1364,"parameterSlots":1,"returnSlots":1},"@clone_1409":{"entryPoint":5112,"id":1409,"parameterSlots":2,"returnSlots":1},"@createAuction_2711":{"entryPoint":2599,"id":2711,"parameterSlots":5,"returnSlots":1},"@functionDelegateCall_1067":{"entryPoint":5439,"id":1067,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1096":{"entryPoint":5484,"id":1096,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_1263":{"entryPoint":4758,"id":1263,"parameterSlots":1,"returnSlots":1},"@getAuctions_2721":{"entryPoint":2457,"id":2721,"parameterSlots":0,"returnSlots":1},"@getBooleanSlot_1274":{"entryPoint":4768,"id":1274,"parameterSlots":1,"returnSlots":1},"@initialize_2603":{"entryPoint":1113,"id":2603,"parameterSlots":2,"returnSlots":0},"@isContract_868":{"entryPoint":4209,"id":868,"parameterSlots":1,"returnSlots":1},"@owner_101":{"entryPoint":2415,"id":101,"parameterSlots":0,"returnSlots":1},"@priceOracle_2549":{"entryPoint":683,"id":2549,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_795":{"entryPoint":2109,"id":795,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_129":{"entryPoint":2395,"id":129,"parameterSlots":0,"returnSlots":0},"@transferOwnership_152":{"entryPoint":3614,"id":152,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_838":{"entryPoint":1793,"id":838,"parameterSlots":2,"returnSlots":0},"@upgradeTo_817":{"entryPoint":721,"id":817,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1135":{"entryPoint":5618,"id":1135,"parameterSlots":4,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6294,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":8862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":8347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6016,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6406,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256":{"entryPoint":6873,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":8883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":6708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":6693,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5865,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6508,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9725,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":7734,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":8772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128_to_t_string_memory_ptr_fromStack":{"entryPoint":7963,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack":{"entryPoint":7092,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack":{"entryPoint":7238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7855,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack":{"entryPoint":9153,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":7384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack":{"entryPoint":9007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack":{"entryPoint":8071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack":{"entryPoint":9553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":9407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29_to_t_string_memory_ptr_fromStack":{"entryPoint":7600,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack":{"entryPoint":8433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack":{"entryPoint":9838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack":{"entryPoint":8217,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":9299,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927_to_t_string_memory_ptr_fromStack":{"entryPoint":7492,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9774,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":8638,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8500,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":8541,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":7749,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9188,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7419,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8106,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9442,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7635,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7527,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9620,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":6203,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5907,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6230,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6677,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6649,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9661,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9905,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6732,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":6660,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9672,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6996,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6498,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5815,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6550,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7677,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":7700,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6279,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9683,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":6154,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":7690,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":6107,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6080,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6085,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5922,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5917,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6090,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":8693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128":{"entryPoint":7922,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb":{"entryPoint":7013,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434":{"entryPoint":7159,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4":{"entryPoint":7776,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c":{"entryPoint":9074,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":7305,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24":{"entryPoint":8928,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466":{"entryPoint":8030,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65":{"entryPoint":9474,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":9366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29":{"entryPoint":7559,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721":{"entryPoint":8392,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad":{"entryPoint":9797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5":{"entryPoint":8138,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":9220,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927":{"entryPoint":7451,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5927,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8839,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6560,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:32477:20","nodeType":"YulBlock","src":"0:32477:20","statements":[{"body":{"nativeSrc":"52:81:20","nodeType":"YulBlock","src":"52:81:20","statements":[{"nativeSrc":"62:65:20","nodeType":"YulAssignment","src":"62:65:20","value":{"arguments":[{"name":"value","nativeSrc":"77:5:20","nodeType":"YulIdentifier","src":"77:5:20"},{"kind":"number","nativeSrc":"84:42:20","nodeType":"YulLiteral","src":"84:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:20","nodeType":"YulIdentifier","src":"73:3:20"},"nativeSrc":"73:54:20","nodeType":"YulFunctionCall","src":"73:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:126:20"},{"body":{"nativeSrc":"184:51:20","nodeType":"YulBlock","src":"184:51:20","statements":[{"nativeSrc":"194:35:20","nodeType":"YulAssignment","src":"194:35:20","value":{"arguments":[{"name":"value","nativeSrc":"223:5:20","nodeType":"YulIdentifier","src":"223:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:20","nodeType":"YulIdentifier","src":"205:17:20"},"nativeSrc":"205:24:20","nodeType":"YulFunctionCall","src":"205:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:20","nodeType":"YulIdentifier","src":"194:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:20","nodeType":"YulTypedName","src":"166:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:20","nodeType":"YulTypedName","src":"176:7:20","type":""}],"src":"139:96:20"},{"body":{"nativeSrc":"306:53:20","nodeType":"YulBlock","src":"306:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:20","nodeType":"YulIdentifier","src":"323:3:20"},{"arguments":[{"name":"value","nativeSrc":"346:5:20","nodeType":"YulIdentifier","src":"346:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:20","nodeType":"YulIdentifier","src":"328:17:20"},"nativeSrc":"328:24:20","nodeType":"YulFunctionCall","src":"328:24:20"}],"functionName":{"name":"mstore","nativeSrc":"316:6:20","nodeType":"YulIdentifier","src":"316:6:20"},"nativeSrc":"316:37:20","nodeType":"YulFunctionCall","src":"316:37:20"},"nativeSrc":"316:37:20","nodeType":"YulExpressionStatement","src":"316:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:20","nodeType":"YulTypedName","src":"294:5:20","type":""},{"name":"pos","nativeSrc":"301:3:20","nodeType":"YulTypedName","src":"301:3:20","type":""}],"src":"241:118:20"},{"body":{"nativeSrc":"463:124:20","nodeType":"YulBlock","src":"463:124:20","statements":[{"nativeSrc":"473:26:20","nodeType":"YulAssignment","src":"473:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:20","nodeType":"YulIdentifier","src":"485:9:20"},{"kind":"number","nativeSrc":"496:2:20","nodeType":"YulLiteral","src":"496:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:20","nodeType":"YulIdentifier","src":"481:3:20"},"nativeSrc":"481:18:20","nodeType":"YulFunctionCall","src":"481:18:20"},"variableNames":[{"name":"tail","nativeSrc":"473:4:20","nodeType":"YulIdentifier","src":"473:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:20","nodeType":"YulIdentifier","src":"553:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:20","nodeType":"YulIdentifier","src":"566:9:20"},{"kind":"number","nativeSrc":"577:1:20","nodeType":"YulLiteral","src":"577:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:20","nodeType":"YulIdentifier","src":"562:3:20"},"nativeSrc":"562:17:20","nodeType":"YulFunctionCall","src":"562:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:20","nodeType":"YulIdentifier","src":"509:43:20"},"nativeSrc":"509:71:20","nodeType":"YulFunctionCall","src":"509:71:20"},"nativeSrc":"509:71:20","nodeType":"YulExpressionStatement","src":"509:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:20","nodeType":"YulTypedName","src":"435:9:20","type":""},{"name":"value0","nativeSrc":"447:6:20","nodeType":"YulTypedName","src":"447:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:20","nodeType":"YulTypedName","src":"458:4:20","type":""}],"src":"365:222:20"},{"body":{"nativeSrc":"633:35:20","nodeType":"YulBlock","src":"633:35:20","statements":[{"nativeSrc":"643:19:20","nodeType":"YulAssignment","src":"643:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:20","nodeType":"YulLiteral","src":"659:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:20","nodeType":"YulIdentifier","src":"653:5:20"},"nativeSrc":"653:9:20","nodeType":"YulFunctionCall","src":"653:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:20","nodeType":"YulIdentifier","src":"643:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:20","nodeType":"YulTypedName","src":"626:6:20","type":""}],"src":"593:75:20"},{"body":{"nativeSrc":"763:28:20","nodeType":"YulBlock","src":"763:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:20","nodeType":"YulLiteral","src":"780:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:20","nodeType":"YulLiteral","src":"783:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:20","nodeType":"YulIdentifier","src":"773:6:20"},"nativeSrc":"773:12:20","nodeType":"YulFunctionCall","src":"773:12:20"},"nativeSrc":"773:12:20","nodeType":"YulExpressionStatement","src":"773:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:20","nodeType":"YulFunctionDefinition","src":"674:117:20"},{"body":{"nativeSrc":"886:28:20","nodeType":"YulBlock","src":"886:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:20","nodeType":"YulLiteral","src":"903:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:20","nodeType":"YulLiteral","src":"906:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:20","nodeType":"YulIdentifier","src":"896:6:20"},"nativeSrc":"896:12:20","nodeType":"YulFunctionCall","src":"896:12:20"},"nativeSrc":"896:12:20","nodeType":"YulExpressionStatement","src":"896:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:20","nodeType":"YulFunctionDefinition","src":"797:117:20"},{"body":{"nativeSrc":"963:79:20","nodeType":"YulBlock","src":"963:79:20","statements":[{"body":{"nativeSrc":"1020:16:20","nodeType":"YulBlock","src":"1020:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1029:1:20","nodeType":"YulLiteral","src":"1029:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1032:1:20","nodeType":"YulLiteral","src":"1032:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1022:6:20","nodeType":"YulIdentifier","src":"1022:6:20"},"nativeSrc":"1022:12:20","nodeType":"YulFunctionCall","src":"1022:12:20"},"nativeSrc":"1022:12:20","nodeType":"YulExpressionStatement","src":"1022:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"986:5:20","nodeType":"YulIdentifier","src":"986:5:20"},{"arguments":[{"name":"value","nativeSrc":"1011:5:20","nodeType":"YulIdentifier","src":"1011:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"993:17:20","nodeType":"YulIdentifier","src":"993:17:20"},"nativeSrc":"993:24:20","nodeType":"YulFunctionCall","src":"993:24:20"}],"functionName":{"name":"eq","nativeSrc":"983:2:20","nodeType":"YulIdentifier","src":"983:2:20"},"nativeSrc":"983:35:20","nodeType":"YulFunctionCall","src":"983:35:20"}],"functionName":{"name":"iszero","nativeSrc":"976:6:20","nodeType":"YulIdentifier","src":"976:6:20"},"nativeSrc":"976:43:20","nodeType":"YulFunctionCall","src":"976:43:20"},"nativeSrc":"973:63:20","nodeType":"YulIf","src":"973:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"920:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"956:5:20","nodeType":"YulTypedName","src":"956:5:20","type":""}],"src":"920:122:20"},{"body":{"nativeSrc":"1100:87:20","nodeType":"YulBlock","src":"1100:87:20","statements":[{"nativeSrc":"1110:29:20","nodeType":"YulAssignment","src":"1110:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1132:6:20","nodeType":"YulIdentifier","src":"1132:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1119:12:20","nodeType":"YulIdentifier","src":"1119:12:20"},"nativeSrc":"1119:20:20","nodeType":"YulFunctionCall","src":"1119:20:20"},"variableNames":[{"name":"value","nativeSrc":"1110:5:20","nodeType":"YulIdentifier","src":"1110:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1175:5:20","nodeType":"YulIdentifier","src":"1175:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1148:26:20","nodeType":"YulIdentifier","src":"1148:26:20"},"nativeSrc":"1148:33:20","nodeType":"YulFunctionCall","src":"1148:33:20"},"nativeSrc":"1148:33:20","nodeType":"YulExpressionStatement","src":"1148:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"1048:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:20","nodeType":"YulTypedName","src":"1078:6:20","type":""},{"name":"end","nativeSrc":"1086:3:20","nodeType":"YulTypedName","src":"1086:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1094:5:20","nodeType":"YulTypedName","src":"1094:5:20","type":""}],"src":"1048:139:20"},{"body":{"nativeSrc":"1259:263:20","nodeType":"YulBlock","src":"1259:263:20","statements":[{"body":{"nativeSrc":"1305:83:20","nodeType":"YulBlock","src":"1305:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1307:77:20","nodeType":"YulIdentifier","src":"1307:77:20"},"nativeSrc":"1307:79:20","nodeType":"YulFunctionCall","src":"1307:79:20"},"nativeSrc":"1307:79:20","nodeType":"YulExpressionStatement","src":"1307:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1280:7:20","nodeType":"YulIdentifier","src":"1280:7:20"},{"name":"headStart","nativeSrc":"1289:9:20","nodeType":"YulIdentifier","src":"1289:9:20"}],"functionName":{"name":"sub","nativeSrc":"1276:3:20","nodeType":"YulIdentifier","src":"1276:3:20"},"nativeSrc":"1276:23:20","nodeType":"YulFunctionCall","src":"1276:23:20"},{"kind":"number","nativeSrc":"1301:2:20","nodeType":"YulLiteral","src":"1301:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1272:3:20","nodeType":"YulIdentifier","src":"1272:3:20"},"nativeSrc":"1272:32:20","nodeType":"YulFunctionCall","src":"1272:32:20"},"nativeSrc":"1269:119:20","nodeType":"YulIf","src":"1269:119:20"},{"nativeSrc":"1398:117:20","nodeType":"YulBlock","src":"1398:117:20","statements":[{"nativeSrc":"1413:15:20","nodeType":"YulVariableDeclaration","src":"1413:15:20","value":{"kind":"number","nativeSrc":"1427:1:20","nodeType":"YulLiteral","src":"1427:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1417:6:20","nodeType":"YulTypedName","src":"1417:6:20","type":""}]},{"nativeSrc":"1442:63:20","nodeType":"YulAssignment","src":"1442:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1477:9:20","nodeType":"YulIdentifier","src":"1477:9:20"},{"name":"offset","nativeSrc":"1488:6:20","nodeType":"YulIdentifier","src":"1488:6:20"}],"functionName":{"name":"add","nativeSrc":"1473:3:20","nodeType":"YulIdentifier","src":"1473:3:20"},"nativeSrc":"1473:22:20","nodeType":"YulFunctionCall","src":"1473:22:20"},{"name":"dataEnd","nativeSrc":"1497:7:20","nodeType":"YulIdentifier","src":"1497:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1452:20:20","nodeType":"YulIdentifier","src":"1452:20:20"},"nativeSrc":"1452:53:20","nodeType":"YulFunctionCall","src":"1452:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1442:6:20","nodeType":"YulIdentifier","src":"1442:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1193:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:20","nodeType":"YulTypedName","src":"1229:9:20","type":""},{"name":"dataEnd","nativeSrc":"1240:7:20","nodeType":"YulTypedName","src":"1240:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1252:6:20","nodeType":"YulTypedName","src":"1252:6:20","type":""}],"src":"1193:329:20"},{"body":{"nativeSrc":"1611:391:20","nodeType":"YulBlock","src":"1611:391:20","statements":[{"body":{"nativeSrc":"1657:83:20","nodeType":"YulBlock","src":"1657:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1659:77:20","nodeType":"YulIdentifier","src":"1659:77:20"},"nativeSrc":"1659:79:20","nodeType":"YulFunctionCall","src":"1659:79:20"},"nativeSrc":"1659:79:20","nodeType":"YulExpressionStatement","src":"1659:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1632:7:20","nodeType":"YulIdentifier","src":"1632:7:20"},{"name":"headStart","nativeSrc":"1641:9:20","nodeType":"YulIdentifier","src":"1641:9:20"}],"functionName":{"name":"sub","nativeSrc":"1628:3:20","nodeType":"YulIdentifier","src":"1628:3:20"},"nativeSrc":"1628:23:20","nodeType":"YulFunctionCall","src":"1628:23:20"},{"kind":"number","nativeSrc":"1653:2:20","nodeType":"YulLiteral","src":"1653:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1624:3:20","nodeType":"YulIdentifier","src":"1624:3:20"},"nativeSrc":"1624:32:20","nodeType":"YulFunctionCall","src":"1624:32:20"},"nativeSrc":"1621:119:20","nodeType":"YulIf","src":"1621:119:20"},{"nativeSrc":"1750:117:20","nodeType":"YulBlock","src":"1750:117:20","statements":[{"nativeSrc":"1765:15:20","nodeType":"YulVariableDeclaration","src":"1765:15:20","value":{"kind":"number","nativeSrc":"1779:1:20","nodeType":"YulLiteral","src":"1779:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1769:6:20","nodeType":"YulTypedName","src":"1769:6:20","type":""}]},{"nativeSrc":"1794:63:20","nodeType":"YulAssignment","src":"1794:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1829:9:20","nodeType":"YulIdentifier","src":"1829:9:20"},{"name":"offset","nativeSrc":"1840:6:20","nodeType":"YulIdentifier","src":"1840:6:20"}],"functionName":{"name":"add","nativeSrc":"1825:3:20","nodeType":"YulIdentifier","src":"1825:3:20"},"nativeSrc":"1825:22:20","nodeType":"YulFunctionCall","src":"1825:22:20"},{"name":"dataEnd","nativeSrc":"1849:7:20","nodeType":"YulIdentifier","src":"1849:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1804:20:20","nodeType":"YulIdentifier","src":"1804:20:20"},"nativeSrc":"1804:53:20","nodeType":"YulFunctionCall","src":"1804:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1794:6:20","nodeType":"YulIdentifier","src":"1794:6:20"}]}]},{"nativeSrc":"1877:118:20","nodeType":"YulBlock","src":"1877:118:20","statements":[{"nativeSrc":"1892:16:20","nodeType":"YulVariableDeclaration","src":"1892:16:20","value":{"kind":"number","nativeSrc":"1906:2:20","nodeType":"YulLiteral","src":"1906:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1896:6:20","nodeType":"YulTypedName","src":"1896:6:20","type":""}]},{"nativeSrc":"1922:63:20","nodeType":"YulAssignment","src":"1922:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1957:9:20","nodeType":"YulIdentifier","src":"1957:9:20"},{"name":"offset","nativeSrc":"1968:6:20","nodeType":"YulIdentifier","src":"1968:6:20"}],"functionName":{"name":"add","nativeSrc":"1953:3:20","nodeType":"YulIdentifier","src":"1953:3:20"},"nativeSrc":"1953:22:20","nodeType":"YulFunctionCall","src":"1953:22:20"},{"name":"dataEnd","nativeSrc":"1977:7:20","nodeType":"YulIdentifier","src":"1977:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1932:20:20","nodeType":"YulIdentifier","src":"1932:20:20"},"nativeSrc":"1932:53:20","nodeType":"YulFunctionCall","src":"1932:53:20"},"variableNames":[{"name":"value1","nativeSrc":"1922:6:20","nodeType":"YulIdentifier","src":"1922:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"1528:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1573:9:20","nodeType":"YulTypedName","src":"1573:9:20","type":""},{"name":"dataEnd","nativeSrc":"1584:7:20","nodeType":"YulTypedName","src":"1584:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1596:6:20","nodeType":"YulTypedName","src":"1596:6:20","type":""},{"name":"value1","nativeSrc":"1604:6:20","nodeType":"YulTypedName","src":"1604:6:20","type":""}],"src":"1528:474:20"},{"body":{"nativeSrc":"2097:28:20","nodeType":"YulBlock","src":"2097:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2114:1:20","nodeType":"YulLiteral","src":"2114:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2117:1:20","nodeType":"YulLiteral","src":"2117:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2107:6:20","nodeType":"YulIdentifier","src":"2107:6:20"},"nativeSrc":"2107:12:20","nodeType":"YulFunctionCall","src":"2107:12:20"},"nativeSrc":"2107:12:20","nodeType":"YulExpressionStatement","src":"2107:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2008:117:20","nodeType":"YulFunctionDefinition","src":"2008:117:20"},{"body":{"nativeSrc":"2220:28:20","nodeType":"YulBlock","src":"2220:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2237:1:20","nodeType":"YulLiteral","src":"2237:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2240:1:20","nodeType":"YulLiteral","src":"2240:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2230:6:20","nodeType":"YulIdentifier","src":"2230:6:20"},"nativeSrc":"2230:12:20","nodeType":"YulFunctionCall","src":"2230:12:20"},"nativeSrc":"2230:12:20","nodeType":"YulExpressionStatement","src":"2230:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2131:117:20","nodeType":"YulFunctionDefinition","src":"2131:117:20"},{"body":{"nativeSrc":"2302:54:20","nodeType":"YulBlock","src":"2302:54:20","statements":[{"nativeSrc":"2312:38:20","nodeType":"YulAssignment","src":"2312:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2330:5:20","nodeType":"YulIdentifier","src":"2330:5:20"},{"kind":"number","nativeSrc":"2337:2:20","nodeType":"YulLiteral","src":"2337:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2326:3:20","nodeType":"YulIdentifier","src":"2326:3:20"},"nativeSrc":"2326:14:20","nodeType":"YulFunctionCall","src":"2326:14:20"},{"arguments":[{"kind":"number","nativeSrc":"2346:2:20","nodeType":"YulLiteral","src":"2346:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2342:3:20","nodeType":"YulIdentifier","src":"2342:3:20"},"nativeSrc":"2342:7:20","nodeType":"YulFunctionCall","src":"2342:7:20"}],"functionName":{"name":"and","nativeSrc":"2322:3:20","nodeType":"YulIdentifier","src":"2322:3:20"},"nativeSrc":"2322:28:20","nodeType":"YulFunctionCall","src":"2322:28:20"},"variableNames":[{"name":"result","nativeSrc":"2312:6:20","nodeType":"YulIdentifier","src":"2312:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2254:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2285:5:20","nodeType":"YulTypedName","src":"2285:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2295:6:20","nodeType":"YulTypedName","src":"2295:6:20","type":""}],"src":"2254:102:20"},{"body":{"nativeSrc":"2390:152:20","nodeType":"YulBlock","src":"2390:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2407:1:20","nodeType":"YulLiteral","src":"2407:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2410:77:20","nodeType":"YulLiteral","src":"2410:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2400:6:20","nodeType":"YulIdentifier","src":"2400:6:20"},"nativeSrc":"2400:88:20","nodeType":"YulFunctionCall","src":"2400:88:20"},"nativeSrc":"2400:88:20","nodeType":"YulExpressionStatement","src":"2400:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2504:1:20","nodeType":"YulLiteral","src":"2504:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"2507:4:20","nodeType":"YulLiteral","src":"2507:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2497:6:20","nodeType":"YulIdentifier","src":"2497:6:20"},"nativeSrc":"2497:15:20","nodeType":"YulFunctionCall","src":"2497:15:20"},"nativeSrc":"2497:15:20","nodeType":"YulExpressionStatement","src":"2497:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2528:1:20","nodeType":"YulLiteral","src":"2528:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2531:4:20","nodeType":"YulLiteral","src":"2531:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2521:6:20","nodeType":"YulIdentifier","src":"2521:6:20"},"nativeSrc":"2521:15:20","nodeType":"YulFunctionCall","src":"2521:15:20"},"nativeSrc":"2521:15:20","nodeType":"YulExpressionStatement","src":"2521:15:20"}]},"name":"panic_error_0x41","nativeSrc":"2362:180:20","nodeType":"YulFunctionDefinition","src":"2362:180:20"},{"body":{"nativeSrc":"2591:238:20","nodeType":"YulBlock","src":"2591:238:20","statements":[{"nativeSrc":"2601:58:20","nodeType":"YulVariableDeclaration","src":"2601:58:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"2623:6:20","nodeType":"YulIdentifier","src":"2623:6:20"},{"arguments":[{"name":"size","nativeSrc":"2653:4:20","nodeType":"YulIdentifier","src":"2653:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2631:21:20","nodeType":"YulIdentifier","src":"2631:21:20"},"nativeSrc":"2631:27:20","nodeType":"YulFunctionCall","src":"2631:27:20"}],"functionName":{"name":"add","nativeSrc":"2619:3:20","nodeType":"YulIdentifier","src":"2619:3:20"},"nativeSrc":"2619:40:20","nodeType":"YulFunctionCall","src":"2619:40:20"},"variables":[{"name":"newFreePtr","nativeSrc":"2605:10:20","nodeType":"YulTypedName","src":"2605:10:20","type":""}]},{"body":{"nativeSrc":"2770:22:20","nodeType":"YulBlock","src":"2770:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2772:16:20","nodeType":"YulIdentifier","src":"2772:16:20"},"nativeSrc":"2772:18:20","nodeType":"YulFunctionCall","src":"2772:18:20"},"nativeSrc":"2772:18:20","nodeType":"YulExpressionStatement","src":"2772:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2713:10:20","nodeType":"YulIdentifier","src":"2713:10:20"},{"kind":"number","nativeSrc":"2725:18:20","nodeType":"YulLiteral","src":"2725:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2710:2:20","nodeType":"YulIdentifier","src":"2710:2:20"},"nativeSrc":"2710:34:20","nodeType":"YulFunctionCall","src":"2710:34:20"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2749:10:20","nodeType":"YulIdentifier","src":"2749:10:20"},{"name":"memPtr","nativeSrc":"2761:6:20","nodeType":"YulIdentifier","src":"2761:6:20"}],"functionName":{"name":"lt","nativeSrc":"2746:2:20","nodeType":"YulIdentifier","src":"2746:2:20"},"nativeSrc":"2746:22:20","nodeType":"YulFunctionCall","src":"2746:22:20"}],"functionName":{"name":"or","nativeSrc":"2707:2:20","nodeType":"YulIdentifier","src":"2707:2:20"},"nativeSrc":"2707:62:20","nodeType":"YulFunctionCall","src":"2707:62:20"},"nativeSrc":"2704:88:20","nodeType":"YulIf","src":"2704:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2808:2:20","nodeType":"YulLiteral","src":"2808:2:20","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2812:10:20","nodeType":"YulIdentifier","src":"2812:10:20"}],"functionName":{"name":"mstore","nativeSrc":"2801:6:20","nodeType":"YulIdentifier","src":"2801:6:20"},"nativeSrc":"2801:22:20","nodeType":"YulFunctionCall","src":"2801:22:20"},"nativeSrc":"2801:22:20","nodeType":"YulExpressionStatement","src":"2801:22:20"}]},"name":"finalize_allocation","nativeSrc":"2548:281:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2577:6:20","nodeType":"YulTypedName","src":"2577:6:20","type":""},{"name":"size","nativeSrc":"2585:4:20","nodeType":"YulTypedName","src":"2585:4:20","type":""}],"src":"2548:281:20"},{"body":{"nativeSrc":"2876:88:20","nodeType":"YulBlock","src":"2876:88:20","statements":[{"nativeSrc":"2886:30:20","nodeType":"YulAssignment","src":"2886:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2896:18:20","nodeType":"YulIdentifier","src":"2896:18:20"},"nativeSrc":"2896:20:20","nodeType":"YulFunctionCall","src":"2896:20:20"},"variableNames":[{"name":"memPtr","nativeSrc":"2886:6:20","nodeType":"YulIdentifier","src":"2886:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2945:6:20","nodeType":"YulIdentifier","src":"2945:6:20"},{"name":"size","nativeSrc":"2953:4:20","nodeType":"YulIdentifier","src":"2953:4:20"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2925:19:20","nodeType":"YulIdentifier","src":"2925:19:20"},"nativeSrc":"2925:33:20","nodeType":"YulFunctionCall","src":"2925:33:20"},"nativeSrc":"2925:33:20","nodeType":"YulExpressionStatement","src":"2925:33:20"}]},"name":"allocate_memory","nativeSrc":"2835:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2860:4:20","nodeType":"YulTypedName","src":"2860:4:20","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2869:6:20","nodeType":"YulTypedName","src":"2869:6:20","type":""}],"src":"2835:129:20"},{"body":{"nativeSrc":"3036:241:20","nodeType":"YulBlock","src":"3036:241:20","statements":[{"body":{"nativeSrc":"3141:22:20","nodeType":"YulBlock","src":"3141:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3143:16:20","nodeType":"YulIdentifier","src":"3143:16:20"},"nativeSrc":"3143:18:20","nodeType":"YulFunctionCall","src":"3143:18:20"},"nativeSrc":"3143:18:20","nodeType":"YulExpressionStatement","src":"3143:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3113:6:20","nodeType":"YulIdentifier","src":"3113:6:20"},{"kind":"number","nativeSrc":"3121:18:20","nodeType":"YulLiteral","src":"3121:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3110:2:20","nodeType":"YulIdentifier","src":"3110:2:20"},"nativeSrc":"3110:30:20","nodeType":"YulFunctionCall","src":"3110:30:20"},"nativeSrc":"3107:56:20","nodeType":"YulIf","src":"3107:56:20"},{"nativeSrc":"3173:37:20","nodeType":"YulAssignment","src":"3173:37:20","value":{"arguments":[{"name":"length","nativeSrc":"3203:6:20","nodeType":"YulIdentifier","src":"3203:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3181:21:20","nodeType":"YulIdentifier","src":"3181:21:20"},"nativeSrc":"3181:29:20","nodeType":"YulFunctionCall","src":"3181:29:20"},"variableNames":[{"name":"size","nativeSrc":"3173:4:20","nodeType":"YulIdentifier","src":"3173:4:20"}]},{"nativeSrc":"3247:23:20","nodeType":"YulAssignment","src":"3247:23:20","value":{"arguments":[{"name":"size","nativeSrc":"3259:4:20","nodeType":"YulIdentifier","src":"3259:4:20"},{"kind":"number","nativeSrc":"3265:4:20","nodeType":"YulLiteral","src":"3265:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3255:3:20","nodeType":"YulIdentifier","src":"3255:3:20"},"nativeSrc":"3255:15:20","nodeType":"YulFunctionCall","src":"3255:15:20"},"variableNames":[{"name":"size","nativeSrc":"3247:4:20","nodeType":"YulIdentifier","src":"3247:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2970:307:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3020:6:20","nodeType":"YulTypedName","src":"3020:6:20","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3031:4:20","nodeType":"YulTypedName","src":"3031:4:20","type":""}],"src":"2970:307:20"},{"body":{"nativeSrc":"3347:84:20","nodeType":"YulBlock","src":"3347:84:20","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"3371:3:20","nodeType":"YulIdentifier","src":"3371:3:20"},{"name":"src","nativeSrc":"3376:3:20","nodeType":"YulIdentifier","src":"3376:3:20"},{"name":"length","nativeSrc":"3381:6:20","nodeType":"YulIdentifier","src":"3381:6:20"}],"functionName":{"name":"calldatacopy","nativeSrc":"3358:12:20","nodeType":"YulIdentifier","src":"3358:12:20"},"nativeSrc":"3358:30:20","nodeType":"YulFunctionCall","src":"3358:30:20"},"nativeSrc":"3358:30:20","nodeType":"YulExpressionStatement","src":"3358:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3408:3:20","nodeType":"YulIdentifier","src":"3408:3:20"},{"name":"length","nativeSrc":"3413:6:20","nodeType":"YulIdentifier","src":"3413:6:20"}],"functionName":{"name":"add","nativeSrc":"3404:3:20","nodeType":"YulIdentifier","src":"3404:3:20"},"nativeSrc":"3404:16:20","nodeType":"YulFunctionCall","src":"3404:16:20"},{"kind":"number","nativeSrc":"3422:1:20","nodeType":"YulLiteral","src":"3422:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3397:6:20","nodeType":"YulIdentifier","src":"3397:6:20"},"nativeSrc":"3397:27:20","nodeType":"YulFunctionCall","src":"3397:27:20"},"nativeSrc":"3397:27:20","nodeType":"YulExpressionStatement","src":"3397:27:20"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3283:148:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3329:3:20","nodeType":"YulTypedName","src":"3329:3:20","type":""},{"name":"dst","nativeSrc":"3334:3:20","nodeType":"YulTypedName","src":"3334:3:20","type":""},{"name":"length","nativeSrc":"3339:6:20","nodeType":"YulTypedName","src":"3339:6:20","type":""}],"src":"3283:148:20"},{"body":{"nativeSrc":"3520:340:20","nodeType":"YulBlock","src":"3520:340:20","statements":[{"nativeSrc":"3530:74:20","nodeType":"YulAssignment","src":"3530:74:20","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3596:6:20","nodeType":"YulIdentifier","src":"3596:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"3555:40:20","nodeType":"YulIdentifier","src":"3555:40:20"},"nativeSrc":"3555:48:20","nodeType":"YulFunctionCall","src":"3555:48:20"}],"functionName":{"name":"allocate_memory","nativeSrc":"3539:15:20","nodeType":"YulIdentifier","src":"3539:15:20"},"nativeSrc":"3539:65:20","nodeType":"YulFunctionCall","src":"3539:65:20"},"variableNames":[{"name":"array","nativeSrc":"3530:5:20","nodeType":"YulIdentifier","src":"3530:5:20"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"3620:5:20","nodeType":"YulIdentifier","src":"3620:5:20"},{"name":"length","nativeSrc":"3627:6:20","nodeType":"YulIdentifier","src":"3627:6:20"}],"functionName":{"name":"mstore","nativeSrc":"3613:6:20","nodeType":"YulIdentifier","src":"3613:6:20"},"nativeSrc":"3613:21:20","nodeType":"YulFunctionCall","src":"3613:21:20"},"nativeSrc":"3613:21:20","nodeType":"YulExpressionStatement","src":"3613:21:20"},{"nativeSrc":"3643:27:20","nodeType":"YulVariableDeclaration","src":"3643:27:20","value":{"arguments":[{"name":"array","nativeSrc":"3658:5:20","nodeType":"YulIdentifier","src":"3658:5:20"},{"kind":"number","nativeSrc":"3665:4:20","nodeType":"YulLiteral","src":"3665:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3654:3:20","nodeType":"YulIdentifier","src":"3654:3:20"},"nativeSrc":"3654:16:20","nodeType":"YulFunctionCall","src":"3654:16:20"},"variables":[{"name":"dst","nativeSrc":"3647:3:20","nodeType":"YulTypedName","src":"3647:3:20","type":""}]},{"body":{"nativeSrc":"3708:83:20","nodeType":"YulBlock","src":"3708:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"3710:77:20","nodeType":"YulIdentifier","src":"3710:77:20"},"nativeSrc":"3710:79:20","nodeType":"YulFunctionCall","src":"3710:79:20"},"nativeSrc":"3710:79:20","nodeType":"YulExpressionStatement","src":"3710:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3689:3:20","nodeType":"YulIdentifier","src":"3689:3:20"},{"name":"length","nativeSrc":"3694:6:20","nodeType":"YulIdentifier","src":"3694:6:20"}],"functionName":{"name":"add","nativeSrc":"3685:3:20","nodeType":"YulIdentifier","src":"3685:3:20"},"nativeSrc":"3685:16:20","nodeType":"YulFunctionCall","src":"3685:16:20"},{"name":"end","nativeSrc":"3703:3:20","nodeType":"YulIdentifier","src":"3703:3:20"}],"functionName":{"name":"gt","nativeSrc":"3682:2:20","nodeType":"YulIdentifier","src":"3682:2:20"},"nativeSrc":"3682:25:20","nodeType":"YulFunctionCall","src":"3682:25:20"},"nativeSrc":"3679:112:20","nodeType":"YulIf","src":"3679:112:20"},{"expression":{"arguments":[{"name":"src","nativeSrc":"3837:3:20","nodeType":"YulIdentifier","src":"3837:3:20"},{"name":"dst","nativeSrc":"3842:3:20","nodeType":"YulIdentifier","src":"3842:3:20"},{"name":"length","nativeSrc":"3847:6:20","nodeType":"YulIdentifier","src":"3847:6:20"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3800:36:20","nodeType":"YulIdentifier","src":"3800:36:20"},"nativeSrc":"3800:54:20","nodeType":"YulFunctionCall","src":"3800:54:20"},"nativeSrc":"3800:54:20","nodeType":"YulExpressionStatement","src":"3800:54:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"3437:423:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3493:3:20","nodeType":"YulTypedName","src":"3493:3:20","type":""},{"name":"length","nativeSrc":"3498:6:20","nodeType":"YulTypedName","src":"3498:6:20","type":""},{"name":"end","nativeSrc":"3506:3:20","nodeType":"YulTypedName","src":"3506:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3514:5:20","nodeType":"YulTypedName","src":"3514:5:20","type":""}],"src":"3437:423:20"},{"body":{"nativeSrc":"3940:277:20","nodeType":"YulBlock","src":"3940:277:20","statements":[{"body":{"nativeSrc":"3989:83:20","nodeType":"YulBlock","src":"3989:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"3991:77:20","nodeType":"YulIdentifier","src":"3991:77:20"},"nativeSrc":"3991:79:20","nodeType":"YulFunctionCall","src":"3991:79:20"},"nativeSrc":"3991:79:20","nodeType":"YulExpressionStatement","src":"3991:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3968:6:20","nodeType":"YulIdentifier","src":"3968:6:20"},{"kind":"number","nativeSrc":"3976:4:20","nodeType":"YulLiteral","src":"3976:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3964:3:20","nodeType":"YulIdentifier","src":"3964:3:20"},"nativeSrc":"3964:17:20","nodeType":"YulFunctionCall","src":"3964:17:20"},{"name":"end","nativeSrc":"3983:3:20","nodeType":"YulIdentifier","src":"3983:3:20"}],"functionName":{"name":"slt","nativeSrc":"3960:3:20","nodeType":"YulIdentifier","src":"3960:3:20"},"nativeSrc":"3960:27:20","nodeType":"YulFunctionCall","src":"3960:27:20"}],"functionName":{"name":"iszero","nativeSrc":"3953:6:20","nodeType":"YulIdentifier","src":"3953:6:20"},"nativeSrc":"3953:35:20","nodeType":"YulFunctionCall","src":"3953:35:20"},"nativeSrc":"3950:122:20","nodeType":"YulIf","src":"3950:122:20"},{"nativeSrc":"4081:34:20","nodeType":"YulVariableDeclaration","src":"4081:34:20","value":{"arguments":[{"name":"offset","nativeSrc":"4108:6:20","nodeType":"YulIdentifier","src":"4108:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"4095:12:20","nodeType":"YulIdentifier","src":"4095:12:20"},"nativeSrc":"4095:20:20","nodeType":"YulFunctionCall","src":"4095:20:20"},"variables":[{"name":"length","nativeSrc":"4085:6:20","nodeType":"YulTypedName","src":"4085:6:20","type":""}]},{"nativeSrc":"4124:87:20","nodeType":"YulAssignment","src":"4124:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4184:6:20","nodeType":"YulIdentifier","src":"4184:6:20"},{"kind":"number","nativeSrc":"4192:4:20","nodeType":"YulLiteral","src":"4192:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4180:3:20","nodeType":"YulIdentifier","src":"4180:3:20"},"nativeSrc":"4180:17:20","nodeType":"YulFunctionCall","src":"4180:17:20"},{"name":"length","nativeSrc":"4199:6:20","nodeType":"YulIdentifier","src":"4199:6:20"},{"name":"end","nativeSrc":"4207:3:20","nodeType":"YulIdentifier","src":"4207:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"4133:46:20","nodeType":"YulIdentifier","src":"4133:46:20"},"nativeSrc":"4133:78:20","nodeType":"YulFunctionCall","src":"4133:78:20"},"variableNames":[{"name":"array","nativeSrc":"4124:5:20","nodeType":"YulIdentifier","src":"4124:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"3879:338:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3918:6:20","nodeType":"YulTypedName","src":"3918:6:20","type":""},{"name":"end","nativeSrc":"3926:3:20","nodeType":"YulTypedName","src":"3926:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3934:5:20","nodeType":"YulTypedName","src":"3934:5:20","type":""}],"src":"3879:338:20"},{"body":{"nativeSrc":"4315:560:20","nodeType":"YulBlock","src":"4315:560:20","statements":[{"body":{"nativeSrc":"4361:83:20","nodeType":"YulBlock","src":"4361:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4363:77:20","nodeType":"YulIdentifier","src":"4363:77:20"},"nativeSrc":"4363:79:20","nodeType":"YulFunctionCall","src":"4363:79:20"},"nativeSrc":"4363:79:20","nodeType":"YulExpressionStatement","src":"4363:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4336:7:20","nodeType":"YulIdentifier","src":"4336:7:20"},{"name":"headStart","nativeSrc":"4345:9:20","nodeType":"YulIdentifier","src":"4345:9:20"}],"functionName":{"name":"sub","nativeSrc":"4332:3:20","nodeType":"YulIdentifier","src":"4332:3:20"},"nativeSrc":"4332:23:20","nodeType":"YulFunctionCall","src":"4332:23:20"},{"kind":"number","nativeSrc":"4357:2:20","nodeType":"YulLiteral","src":"4357:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4328:3:20","nodeType":"YulIdentifier","src":"4328:3:20"},"nativeSrc":"4328:32:20","nodeType":"YulFunctionCall","src":"4328:32:20"},"nativeSrc":"4325:119:20","nodeType":"YulIf","src":"4325:119:20"},{"nativeSrc":"4454:117:20","nodeType":"YulBlock","src":"4454:117:20","statements":[{"nativeSrc":"4469:15:20","nodeType":"YulVariableDeclaration","src":"4469:15:20","value":{"kind":"number","nativeSrc":"4483:1:20","nodeType":"YulLiteral","src":"4483:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4473:6:20","nodeType":"YulTypedName","src":"4473:6:20","type":""}]},{"nativeSrc":"4498:63:20","nodeType":"YulAssignment","src":"4498:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4533:9:20","nodeType":"YulIdentifier","src":"4533:9:20"},{"name":"offset","nativeSrc":"4544:6:20","nodeType":"YulIdentifier","src":"4544:6:20"}],"functionName":{"name":"add","nativeSrc":"4529:3:20","nodeType":"YulIdentifier","src":"4529:3:20"},"nativeSrc":"4529:22:20","nodeType":"YulFunctionCall","src":"4529:22:20"},{"name":"dataEnd","nativeSrc":"4553:7:20","nodeType":"YulIdentifier","src":"4553:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4508:20:20","nodeType":"YulIdentifier","src":"4508:20:20"},"nativeSrc":"4508:53:20","nodeType":"YulFunctionCall","src":"4508:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4498:6:20","nodeType":"YulIdentifier","src":"4498:6:20"}]}]},{"nativeSrc":"4581:287:20","nodeType":"YulBlock","src":"4581:287:20","statements":[{"nativeSrc":"4596:46:20","nodeType":"YulVariableDeclaration","src":"4596:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4627:9:20","nodeType":"YulIdentifier","src":"4627:9:20"},{"kind":"number","nativeSrc":"4638:2:20","nodeType":"YulLiteral","src":"4638:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4623:3:20","nodeType":"YulIdentifier","src":"4623:3:20"},"nativeSrc":"4623:18:20","nodeType":"YulFunctionCall","src":"4623:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"4610:12:20","nodeType":"YulIdentifier","src":"4610:12:20"},"nativeSrc":"4610:32:20","nodeType":"YulFunctionCall","src":"4610:32:20"},"variables":[{"name":"offset","nativeSrc":"4600:6:20","nodeType":"YulTypedName","src":"4600:6:20","type":""}]},{"body":{"nativeSrc":"4689:83:20","nodeType":"YulBlock","src":"4689:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4691:77:20","nodeType":"YulIdentifier","src":"4691:77:20"},"nativeSrc":"4691:79:20","nodeType":"YulFunctionCall","src":"4691:79:20"},"nativeSrc":"4691:79:20","nodeType":"YulExpressionStatement","src":"4691:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4661:6:20","nodeType":"YulIdentifier","src":"4661:6:20"},{"kind":"number","nativeSrc":"4669:18:20","nodeType":"YulLiteral","src":"4669:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4658:2:20","nodeType":"YulIdentifier","src":"4658:2:20"},"nativeSrc":"4658:30:20","nodeType":"YulFunctionCall","src":"4658:30:20"},"nativeSrc":"4655:117:20","nodeType":"YulIf","src":"4655:117:20"},{"nativeSrc":"4786:72:20","nodeType":"YulAssignment","src":"4786:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4830:9:20","nodeType":"YulIdentifier","src":"4830:9:20"},{"name":"offset","nativeSrc":"4841:6:20","nodeType":"YulIdentifier","src":"4841:6:20"}],"functionName":{"name":"add","nativeSrc":"4826:3:20","nodeType":"YulIdentifier","src":"4826:3:20"},"nativeSrc":"4826:22:20","nodeType":"YulFunctionCall","src":"4826:22:20"},{"name":"dataEnd","nativeSrc":"4850:7:20","nodeType":"YulIdentifier","src":"4850:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"4796:29:20","nodeType":"YulIdentifier","src":"4796:29:20"},"nativeSrc":"4796:62:20","nodeType":"YulFunctionCall","src":"4796:62:20"},"variableNames":[{"name":"value1","nativeSrc":"4786:6:20","nodeType":"YulIdentifier","src":"4786:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"4223:652:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4277:9:20","nodeType":"YulTypedName","src":"4277:9:20","type":""},{"name":"dataEnd","nativeSrc":"4288:7:20","nodeType":"YulTypedName","src":"4288:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4300:6:20","nodeType":"YulTypedName","src":"4300:6:20","type":""},{"name":"value1","nativeSrc":"4308:6:20","nodeType":"YulTypedName","src":"4308:6:20","type":""}],"src":"4223:652:20"},{"body":{"nativeSrc":"4926:32:20","nodeType":"YulBlock","src":"4926:32:20","statements":[{"nativeSrc":"4936:16:20","nodeType":"YulAssignment","src":"4936:16:20","value":{"name":"value","nativeSrc":"4947:5:20","nodeType":"YulIdentifier","src":"4947:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"4936:7:20","nodeType":"YulIdentifier","src":"4936:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4881:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4908:5:20","nodeType":"YulTypedName","src":"4908:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4918:7:20","nodeType":"YulTypedName","src":"4918:7:20","type":""}],"src":"4881:77:20"},{"body":{"nativeSrc":"5029:53:20","nodeType":"YulBlock","src":"5029:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5046:3:20","nodeType":"YulIdentifier","src":"5046:3:20"},{"arguments":[{"name":"value","nativeSrc":"5069:5:20","nodeType":"YulIdentifier","src":"5069:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5051:17:20","nodeType":"YulIdentifier","src":"5051:17:20"},"nativeSrc":"5051:24:20","nodeType":"YulFunctionCall","src":"5051:24:20"}],"functionName":{"name":"mstore","nativeSrc":"5039:6:20","nodeType":"YulIdentifier","src":"5039:6:20"},"nativeSrc":"5039:37:20","nodeType":"YulFunctionCall","src":"5039:37:20"},"nativeSrc":"5039:37:20","nodeType":"YulExpressionStatement","src":"5039:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4964:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5017:5:20","nodeType":"YulTypedName","src":"5017:5:20","type":""},{"name":"pos","nativeSrc":"5024:3:20","nodeType":"YulTypedName","src":"5024:3:20","type":""}],"src":"4964:118:20"},{"body":{"nativeSrc":"5186:124:20","nodeType":"YulBlock","src":"5186:124:20","statements":[{"nativeSrc":"5196:26:20","nodeType":"YulAssignment","src":"5196:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5208:9:20","nodeType":"YulIdentifier","src":"5208:9:20"},{"kind":"number","nativeSrc":"5219:2:20","nodeType":"YulLiteral","src":"5219:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5204:3:20","nodeType":"YulIdentifier","src":"5204:3:20"},"nativeSrc":"5204:18:20","nodeType":"YulFunctionCall","src":"5204:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5196:4:20","nodeType":"YulIdentifier","src":"5196:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5276:6:20","nodeType":"YulIdentifier","src":"5276:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5289:9:20","nodeType":"YulIdentifier","src":"5289:9:20"},{"kind":"number","nativeSrc":"5300:1:20","nodeType":"YulLiteral","src":"5300:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5285:3:20","nodeType":"YulIdentifier","src":"5285:3:20"},"nativeSrc":"5285:17:20","nodeType":"YulFunctionCall","src":"5285:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5232:43:20","nodeType":"YulIdentifier","src":"5232:43:20"},"nativeSrc":"5232:71:20","nodeType":"YulFunctionCall","src":"5232:71:20"},"nativeSrc":"5232:71:20","nodeType":"YulExpressionStatement","src":"5232:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5088:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5158:9:20","nodeType":"YulTypedName","src":"5158:9:20","type":""},{"name":"value0","nativeSrc":"5170:6:20","nodeType":"YulTypedName","src":"5170:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5181:4:20","nodeType":"YulTypedName","src":"5181:4:20","type":""}],"src":"5088:222:20"},{"body":{"nativeSrc":"5361:32:20","nodeType":"YulBlock","src":"5361:32:20","statements":[{"nativeSrc":"5371:16:20","nodeType":"YulAssignment","src":"5371:16:20","value":{"name":"value","nativeSrc":"5382:5:20","nodeType":"YulIdentifier","src":"5382:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"5371:7:20","nodeType":"YulIdentifier","src":"5371:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5316:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5343:5:20","nodeType":"YulTypedName","src":"5343:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5353:7:20","nodeType":"YulTypedName","src":"5353:7:20","type":""}],"src":"5316:77:20"},{"body":{"nativeSrc":"5442:79:20","nodeType":"YulBlock","src":"5442:79:20","statements":[{"body":{"nativeSrc":"5499:16:20","nodeType":"YulBlock","src":"5499:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5508:1:20","nodeType":"YulLiteral","src":"5508:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5511:1:20","nodeType":"YulLiteral","src":"5511:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5501:6:20","nodeType":"YulIdentifier","src":"5501:6:20"},"nativeSrc":"5501:12:20","nodeType":"YulFunctionCall","src":"5501:12:20"},"nativeSrc":"5501:12:20","nodeType":"YulExpressionStatement","src":"5501:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5465:5:20","nodeType":"YulIdentifier","src":"5465:5:20"},{"arguments":[{"name":"value","nativeSrc":"5490:5:20","nodeType":"YulIdentifier","src":"5490:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5472:17:20","nodeType":"YulIdentifier","src":"5472:17:20"},"nativeSrc":"5472:24:20","nodeType":"YulFunctionCall","src":"5472:24:20"}],"functionName":{"name":"eq","nativeSrc":"5462:2:20","nodeType":"YulIdentifier","src":"5462:2:20"},"nativeSrc":"5462:35:20","nodeType":"YulFunctionCall","src":"5462:35:20"}],"functionName":{"name":"iszero","nativeSrc":"5455:6:20","nodeType":"YulIdentifier","src":"5455:6:20"},"nativeSrc":"5455:43:20","nodeType":"YulFunctionCall","src":"5455:43:20"},"nativeSrc":"5452:63:20","nodeType":"YulIf","src":"5452:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"5399:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5435:5:20","nodeType":"YulTypedName","src":"5435:5:20","type":""}],"src":"5399:122:20"},{"body":{"nativeSrc":"5579:87:20","nodeType":"YulBlock","src":"5579:87:20","statements":[{"nativeSrc":"5589:29:20","nodeType":"YulAssignment","src":"5589:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"5611:6:20","nodeType":"YulIdentifier","src":"5611:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"5598:12:20","nodeType":"YulIdentifier","src":"5598:12:20"},"nativeSrc":"5598:20:20","nodeType":"YulFunctionCall","src":"5598:20:20"},"variableNames":[{"name":"value","nativeSrc":"5589:5:20","nodeType":"YulIdentifier","src":"5589:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5654:5:20","nodeType":"YulIdentifier","src":"5654:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5627:26:20","nodeType":"YulIdentifier","src":"5627:26:20"},"nativeSrc":"5627:33:20","nodeType":"YulFunctionCall","src":"5627:33:20"},"nativeSrc":"5627:33:20","nodeType":"YulExpressionStatement","src":"5627:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"5527:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5557:6:20","nodeType":"YulTypedName","src":"5557:6:20","type":""},{"name":"end","nativeSrc":"5565:3:20","nodeType":"YulTypedName","src":"5565:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5573:5:20","nodeType":"YulTypedName","src":"5573:5:20","type":""}],"src":"5527:139:20"},{"body":{"nativeSrc":"5738:263:20","nodeType":"YulBlock","src":"5738:263:20","statements":[{"body":{"nativeSrc":"5784:83:20","nodeType":"YulBlock","src":"5784:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5786:77:20","nodeType":"YulIdentifier","src":"5786:77:20"},"nativeSrc":"5786:79:20","nodeType":"YulFunctionCall","src":"5786:79:20"},"nativeSrc":"5786:79:20","nodeType":"YulExpressionStatement","src":"5786:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5759:7:20","nodeType":"YulIdentifier","src":"5759:7:20"},{"name":"headStart","nativeSrc":"5768:9:20","nodeType":"YulIdentifier","src":"5768:9:20"}],"functionName":{"name":"sub","nativeSrc":"5755:3:20","nodeType":"YulIdentifier","src":"5755:3:20"},"nativeSrc":"5755:23:20","nodeType":"YulFunctionCall","src":"5755:23:20"},{"kind":"number","nativeSrc":"5780:2:20","nodeType":"YulLiteral","src":"5780:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5751:3:20","nodeType":"YulIdentifier","src":"5751:3:20"},"nativeSrc":"5751:32:20","nodeType":"YulFunctionCall","src":"5751:32:20"},"nativeSrc":"5748:119:20","nodeType":"YulIf","src":"5748:119:20"},{"nativeSrc":"5877:117:20","nodeType":"YulBlock","src":"5877:117:20","statements":[{"nativeSrc":"5892:15:20","nodeType":"YulVariableDeclaration","src":"5892:15:20","value":{"kind":"number","nativeSrc":"5906:1:20","nodeType":"YulLiteral","src":"5906:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5896:6:20","nodeType":"YulTypedName","src":"5896:6:20","type":""}]},{"nativeSrc":"5921:63:20","nodeType":"YulAssignment","src":"5921:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5956:9:20","nodeType":"YulIdentifier","src":"5956:9:20"},{"name":"offset","nativeSrc":"5967:6:20","nodeType":"YulIdentifier","src":"5967:6:20"}],"functionName":{"name":"add","nativeSrc":"5952:3:20","nodeType":"YulIdentifier","src":"5952:3:20"},"nativeSrc":"5952:22:20","nodeType":"YulFunctionCall","src":"5952:22:20"},{"name":"dataEnd","nativeSrc":"5976:7:20","nodeType":"YulIdentifier","src":"5976:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5931:20:20","nodeType":"YulIdentifier","src":"5931:20:20"},"nativeSrc":"5931:53:20","nodeType":"YulFunctionCall","src":"5931:53:20"},"variableNames":[{"name":"value0","nativeSrc":"5921:6:20","nodeType":"YulIdentifier","src":"5921:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5672:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5708:9:20","nodeType":"YulTypedName","src":"5708:9:20","type":""},{"name":"dataEnd","nativeSrc":"5719:7:20","nodeType":"YulTypedName","src":"5719:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5731:6:20","nodeType":"YulTypedName","src":"5731:6:20","type":""}],"src":"5672:329:20"},{"body":{"nativeSrc":"6081:40:20","nodeType":"YulBlock","src":"6081:40:20","statements":[{"nativeSrc":"6092:22:20","nodeType":"YulAssignment","src":"6092:22:20","value":{"arguments":[{"name":"value","nativeSrc":"6108:5:20","nodeType":"YulIdentifier","src":"6108:5:20"}],"functionName":{"name":"mload","nativeSrc":"6102:5:20","nodeType":"YulIdentifier","src":"6102:5:20"},"nativeSrc":"6102:12:20","nodeType":"YulFunctionCall","src":"6102:12:20"},"variableNames":[{"name":"length","nativeSrc":"6092:6:20","nodeType":"YulIdentifier","src":"6092:6:20"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"6007:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6064:5:20","nodeType":"YulTypedName","src":"6064:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6074:6:20","nodeType":"YulTypedName","src":"6074:6:20","type":""}],"src":"6007:114:20"},{"body":{"nativeSrc":"6238:73:20","nodeType":"YulBlock","src":"6238:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6255:3:20","nodeType":"YulIdentifier","src":"6255:3:20"},{"name":"length","nativeSrc":"6260:6:20","nodeType":"YulIdentifier","src":"6260:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6248:6:20","nodeType":"YulIdentifier","src":"6248:6:20"},"nativeSrc":"6248:19:20","nodeType":"YulFunctionCall","src":"6248:19:20"},"nativeSrc":"6248:19:20","nodeType":"YulExpressionStatement","src":"6248:19:20"},{"nativeSrc":"6276:29:20","nodeType":"YulAssignment","src":"6276:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"6295:3:20","nodeType":"YulIdentifier","src":"6295:3:20"},{"kind":"number","nativeSrc":"6300:4:20","nodeType":"YulLiteral","src":"6300:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6291:3:20","nodeType":"YulIdentifier","src":"6291:3:20"},"nativeSrc":"6291:14:20","nodeType":"YulFunctionCall","src":"6291:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"6276:11:20","nodeType":"YulIdentifier","src":"6276:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"6127:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6210:3:20","nodeType":"YulTypedName","src":"6210:3:20","type":""},{"name":"length","nativeSrc":"6215:6:20","nodeType":"YulTypedName","src":"6215:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6226:11:20","nodeType":"YulTypedName","src":"6226:11:20","type":""}],"src":"6127:184:20"},{"body":{"nativeSrc":"6389:60:20","nodeType":"YulBlock","src":"6389:60:20","statements":[{"nativeSrc":"6399:11:20","nodeType":"YulAssignment","src":"6399:11:20","value":{"name":"ptr","nativeSrc":"6407:3:20","nodeType":"YulIdentifier","src":"6407:3:20"},"variableNames":[{"name":"data","nativeSrc":"6399:4:20","nodeType":"YulIdentifier","src":"6399:4:20"}]},{"nativeSrc":"6420:22:20","nodeType":"YulAssignment","src":"6420:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"6432:3:20","nodeType":"YulIdentifier","src":"6432:3:20"},{"kind":"number","nativeSrc":"6437:4:20","nodeType":"YulLiteral","src":"6437:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6428:3:20","nodeType":"YulIdentifier","src":"6428:3:20"},"nativeSrc":"6428:14:20","nodeType":"YulFunctionCall","src":"6428:14:20"},"variableNames":[{"name":"data","nativeSrc":"6420:4:20","nodeType":"YulIdentifier","src":"6420:4:20"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"6317:132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6376:3:20","nodeType":"YulTypedName","src":"6376:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6384:4:20","nodeType":"YulTypedName","src":"6384:4:20","type":""}],"src":"6317:132:20"},{"body":{"nativeSrc":"6510:53:20","nodeType":"YulBlock","src":"6510:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6527:3:20","nodeType":"YulIdentifier","src":"6527:3:20"},{"arguments":[{"name":"value","nativeSrc":"6550:5:20","nodeType":"YulIdentifier","src":"6550:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6532:17:20","nodeType":"YulIdentifier","src":"6532:17:20"},"nativeSrc":"6532:24:20","nodeType":"YulFunctionCall","src":"6532:24:20"}],"functionName":{"name":"mstore","nativeSrc":"6520:6:20","nodeType":"YulIdentifier","src":"6520:6:20"},"nativeSrc":"6520:37:20","nodeType":"YulFunctionCall","src":"6520:37:20"},"nativeSrc":"6520:37:20","nodeType":"YulExpressionStatement","src":"6520:37:20"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"6455:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6498:5:20","nodeType":"YulTypedName","src":"6498:5:20","type":""},{"name":"pos","nativeSrc":"6505:3:20","nodeType":"YulTypedName","src":"6505:3:20","type":""}],"src":"6455:108:20"},{"body":{"nativeSrc":"6649:99:20","nodeType":"YulBlock","src":"6649:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6693:6:20","nodeType":"YulIdentifier","src":"6693:6:20"},{"name":"pos","nativeSrc":"6701:3:20","nodeType":"YulIdentifier","src":"6701:3:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"6659:33:20","nodeType":"YulIdentifier","src":"6659:33:20"},"nativeSrc":"6659:46:20","nodeType":"YulFunctionCall","src":"6659:46:20"},"nativeSrc":"6659:46:20","nodeType":"YulExpressionStatement","src":"6659:46:20"},{"nativeSrc":"6714:28:20","nodeType":"YulAssignment","src":"6714:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"6732:3:20","nodeType":"YulIdentifier","src":"6732:3:20"},{"kind":"number","nativeSrc":"6737:4:20","nodeType":"YulLiteral","src":"6737:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6728:3:20","nodeType":"YulIdentifier","src":"6728:3:20"},"nativeSrc":"6728:14:20","nodeType":"YulFunctionCall","src":"6728:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"6714:10:20","nodeType":"YulIdentifier","src":"6714:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"6569:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6622:6:20","nodeType":"YulTypedName","src":"6622:6:20","type":""},{"name":"pos","nativeSrc":"6630:3:20","nodeType":"YulTypedName","src":"6630:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6638:10:20","nodeType":"YulTypedName","src":"6638:10:20","type":""}],"src":"6569:179:20"},{"body":{"nativeSrc":"6829:38:20","nodeType":"YulBlock","src":"6829:38:20","statements":[{"nativeSrc":"6839:22:20","nodeType":"YulAssignment","src":"6839:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"6851:3:20","nodeType":"YulIdentifier","src":"6851:3:20"},{"kind":"number","nativeSrc":"6856:4:20","nodeType":"YulLiteral","src":"6856:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6847:3:20","nodeType":"YulIdentifier","src":"6847:3:20"},"nativeSrc":"6847:14:20","nodeType":"YulFunctionCall","src":"6847:14:20"},"variableNames":[{"name":"next","nativeSrc":"6839:4:20","nodeType":"YulIdentifier","src":"6839:4:20"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"6754:113:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6816:3:20","nodeType":"YulTypedName","src":"6816:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6824:4:20","nodeType":"YulTypedName","src":"6824:4:20","type":""}],"src":"6754:113:20"},{"body":{"nativeSrc":"7027:608:20","nodeType":"YulBlock","src":"7027:608:20","statements":[{"nativeSrc":"7037:68:20","nodeType":"YulVariableDeclaration","src":"7037:68:20","value":{"arguments":[{"name":"value","nativeSrc":"7099:5:20","nodeType":"YulIdentifier","src":"7099:5:20"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"7051:47:20","nodeType":"YulIdentifier","src":"7051:47:20"},"nativeSrc":"7051:54:20","nodeType":"YulFunctionCall","src":"7051:54:20"},"variables":[{"name":"length","nativeSrc":"7041:6:20","nodeType":"YulTypedName","src":"7041:6:20","type":""}]},{"nativeSrc":"7114:93:20","nodeType":"YulAssignment","src":"7114:93:20","value":{"arguments":[{"name":"pos","nativeSrc":"7195:3:20","nodeType":"YulIdentifier","src":"7195:3:20"},{"name":"length","nativeSrc":"7200:6:20","nodeType":"YulIdentifier","src":"7200:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"7121:73:20","nodeType":"YulIdentifier","src":"7121:73:20"},"nativeSrc":"7121:86:20","nodeType":"YulFunctionCall","src":"7121:86:20"},"variableNames":[{"name":"pos","nativeSrc":"7114:3:20","nodeType":"YulIdentifier","src":"7114:3:20"}]},{"nativeSrc":"7216:71:20","nodeType":"YulVariableDeclaration","src":"7216:71:20","value":{"arguments":[{"name":"value","nativeSrc":"7281:5:20","nodeType":"YulIdentifier","src":"7281:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"7231:49:20","nodeType":"YulIdentifier","src":"7231:49:20"},"nativeSrc":"7231:56:20","nodeType":"YulFunctionCall","src":"7231:56:20"},"variables":[{"name":"baseRef","nativeSrc":"7220:7:20","nodeType":"YulTypedName","src":"7220:7:20","type":""}]},{"nativeSrc":"7296:21:20","nodeType":"YulVariableDeclaration","src":"7296:21:20","value":{"name":"baseRef","nativeSrc":"7310:7:20","nodeType":"YulIdentifier","src":"7310:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"7300:6:20","nodeType":"YulTypedName","src":"7300:6:20","type":""}]},{"body":{"nativeSrc":"7386:224:20","nodeType":"YulBlock","src":"7386:224:20","statements":[{"nativeSrc":"7400:34:20","nodeType":"YulVariableDeclaration","src":"7400:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7427:6:20","nodeType":"YulIdentifier","src":"7427:6:20"}],"functionName":{"name":"mload","nativeSrc":"7421:5:20","nodeType":"YulIdentifier","src":"7421:5:20"},"nativeSrc":"7421:13:20","nodeType":"YulFunctionCall","src":"7421:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"7404:13:20","nodeType":"YulTypedName","src":"7404:13:20","type":""}]},{"nativeSrc":"7447:70:20","nodeType":"YulAssignment","src":"7447:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7498:13:20","nodeType":"YulIdentifier","src":"7498:13:20"},{"name":"pos","nativeSrc":"7513:3:20","nodeType":"YulIdentifier","src":"7513:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"7454:43:20","nodeType":"YulIdentifier","src":"7454:43:20"},"nativeSrc":"7454:63:20","nodeType":"YulFunctionCall","src":"7454:63:20"},"variableNames":[{"name":"pos","nativeSrc":"7447:3:20","nodeType":"YulIdentifier","src":"7447:3:20"}]},{"nativeSrc":"7530:70:20","nodeType":"YulAssignment","src":"7530:70:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7593:6:20","nodeType":"YulIdentifier","src":"7593:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"7540:52:20","nodeType":"YulIdentifier","src":"7540:52:20"},"nativeSrc":"7540:60:20","nodeType":"YulFunctionCall","src":"7540:60:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"7530:6:20","nodeType":"YulIdentifier","src":"7530:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7348:1:20","nodeType":"YulIdentifier","src":"7348:1:20"},{"name":"length","nativeSrc":"7351:6:20","nodeType":"YulIdentifier","src":"7351:6:20"}],"functionName":{"name":"lt","nativeSrc":"7345:2:20","nodeType":"YulIdentifier","src":"7345:2:20"},"nativeSrc":"7345:13:20","nodeType":"YulFunctionCall","src":"7345:13:20"},"nativeSrc":"7326:284:20","nodeType":"YulForLoop","post":{"nativeSrc":"7359:18:20","nodeType":"YulBlock","src":"7359:18:20","statements":[{"nativeSrc":"7361:14:20","nodeType":"YulAssignment","src":"7361:14:20","value":{"arguments":[{"name":"i","nativeSrc":"7370:1:20","nodeType":"YulIdentifier","src":"7370:1:20"},{"kind":"number","nativeSrc":"7373:1:20","nodeType":"YulLiteral","src":"7373:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7366:3:20","nodeType":"YulIdentifier","src":"7366:3:20"},"nativeSrc":"7366:9:20","nodeType":"YulFunctionCall","src":"7366:9:20"},"variableNames":[{"name":"i","nativeSrc":"7361:1:20","nodeType":"YulIdentifier","src":"7361:1:20"}]}]},"pre":{"nativeSrc":"7330:14:20","nodeType":"YulBlock","src":"7330:14:20","statements":[{"nativeSrc":"7332:10:20","nodeType":"YulVariableDeclaration","src":"7332:10:20","value":{"kind":"number","nativeSrc":"7341:1:20","nodeType":"YulLiteral","src":"7341:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7336:1:20","nodeType":"YulTypedName","src":"7336:1:20","type":""}]}]},"src":"7326:284:20"},{"nativeSrc":"7619:10:20","nodeType":"YulAssignment","src":"7619:10:20","value":{"name":"pos","nativeSrc":"7626:3:20","nodeType":"YulIdentifier","src":"7626:3:20"},"variableNames":[{"name":"end","nativeSrc":"7619:3:20","nodeType":"YulIdentifier","src":"7619:3:20"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"6903:732:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7006:5:20","nodeType":"YulTypedName","src":"7006:5:20","type":""},{"name":"pos","nativeSrc":"7013:3:20","nodeType":"YulTypedName","src":"7013:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7022:3:20","nodeType":"YulTypedName","src":"7022:3:20","type":""}],"src":"6903:732:20"},{"body":{"nativeSrc":"7789:225:20","nodeType":"YulBlock","src":"7789:225:20","statements":[{"nativeSrc":"7799:26:20","nodeType":"YulAssignment","src":"7799:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"7811:9:20","nodeType":"YulIdentifier","src":"7811:9:20"},{"kind":"number","nativeSrc":"7822:2:20","nodeType":"YulLiteral","src":"7822:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7807:3:20","nodeType":"YulIdentifier","src":"7807:3:20"},"nativeSrc":"7807:18:20","nodeType":"YulFunctionCall","src":"7807:18:20"},"variableNames":[{"name":"tail","nativeSrc":"7799:4:20","nodeType":"YulIdentifier","src":"7799:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7846:9:20","nodeType":"YulIdentifier","src":"7846:9:20"},{"kind":"number","nativeSrc":"7857:1:20","nodeType":"YulLiteral","src":"7857:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7842:3:20","nodeType":"YulIdentifier","src":"7842:3:20"},"nativeSrc":"7842:17:20","nodeType":"YulFunctionCall","src":"7842:17:20"},{"arguments":[{"name":"tail","nativeSrc":"7865:4:20","nodeType":"YulIdentifier","src":"7865:4:20"},{"name":"headStart","nativeSrc":"7871:9:20","nodeType":"YulIdentifier","src":"7871:9:20"}],"functionName":{"name":"sub","nativeSrc":"7861:3:20","nodeType":"YulIdentifier","src":"7861:3:20"},"nativeSrc":"7861:20:20","nodeType":"YulFunctionCall","src":"7861:20:20"}],"functionName":{"name":"mstore","nativeSrc":"7835:6:20","nodeType":"YulIdentifier","src":"7835:6:20"},"nativeSrc":"7835:47:20","nodeType":"YulFunctionCall","src":"7835:47:20"},"nativeSrc":"7835:47:20","nodeType":"YulExpressionStatement","src":"7835:47:20"},{"nativeSrc":"7891:116:20","nodeType":"YulAssignment","src":"7891:116:20","value":{"arguments":[{"name":"value0","nativeSrc":"7993:6:20","nodeType":"YulIdentifier","src":"7993:6:20"},{"name":"tail","nativeSrc":"8002:4:20","nodeType":"YulIdentifier","src":"8002:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"7899:93:20","nodeType":"YulIdentifier","src":"7899:93:20"},"nativeSrc":"7899:108:20","nodeType":"YulFunctionCall","src":"7899:108:20"},"variableNames":[{"name":"tail","nativeSrc":"7891:4:20","nodeType":"YulIdentifier","src":"7891:4:20"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7641:373:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7761:9:20","nodeType":"YulTypedName","src":"7761:9:20","type":""},{"name":"value0","nativeSrc":"7773:6:20","nodeType":"YulTypedName","src":"7773:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7784:4:20","nodeType":"YulTypedName","src":"7784:4:20","type":""}],"src":"7641:373:20"},{"body":{"nativeSrc":"8154:777:20","nodeType":"YulBlock","src":"8154:777:20","statements":[{"body":{"nativeSrc":"8201:83:20","nodeType":"YulBlock","src":"8201:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8203:77:20","nodeType":"YulIdentifier","src":"8203:77:20"},"nativeSrc":"8203:79:20","nodeType":"YulFunctionCall","src":"8203:79:20"},"nativeSrc":"8203:79:20","nodeType":"YulExpressionStatement","src":"8203:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8175:7:20","nodeType":"YulIdentifier","src":"8175:7:20"},{"name":"headStart","nativeSrc":"8184:9:20","nodeType":"YulIdentifier","src":"8184:9:20"}],"functionName":{"name":"sub","nativeSrc":"8171:3:20","nodeType":"YulIdentifier","src":"8171:3:20"},"nativeSrc":"8171:23:20","nodeType":"YulFunctionCall","src":"8171:23:20"},{"kind":"number","nativeSrc":"8196:3:20","nodeType":"YulLiteral","src":"8196:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"8167:3:20","nodeType":"YulIdentifier","src":"8167:3:20"},"nativeSrc":"8167:33:20","nodeType":"YulFunctionCall","src":"8167:33:20"},"nativeSrc":"8164:120:20","nodeType":"YulIf","src":"8164:120:20"},{"nativeSrc":"8294:117:20","nodeType":"YulBlock","src":"8294:117:20","statements":[{"nativeSrc":"8309:15:20","nodeType":"YulVariableDeclaration","src":"8309:15:20","value":{"kind":"number","nativeSrc":"8323:1:20","nodeType":"YulLiteral","src":"8323:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8313:6:20","nodeType":"YulTypedName","src":"8313:6:20","type":""}]},{"nativeSrc":"8338:63:20","nodeType":"YulAssignment","src":"8338:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8373:9:20","nodeType":"YulIdentifier","src":"8373:9:20"},{"name":"offset","nativeSrc":"8384:6:20","nodeType":"YulIdentifier","src":"8384:6:20"}],"functionName":{"name":"add","nativeSrc":"8369:3:20","nodeType":"YulIdentifier","src":"8369:3:20"},"nativeSrc":"8369:22:20","nodeType":"YulFunctionCall","src":"8369:22:20"},{"name":"dataEnd","nativeSrc":"8393:7:20","nodeType":"YulIdentifier","src":"8393:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8348:20:20","nodeType":"YulIdentifier","src":"8348:20:20"},"nativeSrc":"8348:53:20","nodeType":"YulFunctionCall","src":"8348:53:20"},"variableNames":[{"name":"value0","nativeSrc":"8338:6:20","nodeType":"YulIdentifier","src":"8338:6:20"}]}]},{"nativeSrc":"8421:118:20","nodeType":"YulBlock","src":"8421:118:20","statements":[{"nativeSrc":"8436:16:20","nodeType":"YulVariableDeclaration","src":"8436:16:20","value":{"kind":"number","nativeSrc":"8450:2:20","nodeType":"YulLiteral","src":"8450:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8440:6:20","nodeType":"YulTypedName","src":"8440:6:20","type":""}]},{"nativeSrc":"8466:63:20","nodeType":"YulAssignment","src":"8466:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8501:9:20","nodeType":"YulIdentifier","src":"8501:9:20"},{"name":"offset","nativeSrc":"8512:6:20","nodeType":"YulIdentifier","src":"8512:6:20"}],"functionName":{"name":"add","nativeSrc":"8497:3:20","nodeType":"YulIdentifier","src":"8497:3:20"},"nativeSrc":"8497:22:20","nodeType":"YulFunctionCall","src":"8497:22:20"},{"name":"dataEnd","nativeSrc":"8521:7:20","nodeType":"YulIdentifier","src":"8521:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8476:20:20","nodeType":"YulIdentifier","src":"8476:20:20"},"nativeSrc":"8476:53:20","nodeType":"YulFunctionCall","src":"8476:53:20"},"variableNames":[{"name":"value1","nativeSrc":"8466:6:20","nodeType":"YulIdentifier","src":"8466:6:20"}]}]},{"nativeSrc":"8549:118:20","nodeType":"YulBlock","src":"8549:118:20","statements":[{"nativeSrc":"8564:16:20","nodeType":"YulVariableDeclaration","src":"8564:16:20","value":{"kind":"number","nativeSrc":"8578:2:20","nodeType":"YulLiteral","src":"8578:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8568:6:20","nodeType":"YulTypedName","src":"8568:6:20","type":""}]},{"nativeSrc":"8594:63:20","nodeType":"YulAssignment","src":"8594:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8629:9:20","nodeType":"YulIdentifier","src":"8629:9:20"},{"name":"offset","nativeSrc":"8640:6:20","nodeType":"YulIdentifier","src":"8640:6:20"}],"functionName":{"name":"add","nativeSrc":"8625:3:20","nodeType":"YulIdentifier","src":"8625:3:20"},"nativeSrc":"8625:22:20","nodeType":"YulFunctionCall","src":"8625:22:20"},{"name":"dataEnd","nativeSrc":"8649:7:20","nodeType":"YulIdentifier","src":"8649:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8604:20:20","nodeType":"YulIdentifier","src":"8604:20:20"},"nativeSrc":"8604:53:20","nodeType":"YulFunctionCall","src":"8604:53:20"},"variableNames":[{"name":"value2","nativeSrc":"8594:6:20","nodeType":"YulIdentifier","src":"8594:6:20"}]}]},{"nativeSrc":"8677:118:20","nodeType":"YulBlock","src":"8677:118:20","statements":[{"nativeSrc":"8692:16:20","nodeType":"YulVariableDeclaration","src":"8692:16:20","value":{"kind":"number","nativeSrc":"8706:2:20","nodeType":"YulLiteral","src":"8706:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"8696:6:20","nodeType":"YulTypedName","src":"8696:6:20","type":""}]},{"nativeSrc":"8722:63:20","nodeType":"YulAssignment","src":"8722:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8757:9:20","nodeType":"YulIdentifier","src":"8757:9:20"},{"name":"offset","nativeSrc":"8768:6:20","nodeType":"YulIdentifier","src":"8768:6:20"}],"functionName":{"name":"add","nativeSrc":"8753:3:20","nodeType":"YulIdentifier","src":"8753:3:20"},"nativeSrc":"8753:22:20","nodeType":"YulFunctionCall","src":"8753:22:20"},{"name":"dataEnd","nativeSrc":"8777:7:20","nodeType":"YulIdentifier","src":"8777:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8732:20:20","nodeType":"YulIdentifier","src":"8732:20:20"},"nativeSrc":"8732:53:20","nodeType":"YulFunctionCall","src":"8732:53:20"},"variableNames":[{"name":"value3","nativeSrc":"8722:6:20","nodeType":"YulIdentifier","src":"8722:6:20"}]}]},{"nativeSrc":"8805:119:20","nodeType":"YulBlock","src":"8805:119:20","statements":[{"nativeSrc":"8820:17:20","nodeType":"YulVariableDeclaration","src":"8820:17:20","value":{"kind":"number","nativeSrc":"8834:3:20","nodeType":"YulLiteral","src":"8834:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"8824:6:20","nodeType":"YulTypedName","src":"8824:6:20","type":""}]},{"nativeSrc":"8851:63:20","nodeType":"YulAssignment","src":"8851:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8886:9:20","nodeType":"YulIdentifier","src":"8886:9:20"},{"name":"offset","nativeSrc":"8897:6:20","nodeType":"YulIdentifier","src":"8897:6:20"}],"functionName":{"name":"add","nativeSrc":"8882:3:20","nodeType":"YulIdentifier","src":"8882:3:20"},"nativeSrc":"8882:22:20","nodeType":"YulFunctionCall","src":"8882:22:20"},{"name":"dataEnd","nativeSrc":"8906:7:20","nodeType":"YulIdentifier","src":"8906:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8861:20:20","nodeType":"YulIdentifier","src":"8861:20:20"},"nativeSrc":"8861:53:20","nodeType":"YulFunctionCall","src":"8861:53:20"},"variableNames":[{"name":"value4","nativeSrc":"8851:6:20","nodeType":"YulIdentifier","src":"8851:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256","nativeSrc":"8020:911:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8092:9:20","nodeType":"YulTypedName","src":"8092:9:20","type":""},{"name":"dataEnd","nativeSrc":"8103:7:20","nodeType":"YulTypedName","src":"8103:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8115:6:20","nodeType":"YulTypedName","src":"8115:6:20","type":""},{"name":"value1","nativeSrc":"8123:6:20","nodeType":"YulTypedName","src":"8123:6:20","type":""},{"name":"value2","nativeSrc":"8131:6:20","nodeType":"YulTypedName","src":"8131:6:20","type":""},{"name":"value3","nativeSrc":"8139:6:20","nodeType":"YulTypedName","src":"8139:6:20","type":""},{"name":"value4","nativeSrc":"8147:6:20","nodeType":"YulTypedName","src":"8147:6:20","type":""}],"src":"8020:911:20"},{"body":{"nativeSrc":"9033:73:20","nodeType":"YulBlock","src":"9033:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9050:3:20","nodeType":"YulIdentifier","src":"9050:3:20"},{"name":"length","nativeSrc":"9055:6:20","nodeType":"YulIdentifier","src":"9055:6:20"}],"functionName":{"name":"mstore","nativeSrc":"9043:6:20","nodeType":"YulIdentifier","src":"9043:6:20"},"nativeSrc":"9043:19:20","nodeType":"YulFunctionCall","src":"9043:19:20"},"nativeSrc":"9043:19:20","nodeType":"YulExpressionStatement","src":"9043:19:20"},{"nativeSrc":"9071:29:20","nodeType":"YulAssignment","src":"9071:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"9090:3:20","nodeType":"YulIdentifier","src":"9090:3:20"},{"kind":"number","nativeSrc":"9095:4:20","nodeType":"YulLiteral","src":"9095:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9086:3:20","nodeType":"YulIdentifier","src":"9086:3:20"},"nativeSrc":"9086:14:20","nodeType":"YulFunctionCall","src":"9086:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"9071:11:20","nodeType":"YulIdentifier","src":"9071:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8937:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9005:3:20","nodeType":"YulTypedName","src":"9005:3:20","type":""},{"name":"length","nativeSrc":"9010:6:20","nodeType":"YulTypedName","src":"9010:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9021:11:20","nodeType":"YulTypedName","src":"9021:11:20","type":""}],"src":"8937:169:20"},{"body":{"nativeSrc":"9218:125:20","nodeType":"YulBlock","src":"9218:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9240:6:20","nodeType":"YulIdentifier","src":"9240:6:20"},{"kind":"number","nativeSrc":"9248:1:20","nodeType":"YulLiteral","src":"9248:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9236:3:20","nodeType":"YulIdentifier","src":"9236:3:20"},"nativeSrc":"9236:14:20","nodeType":"YulFunctionCall","src":"9236:14:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"9252:34:20","nodeType":"YulLiteral","src":"9252:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"9229:6:20","nodeType":"YulIdentifier","src":"9229:6:20"},"nativeSrc":"9229:58:20","nodeType":"YulFunctionCall","src":"9229:58:20"},"nativeSrc":"9229:58:20","nodeType":"YulExpressionStatement","src":"9229:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9308:6:20","nodeType":"YulIdentifier","src":"9308:6:20"},{"kind":"number","nativeSrc":"9316:2:20","nodeType":"YulLiteral","src":"9316:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9304:3:20","nodeType":"YulIdentifier","src":"9304:3:20"},"nativeSrc":"9304:15:20","nodeType":"YulFunctionCall","src":"9304:15:20"},{"hexValue":"64656c656761746563616c6c","kind":"string","nativeSrc":"9321:14:20","nodeType":"YulLiteral","src":"9321:14:20","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"9297:6:20","nodeType":"YulIdentifier","src":"9297:6:20"},"nativeSrc":"9297:39:20","nodeType":"YulFunctionCall","src":"9297:39:20"},"nativeSrc":"9297:39:20","nodeType":"YulExpressionStatement","src":"9297:39:20"}]},"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nativeSrc":"9112:231:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9210:6:20","nodeType":"YulTypedName","src":"9210:6:20","type":""}],"src":"9112:231:20"},{"body":{"nativeSrc":"9495:220:20","nodeType":"YulBlock","src":"9495:220:20","statements":[{"nativeSrc":"9505:74:20","nodeType":"YulAssignment","src":"9505:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"9571:3:20","nodeType":"YulIdentifier","src":"9571:3:20"},{"kind":"number","nativeSrc":"9576:2:20","nodeType":"YulLiteral","src":"9576:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9512:58:20","nodeType":"YulIdentifier","src":"9512:58:20"},"nativeSrc":"9512:67:20","nodeType":"YulFunctionCall","src":"9512:67:20"},"variableNames":[{"name":"pos","nativeSrc":"9505:3:20","nodeType":"YulIdentifier","src":"9505:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9677:3:20","nodeType":"YulIdentifier","src":"9677:3:20"}],"functionName":{"name":"store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","nativeSrc":"9588:88:20","nodeType":"YulIdentifier","src":"9588:88:20"},"nativeSrc":"9588:93:20","nodeType":"YulFunctionCall","src":"9588:93:20"},"nativeSrc":"9588:93:20","nodeType":"YulExpressionStatement","src":"9588:93:20"},{"nativeSrc":"9690:19:20","nodeType":"YulAssignment","src":"9690:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"9701:3:20","nodeType":"YulIdentifier","src":"9701:3:20"},{"kind":"number","nativeSrc":"9706:2:20","nodeType":"YulLiteral","src":"9706:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9697:3:20","nodeType":"YulIdentifier","src":"9697:3:20"},"nativeSrc":"9697:12:20","nodeType":"YulFunctionCall","src":"9697:12:20"},"variableNames":[{"name":"end","nativeSrc":"9690:3:20","nodeType":"YulIdentifier","src":"9690:3:20"}]}]},"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nativeSrc":"9349:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9483:3:20","nodeType":"YulTypedName","src":"9483:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9491:3:20","nodeType":"YulTypedName","src":"9491:3:20","type":""}],"src":"9349:366:20"},{"body":{"nativeSrc":"9892:248:20","nodeType":"YulBlock","src":"9892:248:20","statements":[{"nativeSrc":"9902:26:20","nodeType":"YulAssignment","src":"9902:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9914:9:20","nodeType":"YulIdentifier","src":"9914:9:20"},{"kind":"number","nativeSrc":"9925:2:20","nodeType":"YulLiteral","src":"9925:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9910:3:20","nodeType":"YulIdentifier","src":"9910:3:20"},"nativeSrc":"9910:18:20","nodeType":"YulFunctionCall","src":"9910:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9902:4:20","nodeType":"YulIdentifier","src":"9902:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9949:9:20","nodeType":"YulIdentifier","src":"9949:9:20"},{"kind":"number","nativeSrc":"9960:1:20","nodeType":"YulLiteral","src":"9960:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9945:3:20","nodeType":"YulIdentifier","src":"9945:3:20"},"nativeSrc":"9945:17:20","nodeType":"YulFunctionCall","src":"9945:17:20"},{"arguments":[{"name":"tail","nativeSrc":"9968:4:20","nodeType":"YulIdentifier","src":"9968:4:20"},{"name":"headStart","nativeSrc":"9974:9:20","nodeType":"YulIdentifier","src":"9974:9:20"}],"functionName":{"name":"sub","nativeSrc":"9964:3:20","nodeType":"YulIdentifier","src":"9964:3:20"},"nativeSrc":"9964:20:20","nodeType":"YulFunctionCall","src":"9964:20:20"}],"functionName":{"name":"mstore","nativeSrc":"9938:6:20","nodeType":"YulIdentifier","src":"9938:6:20"},"nativeSrc":"9938:47:20","nodeType":"YulFunctionCall","src":"9938:47:20"},"nativeSrc":"9938:47:20","nodeType":"YulExpressionStatement","src":"9938:47:20"},{"nativeSrc":"9994:139:20","nodeType":"YulAssignment","src":"9994:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"10128:4:20","nodeType":"YulIdentifier","src":"10128:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack","nativeSrc":"10002:124:20","nodeType":"YulIdentifier","src":"10002:124:20"},"nativeSrc":"10002:131:20","nodeType":"YulFunctionCall","src":"10002:131:20"},"variableNames":[{"name":"tail","nativeSrc":"9994:4:20","nodeType":"YulIdentifier","src":"9994:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9721:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9872:9:20","nodeType":"YulTypedName","src":"9872:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9887:4:20","nodeType":"YulTypedName","src":"9887:4:20","type":""}],"src":"9721:419:20"},{"body":{"nativeSrc":"10252:125:20","nodeType":"YulBlock","src":"10252:125:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10274:6:20","nodeType":"YulIdentifier","src":"10274:6:20"},{"kind":"number","nativeSrc":"10282:1:20","nodeType":"YulLiteral","src":"10282:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10270:3:20","nodeType":"YulIdentifier","src":"10270:3:20"},"nativeSrc":"10270:14:20","nodeType":"YulFunctionCall","src":"10270:14:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nativeSrc":"10286:34:20","nodeType":"YulLiteral","src":"10286:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nativeSrc":"10263:6:20","nodeType":"YulIdentifier","src":"10263:6:20"},"nativeSrc":"10263:58:20","nodeType":"YulFunctionCall","src":"10263:58:20"},"nativeSrc":"10263:58:20","nodeType":"YulExpressionStatement","src":"10263:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10342:6:20","nodeType":"YulIdentifier","src":"10342:6:20"},{"kind":"number","nativeSrc":"10350:2:20","nodeType":"YulLiteral","src":"10350:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10338:3:20","nodeType":"YulIdentifier","src":"10338:3:20"},"nativeSrc":"10338:15:20","nodeType":"YulFunctionCall","src":"10338:15:20"},{"hexValue":"6163746976652070726f7879","kind":"string","nativeSrc":"10355:14:20","nodeType":"YulLiteral","src":"10355:14:20","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nativeSrc":"10331:6:20","nodeType":"YulIdentifier","src":"10331:6:20"},"nativeSrc":"10331:39:20","nodeType":"YulFunctionCall","src":"10331:39:20"},"nativeSrc":"10331:39:20","nodeType":"YulExpressionStatement","src":"10331:39:20"}]},"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nativeSrc":"10146:231:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10244:6:20","nodeType":"YulTypedName","src":"10244:6:20","type":""}],"src":"10146:231:20"},{"body":{"nativeSrc":"10529:220:20","nodeType":"YulBlock","src":"10529:220:20","statements":[{"nativeSrc":"10539:74:20","nodeType":"YulAssignment","src":"10539:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"10605:3:20","nodeType":"YulIdentifier","src":"10605:3:20"},{"kind":"number","nativeSrc":"10610:2:20","nodeType":"YulLiteral","src":"10610:2:20","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10546:58:20","nodeType":"YulIdentifier","src":"10546:58:20"},"nativeSrc":"10546:67:20","nodeType":"YulFunctionCall","src":"10546:67:20"},"variableNames":[{"name":"pos","nativeSrc":"10539:3:20","nodeType":"YulIdentifier","src":"10539:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10711:3:20","nodeType":"YulIdentifier","src":"10711:3:20"}],"functionName":{"name":"store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","nativeSrc":"10622:88:20","nodeType":"YulIdentifier","src":"10622:88:20"},"nativeSrc":"10622:93:20","nodeType":"YulFunctionCall","src":"10622:93:20"},"nativeSrc":"10622:93:20","nodeType":"YulExpressionStatement","src":"10622:93:20"},{"nativeSrc":"10724:19:20","nodeType":"YulAssignment","src":"10724:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"10735:3:20","nodeType":"YulIdentifier","src":"10735:3:20"},{"kind":"number","nativeSrc":"10740:2:20","nodeType":"YulLiteral","src":"10740:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10731:3:20","nodeType":"YulIdentifier","src":"10731:3:20"},"nativeSrc":"10731:12:20","nodeType":"YulFunctionCall","src":"10731:12:20"},"variableNames":[{"name":"end","nativeSrc":"10724:3:20","nodeType":"YulIdentifier","src":"10724:3:20"}]}]},"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nativeSrc":"10383:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10517:3:20","nodeType":"YulTypedName","src":"10517:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10525:3:20","nodeType":"YulTypedName","src":"10525:3:20","type":""}],"src":"10383:366:20"},{"body":{"nativeSrc":"10926:248:20","nodeType":"YulBlock","src":"10926:248:20","statements":[{"nativeSrc":"10936:26:20","nodeType":"YulAssignment","src":"10936:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10948:9:20","nodeType":"YulIdentifier","src":"10948:9:20"},{"kind":"number","nativeSrc":"10959:2:20","nodeType":"YulLiteral","src":"10959:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10944:3:20","nodeType":"YulIdentifier","src":"10944:3:20"},"nativeSrc":"10944:18:20","nodeType":"YulFunctionCall","src":"10944:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10936:4:20","nodeType":"YulIdentifier","src":"10936:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10983:9:20","nodeType":"YulIdentifier","src":"10983:9:20"},{"kind":"number","nativeSrc":"10994:1:20","nodeType":"YulLiteral","src":"10994:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10979:3:20","nodeType":"YulIdentifier","src":"10979:3:20"},"nativeSrc":"10979:17:20","nodeType":"YulFunctionCall","src":"10979:17:20"},{"arguments":[{"name":"tail","nativeSrc":"11002:4:20","nodeType":"YulIdentifier","src":"11002:4:20"},{"name":"headStart","nativeSrc":"11008:9:20","nodeType":"YulIdentifier","src":"11008:9:20"}],"functionName":{"name":"sub","nativeSrc":"10998:3:20","nodeType":"YulIdentifier","src":"10998:3:20"},"nativeSrc":"10998:20:20","nodeType":"YulFunctionCall","src":"10998:20:20"}],"functionName":{"name":"mstore","nativeSrc":"10972:6:20","nodeType":"YulIdentifier","src":"10972:6:20"},"nativeSrc":"10972:47:20","nodeType":"YulFunctionCall","src":"10972:47:20"},"nativeSrc":"10972:47:20","nodeType":"YulExpressionStatement","src":"10972:47:20"},{"nativeSrc":"11028:139:20","nodeType":"YulAssignment","src":"11028:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"11162:4:20","nodeType":"YulIdentifier","src":"11162:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack","nativeSrc":"11036:124:20","nodeType":"YulIdentifier","src":"11036:124:20"},"nativeSrc":"11036:131:20","nodeType":"YulFunctionCall","src":"11036:131:20"},"variableNames":[{"name":"tail","nativeSrc":"11028:4:20","nodeType":"YulIdentifier","src":"11028:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10755:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10906:9:20","nodeType":"YulTypedName","src":"10906:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10921:4:20","nodeType":"YulTypedName","src":"10921:4:20","type":""}],"src":"10755:419:20"},{"body":{"nativeSrc":"11286:127:20","nodeType":"YulBlock","src":"11286:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11308:6:20","nodeType":"YulIdentifier","src":"11308:6:20"},{"kind":"number","nativeSrc":"11316:1:20","nodeType":"YulLiteral","src":"11316:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11304:3:20","nodeType":"YulIdentifier","src":"11304:3:20"},"nativeSrc":"11304:14:20","nodeType":"YulFunctionCall","src":"11304:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nativeSrc":"11320:34:20","nodeType":"YulLiteral","src":"11320:34:20","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nativeSrc":"11297:6:20","nodeType":"YulIdentifier","src":"11297:6:20"},"nativeSrc":"11297:58:20","nodeType":"YulFunctionCall","src":"11297:58:20"},"nativeSrc":"11297:58:20","nodeType":"YulExpressionStatement","src":"11297:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11376:6:20","nodeType":"YulIdentifier","src":"11376:6:20"},{"kind":"number","nativeSrc":"11384:2:20","nodeType":"YulLiteral","src":"11384:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11372:3:20","nodeType":"YulIdentifier","src":"11372:3:20"},"nativeSrc":"11372:15:20","nodeType":"YulFunctionCall","src":"11372:15:20"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nativeSrc":"11389:16:20","nodeType":"YulLiteral","src":"11389:16:20","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nativeSrc":"11365:6:20","nodeType":"YulIdentifier","src":"11365:6:20"},"nativeSrc":"11365:41:20","nodeType":"YulFunctionCall","src":"11365:41:20"},"nativeSrc":"11365:41:20","nodeType":"YulExpressionStatement","src":"11365:41:20"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nativeSrc":"11180:233:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11278:6:20","nodeType":"YulTypedName","src":"11278:6:20","type":""}],"src":"11180:233:20"},{"body":{"nativeSrc":"11565:220:20","nodeType":"YulBlock","src":"11565:220:20","statements":[{"nativeSrc":"11575:74:20","nodeType":"YulAssignment","src":"11575:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"11641:3:20","nodeType":"YulIdentifier","src":"11641:3:20"},{"kind":"number","nativeSrc":"11646:2:20","nodeType":"YulLiteral","src":"11646:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11582:58:20","nodeType":"YulIdentifier","src":"11582:58:20"},"nativeSrc":"11582:67:20","nodeType":"YulFunctionCall","src":"11582:67:20"},"variableNames":[{"name":"pos","nativeSrc":"11575:3:20","nodeType":"YulIdentifier","src":"11575:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11747:3:20","nodeType":"YulIdentifier","src":"11747:3:20"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nativeSrc":"11658:88:20","nodeType":"YulIdentifier","src":"11658:88:20"},"nativeSrc":"11658:93:20","nodeType":"YulFunctionCall","src":"11658:93:20"},"nativeSrc":"11658:93:20","nodeType":"YulExpressionStatement","src":"11658:93:20"},{"nativeSrc":"11760:19:20","nodeType":"YulAssignment","src":"11760:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"11771:3:20","nodeType":"YulIdentifier","src":"11771:3:20"},{"kind":"number","nativeSrc":"11776:2:20","nodeType":"YulLiteral","src":"11776:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11767:3:20","nodeType":"YulIdentifier","src":"11767:3:20"},"nativeSrc":"11767:12:20","nodeType":"YulFunctionCall","src":"11767:12:20"},"variableNames":[{"name":"end","nativeSrc":"11760:3:20","nodeType":"YulIdentifier","src":"11760:3:20"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nativeSrc":"11419:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11553:3:20","nodeType":"YulTypedName","src":"11553:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11561:3:20","nodeType":"YulTypedName","src":"11561:3:20","type":""}],"src":"11419:366:20"},{"body":{"nativeSrc":"11962:248:20","nodeType":"YulBlock","src":"11962:248:20","statements":[{"nativeSrc":"11972:26:20","nodeType":"YulAssignment","src":"11972:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11984:9:20","nodeType":"YulIdentifier","src":"11984:9:20"},{"kind":"number","nativeSrc":"11995:2:20","nodeType":"YulLiteral","src":"11995:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11980:3:20","nodeType":"YulIdentifier","src":"11980:3:20"},"nativeSrc":"11980:18:20","nodeType":"YulFunctionCall","src":"11980:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11972:4:20","nodeType":"YulIdentifier","src":"11972:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12019:9:20","nodeType":"YulIdentifier","src":"12019:9:20"},{"kind":"number","nativeSrc":"12030:1:20","nodeType":"YulLiteral","src":"12030:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12015:3:20","nodeType":"YulIdentifier","src":"12015:3:20"},"nativeSrc":"12015:17:20","nodeType":"YulFunctionCall","src":"12015:17:20"},{"arguments":[{"name":"tail","nativeSrc":"12038:4:20","nodeType":"YulIdentifier","src":"12038:4:20"},{"name":"headStart","nativeSrc":"12044:9:20","nodeType":"YulIdentifier","src":"12044:9:20"}],"functionName":{"name":"sub","nativeSrc":"12034:3:20","nodeType":"YulIdentifier","src":"12034:3:20"},"nativeSrc":"12034:20:20","nodeType":"YulFunctionCall","src":"12034:20:20"}],"functionName":{"name":"mstore","nativeSrc":"12008:6:20","nodeType":"YulIdentifier","src":"12008:6:20"},"nativeSrc":"12008:47:20","nodeType":"YulFunctionCall","src":"12008:47:20"},"nativeSrc":"12008:47:20","nodeType":"YulExpressionStatement","src":"12008:47:20"},{"nativeSrc":"12064:139:20","nodeType":"YulAssignment","src":"12064:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"12198:4:20","nodeType":"YulIdentifier","src":"12198:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nativeSrc":"12072:124:20","nodeType":"YulIdentifier","src":"12072:124:20"},"nativeSrc":"12072:131:20","nodeType":"YulFunctionCall","src":"12072:131:20"},"variableNames":[{"name":"tail","nativeSrc":"12064:4:20","nodeType":"YulIdentifier","src":"12064:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11791:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11942:9:20","nodeType":"YulTypedName","src":"11942:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11957:4:20","nodeType":"YulTypedName","src":"11957:4:20","type":""}],"src":"11791:419:20"},{"body":{"nativeSrc":"12322:74:20","nodeType":"YulBlock","src":"12322:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12344:6:20","nodeType":"YulIdentifier","src":"12344:6:20"},{"kind":"number","nativeSrc":"12352:1:20","nodeType":"YulLiteral","src":"12352:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12340:3:20","nodeType":"YulIdentifier","src":"12340:3:20"},"nativeSrc":"12340:14:20","nodeType":"YulFunctionCall","src":"12340:14:20"},{"hexValue":"496e76616c69642061756374696f6e20696d706c656d656e746174696f6e","kind":"string","nativeSrc":"12356:32:20","nodeType":"YulLiteral","src":"12356:32:20","type":"","value":"Invalid auction implementation"}],"functionName":{"name":"mstore","nativeSrc":"12333:6:20","nodeType":"YulIdentifier","src":"12333:6:20"},"nativeSrc":"12333:56:20","nodeType":"YulFunctionCall","src":"12333:56:20"},"nativeSrc":"12333:56:20","nodeType":"YulExpressionStatement","src":"12333:56:20"}]},"name":"store_literal_in_memory_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927","nativeSrc":"12216:180:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12314:6:20","nodeType":"YulTypedName","src":"12314:6:20","type":""}],"src":"12216:180:20"},{"body":{"nativeSrc":"12548:220:20","nodeType":"YulBlock","src":"12548:220:20","statements":[{"nativeSrc":"12558:74:20","nodeType":"YulAssignment","src":"12558:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"12624:3:20","nodeType":"YulIdentifier","src":"12624:3:20"},{"kind":"number","nativeSrc":"12629:2:20","nodeType":"YulLiteral","src":"12629:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12565:58:20","nodeType":"YulIdentifier","src":"12565:58:20"},"nativeSrc":"12565:67:20","nodeType":"YulFunctionCall","src":"12565:67:20"},"variableNames":[{"name":"pos","nativeSrc":"12558:3:20","nodeType":"YulIdentifier","src":"12558:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12730:3:20","nodeType":"YulIdentifier","src":"12730:3:20"}],"functionName":{"name":"store_literal_in_memory_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927","nativeSrc":"12641:88:20","nodeType":"YulIdentifier","src":"12641:88:20"},"nativeSrc":"12641:93:20","nodeType":"YulFunctionCall","src":"12641:93:20"},"nativeSrc":"12641:93:20","nodeType":"YulExpressionStatement","src":"12641:93:20"},{"nativeSrc":"12743:19:20","nodeType":"YulAssignment","src":"12743:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"12754:3:20","nodeType":"YulIdentifier","src":"12754:3:20"},{"kind":"number","nativeSrc":"12759:2:20","nodeType":"YulLiteral","src":"12759:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12750:3:20","nodeType":"YulIdentifier","src":"12750:3:20"},"nativeSrc":"12750:12:20","nodeType":"YulFunctionCall","src":"12750:12:20"},"variableNames":[{"name":"end","nativeSrc":"12743:3:20","nodeType":"YulIdentifier","src":"12743:3:20"}]}]},"name":"abi_encode_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927_to_t_string_memory_ptr_fromStack","nativeSrc":"12402:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12536:3:20","nodeType":"YulTypedName","src":"12536:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12544:3:20","nodeType":"YulTypedName","src":"12544:3:20","type":""}],"src":"12402:366:20"},{"body":{"nativeSrc":"12945:248:20","nodeType":"YulBlock","src":"12945:248:20","statements":[{"nativeSrc":"12955:26:20","nodeType":"YulAssignment","src":"12955:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12967:9:20","nodeType":"YulIdentifier","src":"12967:9:20"},{"kind":"number","nativeSrc":"12978:2:20","nodeType":"YulLiteral","src":"12978:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12963:3:20","nodeType":"YulIdentifier","src":"12963:3:20"},"nativeSrc":"12963:18:20","nodeType":"YulFunctionCall","src":"12963:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12955:4:20","nodeType":"YulIdentifier","src":"12955:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13002:9:20","nodeType":"YulIdentifier","src":"13002:9:20"},{"kind":"number","nativeSrc":"13013:1:20","nodeType":"YulLiteral","src":"13013:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12998:3:20","nodeType":"YulIdentifier","src":"12998:3:20"},"nativeSrc":"12998:17:20","nodeType":"YulFunctionCall","src":"12998:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13021:4:20","nodeType":"YulIdentifier","src":"13021:4:20"},{"name":"headStart","nativeSrc":"13027:9:20","nodeType":"YulIdentifier","src":"13027:9:20"}],"functionName":{"name":"sub","nativeSrc":"13017:3:20","nodeType":"YulIdentifier","src":"13017:3:20"},"nativeSrc":"13017:20:20","nodeType":"YulFunctionCall","src":"13017:20:20"}],"functionName":{"name":"mstore","nativeSrc":"12991:6:20","nodeType":"YulIdentifier","src":"12991:6:20"},"nativeSrc":"12991:47:20","nodeType":"YulFunctionCall","src":"12991:47:20"},"nativeSrc":"12991:47:20","nodeType":"YulExpressionStatement","src":"12991:47:20"},{"nativeSrc":"13047:139:20","nodeType":"YulAssignment","src":"13047:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"13181:4:20","nodeType":"YulIdentifier","src":"13181:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927_to_t_string_memory_ptr_fromStack","nativeSrc":"13055:124:20","nodeType":"YulIdentifier","src":"13055:124:20"},"nativeSrc":"13055:131:20","nodeType":"YulFunctionCall","src":"13055:131:20"},"variableNames":[{"name":"tail","nativeSrc":"13047:4:20","nodeType":"YulIdentifier","src":"13047:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12774:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12925:9:20","nodeType":"YulTypedName","src":"12925:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12940:4:20","nodeType":"YulTypedName","src":"12940:4:20","type":""}],"src":"12774:419:20"},{"body":{"nativeSrc":"13305:64:20","nodeType":"YulBlock","src":"13305:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13327:6:20","nodeType":"YulIdentifier","src":"13327:6:20"},{"kind":"number","nativeSrc":"13335:1:20","nodeType":"YulLiteral","src":"13335:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13323:3:20","nodeType":"YulIdentifier","src":"13323:3:20"},"nativeSrc":"13323:14:20","nodeType":"YulFunctionCall","src":"13323:14:20"},{"hexValue":"496e76616c6964207072696365206f7261636c65","kind":"string","nativeSrc":"13339:22:20","nodeType":"YulLiteral","src":"13339:22:20","type":"","value":"Invalid price oracle"}],"functionName":{"name":"mstore","nativeSrc":"13316:6:20","nodeType":"YulIdentifier","src":"13316:6:20"},"nativeSrc":"13316:46:20","nodeType":"YulFunctionCall","src":"13316:46:20"},"nativeSrc":"13316:46:20","nodeType":"YulExpressionStatement","src":"13316:46:20"}]},"name":"store_literal_in_memory_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","nativeSrc":"13199:170:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13297:6:20","nodeType":"YulTypedName","src":"13297:6:20","type":""}],"src":"13199:170:20"},{"body":{"nativeSrc":"13521:220:20","nodeType":"YulBlock","src":"13521:220:20","statements":[{"nativeSrc":"13531:74:20","nodeType":"YulAssignment","src":"13531:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"13597:3:20","nodeType":"YulIdentifier","src":"13597:3:20"},{"kind":"number","nativeSrc":"13602:2:20","nodeType":"YulLiteral","src":"13602:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13538:58:20","nodeType":"YulIdentifier","src":"13538:58:20"},"nativeSrc":"13538:67:20","nodeType":"YulFunctionCall","src":"13538:67:20"},"variableNames":[{"name":"pos","nativeSrc":"13531:3:20","nodeType":"YulIdentifier","src":"13531:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13703:3:20","nodeType":"YulIdentifier","src":"13703:3:20"}],"functionName":{"name":"store_literal_in_memory_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","nativeSrc":"13614:88:20","nodeType":"YulIdentifier","src":"13614:88:20"},"nativeSrc":"13614:93:20","nodeType":"YulFunctionCall","src":"13614:93:20"},"nativeSrc":"13614:93:20","nodeType":"YulExpressionStatement","src":"13614:93:20"},{"nativeSrc":"13716:19:20","nodeType":"YulAssignment","src":"13716:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"13727:3:20","nodeType":"YulIdentifier","src":"13727:3:20"},{"kind":"number","nativeSrc":"13732:2:20","nodeType":"YulLiteral","src":"13732:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13723:3:20","nodeType":"YulIdentifier","src":"13723:3:20"},"nativeSrc":"13723:12:20","nodeType":"YulFunctionCall","src":"13723:12:20"},"variableNames":[{"name":"end","nativeSrc":"13716:3:20","nodeType":"YulIdentifier","src":"13716:3:20"}]}]},"name":"abi_encode_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29_to_t_string_memory_ptr_fromStack","nativeSrc":"13375:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13509:3:20","nodeType":"YulTypedName","src":"13509:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13517:3:20","nodeType":"YulTypedName","src":"13517:3:20","type":""}],"src":"13375:366:20"},{"body":{"nativeSrc":"13918:248:20","nodeType":"YulBlock","src":"13918:248:20","statements":[{"nativeSrc":"13928:26:20","nodeType":"YulAssignment","src":"13928:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13940:9:20","nodeType":"YulIdentifier","src":"13940:9:20"},{"kind":"number","nativeSrc":"13951:2:20","nodeType":"YulLiteral","src":"13951:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13936:3:20","nodeType":"YulIdentifier","src":"13936:3:20"},"nativeSrc":"13936:18:20","nodeType":"YulFunctionCall","src":"13936:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13928:4:20","nodeType":"YulIdentifier","src":"13928:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13975:9:20","nodeType":"YulIdentifier","src":"13975:9:20"},{"kind":"number","nativeSrc":"13986:1:20","nodeType":"YulLiteral","src":"13986:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13971:3:20","nodeType":"YulIdentifier","src":"13971:3:20"},"nativeSrc":"13971:17:20","nodeType":"YulFunctionCall","src":"13971:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13994:4:20","nodeType":"YulIdentifier","src":"13994:4:20"},{"name":"headStart","nativeSrc":"14000:9:20","nodeType":"YulIdentifier","src":"14000:9:20"}],"functionName":{"name":"sub","nativeSrc":"13990:3:20","nodeType":"YulIdentifier","src":"13990:3:20"},"nativeSrc":"13990:20:20","nodeType":"YulFunctionCall","src":"13990:20:20"}],"functionName":{"name":"mstore","nativeSrc":"13964:6:20","nodeType":"YulIdentifier","src":"13964:6:20"},"nativeSrc":"13964:47:20","nodeType":"YulFunctionCall","src":"13964:47:20"},"nativeSrc":"13964:47:20","nodeType":"YulExpressionStatement","src":"13964:47:20"},{"nativeSrc":"14020:139:20","nodeType":"YulAssignment","src":"14020:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"14154:4:20","nodeType":"YulIdentifier","src":"14154:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29_to_t_string_memory_ptr_fromStack","nativeSrc":"14028:124:20","nodeType":"YulIdentifier","src":"14028:124:20"},"nativeSrc":"14028:131:20","nodeType":"YulFunctionCall","src":"14028:131:20"},"variableNames":[{"name":"tail","nativeSrc":"14020:4:20","nodeType":"YulIdentifier","src":"14020:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13747:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13898:9:20","nodeType":"YulTypedName","src":"13898:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13913:4:20","nodeType":"YulTypedName","src":"13913:4:20","type":""}],"src":"13747:419:20"},{"body":{"nativeSrc":"14225:32:20","nodeType":"YulBlock","src":"14225:32:20","statements":[{"nativeSrc":"14235:16:20","nodeType":"YulAssignment","src":"14235:16:20","value":{"name":"value","nativeSrc":"14246:5:20","nodeType":"YulIdentifier","src":"14246:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14235:7:20","nodeType":"YulIdentifier","src":"14235:7:20"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"14172:85:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14207:5:20","nodeType":"YulTypedName","src":"14207:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14217:7:20","nodeType":"YulTypedName","src":"14217:7:20","type":""}],"src":"14172:85:20"},{"body":{"nativeSrc":"14306:43:20","nodeType":"YulBlock","src":"14306:43:20","statements":[{"nativeSrc":"14316:27:20","nodeType":"YulAssignment","src":"14316:27:20","value":{"arguments":[{"name":"value","nativeSrc":"14331:5:20","nodeType":"YulIdentifier","src":"14331:5:20"},{"kind":"number","nativeSrc":"14338:4:20","nodeType":"YulLiteral","src":"14338:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"14327:3:20","nodeType":"YulIdentifier","src":"14327:3:20"},"nativeSrc":"14327:16:20","nodeType":"YulFunctionCall","src":"14327:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14316:7:20","nodeType":"YulIdentifier","src":"14316:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"14263:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14288:5:20","nodeType":"YulTypedName","src":"14288:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14298:7:20","nodeType":"YulTypedName","src":"14298:7:20","type":""}],"src":"14263:86:20"},{"body":{"nativeSrc":"14387:28:20","nodeType":"YulBlock","src":"14387:28:20","statements":[{"nativeSrc":"14397:12:20","nodeType":"YulAssignment","src":"14397:12:20","value":{"name":"value","nativeSrc":"14404:5:20","nodeType":"YulIdentifier","src":"14404:5:20"},"variableNames":[{"name":"ret","nativeSrc":"14397:3:20","nodeType":"YulIdentifier","src":"14397:3:20"}]}]},"name":"identity","nativeSrc":"14355:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14373:5:20","nodeType":"YulTypedName","src":"14373:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"14383:3:20","nodeType":"YulTypedName","src":"14383:3:20","type":""}],"src":"14355:60:20"},{"body":{"nativeSrc":"14487:88:20","nodeType":"YulBlock","src":"14487:88:20","statements":[{"nativeSrc":"14497:72:20","nodeType":"YulAssignment","src":"14497:72:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14561:5:20","nodeType":"YulIdentifier","src":"14561:5:20"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"14535:25:20","nodeType":"YulIdentifier","src":"14535:25:20"},"nativeSrc":"14535:32:20","nodeType":"YulFunctionCall","src":"14535:32:20"}],"functionName":{"name":"identity","nativeSrc":"14526:8:20","nodeType":"YulIdentifier","src":"14526:8:20"},"nativeSrc":"14526:42:20","nodeType":"YulFunctionCall","src":"14526:42:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"14510:15:20","nodeType":"YulIdentifier","src":"14510:15:20"},"nativeSrc":"14510:59:20","nodeType":"YulFunctionCall","src":"14510:59:20"},"variableNames":[{"name":"converted","nativeSrc":"14497:9:20","nodeType":"YulIdentifier","src":"14497:9:20"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nativeSrc":"14421:154:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14467:5:20","nodeType":"YulTypedName","src":"14467:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"14477:9:20","nodeType":"YulTypedName","src":"14477:9:20","type":""}],"src":"14421:154:20"},{"body":{"nativeSrc":"14652:72:20","nodeType":"YulBlock","src":"14652:72:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14669:3:20","nodeType":"YulIdentifier","src":"14669:3:20"},{"arguments":[{"name":"value","nativeSrc":"14711:5:20","nodeType":"YulIdentifier","src":"14711:5:20"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nativeSrc":"14674:36:20","nodeType":"YulIdentifier","src":"14674:36:20"},"nativeSrc":"14674:43:20","nodeType":"YulFunctionCall","src":"14674:43:20"}],"functionName":{"name":"mstore","nativeSrc":"14662:6:20","nodeType":"YulIdentifier","src":"14662:6:20"},"nativeSrc":"14662:56:20","nodeType":"YulFunctionCall","src":"14662:56:20"},"nativeSrc":"14662:56:20","nodeType":"YulExpressionStatement","src":"14662:56:20"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nativeSrc":"14581:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14640:5:20","nodeType":"YulTypedName","src":"14640:5:20","type":""},{"name":"pos","nativeSrc":"14647:3:20","nodeType":"YulTypedName","src":"14647:3:20","type":""}],"src":"14581:143:20"},{"body":{"nativeSrc":"14834:130:20","nodeType":"YulBlock","src":"14834:130:20","statements":[{"nativeSrc":"14844:26:20","nodeType":"YulAssignment","src":"14844:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"14856:9:20","nodeType":"YulIdentifier","src":"14856:9:20"},{"kind":"number","nativeSrc":"14867:2:20","nodeType":"YulLiteral","src":"14867:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14852:3:20","nodeType":"YulIdentifier","src":"14852:3:20"},"nativeSrc":"14852:18:20","nodeType":"YulFunctionCall","src":"14852:18:20"},"variableNames":[{"name":"tail","nativeSrc":"14844:4:20","nodeType":"YulIdentifier","src":"14844:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14930:6:20","nodeType":"YulIdentifier","src":"14930:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"14943:9:20","nodeType":"YulIdentifier","src":"14943:9:20"},{"kind":"number","nativeSrc":"14954:1:20","nodeType":"YulLiteral","src":"14954:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14939:3:20","nodeType":"YulIdentifier","src":"14939:3:20"},"nativeSrc":"14939:17:20","nodeType":"YulFunctionCall","src":"14939:17:20"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nativeSrc":"14880:49:20","nodeType":"YulIdentifier","src":"14880:49:20"},"nativeSrc":"14880:77:20","nodeType":"YulFunctionCall","src":"14880:77:20"},"nativeSrc":"14880:77:20","nodeType":"YulExpressionStatement","src":"14880:77:20"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nativeSrc":"14730:234:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14806:9:20","nodeType":"YulTypedName","src":"14806:9:20","type":""},{"name":"value0","nativeSrc":"14818:6:20","nodeType":"YulTypedName","src":"14818:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14829:4:20","nodeType":"YulTypedName","src":"14829:4:20","type":""}],"src":"14730:234:20"},{"body":{"nativeSrc":"15076:137:20","nodeType":"YulBlock","src":"15076:137:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15098:6:20","nodeType":"YulIdentifier","src":"15098:6:20"},{"kind":"number","nativeSrc":"15106:1:20","nodeType":"YulLiteral","src":"15106:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15094:3:20","nodeType":"YulIdentifier","src":"15094:3:20"},"nativeSrc":"15094:14:20","nodeType":"YulFunctionCall","src":"15094:14:20"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nativeSrc":"15110:34:20","nodeType":"YulLiteral","src":"15110:34:20","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nativeSrc":"15087:6:20","nodeType":"YulIdentifier","src":"15087:6:20"},"nativeSrc":"15087:58:20","nodeType":"YulFunctionCall","src":"15087:58:20"},"nativeSrc":"15087:58:20","nodeType":"YulExpressionStatement","src":"15087:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15166:6:20","nodeType":"YulIdentifier","src":"15166:6:20"},{"kind":"number","nativeSrc":"15174:2:20","nodeType":"YulLiteral","src":"15174:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15162:3:20","nodeType":"YulIdentifier","src":"15162:3:20"},"nativeSrc":"15162:15:20","nodeType":"YulFunctionCall","src":"15162:15:20"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nativeSrc":"15179:26:20","nodeType":"YulLiteral","src":"15179:26:20","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nativeSrc":"15155:6:20","nodeType":"YulIdentifier","src":"15155:6:20"},"nativeSrc":"15155:51:20","nodeType":"YulFunctionCall","src":"15155:51:20"},"nativeSrc":"15155:51:20","nodeType":"YulExpressionStatement","src":"15155:51:20"}]},"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nativeSrc":"14970:243:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15068:6:20","nodeType":"YulTypedName","src":"15068:6:20","type":""}],"src":"14970:243:20"},{"body":{"nativeSrc":"15365:220:20","nodeType":"YulBlock","src":"15365:220:20","statements":[{"nativeSrc":"15375:74:20","nodeType":"YulAssignment","src":"15375:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"15441:3:20","nodeType":"YulIdentifier","src":"15441:3:20"},{"kind":"number","nativeSrc":"15446:2:20","nodeType":"YulLiteral","src":"15446:2:20","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15382:58:20","nodeType":"YulIdentifier","src":"15382:58:20"},"nativeSrc":"15382:67:20","nodeType":"YulFunctionCall","src":"15382:67:20"},"variableNames":[{"name":"pos","nativeSrc":"15375:3:20","nodeType":"YulIdentifier","src":"15375:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15547:3:20","nodeType":"YulIdentifier","src":"15547:3:20"}],"functionName":{"name":"store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","nativeSrc":"15458:88:20","nodeType":"YulIdentifier","src":"15458:88:20"},"nativeSrc":"15458:93:20","nodeType":"YulFunctionCall","src":"15458:93:20"},"nativeSrc":"15458:93:20","nodeType":"YulExpressionStatement","src":"15458:93:20"},{"nativeSrc":"15560:19:20","nodeType":"YulAssignment","src":"15560:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"15571:3:20","nodeType":"YulIdentifier","src":"15571:3:20"},{"kind":"number","nativeSrc":"15576:2:20","nodeType":"YulLiteral","src":"15576:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15567:3:20","nodeType":"YulIdentifier","src":"15567:3:20"},"nativeSrc":"15567:12:20","nodeType":"YulFunctionCall","src":"15567:12:20"},"variableNames":[{"name":"end","nativeSrc":"15560:3:20","nodeType":"YulIdentifier","src":"15560:3:20"}]}]},"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nativeSrc":"15219:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15353:3:20","nodeType":"YulTypedName","src":"15353:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15361:3:20","nodeType":"YulTypedName","src":"15361:3:20","type":""}],"src":"15219:366:20"},{"body":{"nativeSrc":"15762:248:20","nodeType":"YulBlock","src":"15762:248:20","statements":[{"nativeSrc":"15772:26:20","nodeType":"YulAssignment","src":"15772:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"15784:9:20","nodeType":"YulIdentifier","src":"15784:9:20"},{"kind":"number","nativeSrc":"15795:2:20","nodeType":"YulLiteral","src":"15795:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15780:3:20","nodeType":"YulIdentifier","src":"15780:3:20"},"nativeSrc":"15780:18:20","nodeType":"YulFunctionCall","src":"15780:18:20"},"variableNames":[{"name":"tail","nativeSrc":"15772:4:20","nodeType":"YulIdentifier","src":"15772:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15819:9:20","nodeType":"YulIdentifier","src":"15819:9:20"},{"kind":"number","nativeSrc":"15830:1:20","nodeType":"YulLiteral","src":"15830:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15815:3:20","nodeType":"YulIdentifier","src":"15815:3:20"},"nativeSrc":"15815:17:20","nodeType":"YulFunctionCall","src":"15815:17:20"},{"arguments":[{"name":"tail","nativeSrc":"15838:4:20","nodeType":"YulIdentifier","src":"15838:4:20"},{"name":"headStart","nativeSrc":"15844:9:20","nodeType":"YulIdentifier","src":"15844:9:20"}],"functionName":{"name":"sub","nativeSrc":"15834:3:20","nodeType":"YulIdentifier","src":"15834:3:20"},"nativeSrc":"15834:20:20","nodeType":"YulFunctionCall","src":"15834:20:20"}],"functionName":{"name":"mstore","nativeSrc":"15808:6:20","nodeType":"YulIdentifier","src":"15808:6:20"},"nativeSrc":"15808:47:20","nodeType":"YulFunctionCall","src":"15808:47:20"},"nativeSrc":"15808:47:20","nodeType":"YulExpressionStatement","src":"15808:47:20"},{"nativeSrc":"15864:139:20","nodeType":"YulAssignment","src":"15864:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"15998:4:20","nodeType":"YulIdentifier","src":"15998:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack","nativeSrc":"15872:124:20","nodeType":"YulIdentifier","src":"15872:124:20"},"nativeSrc":"15872:131:20","nodeType":"YulFunctionCall","src":"15872:131:20"},"variableNames":[{"name":"tail","nativeSrc":"15864:4:20","nodeType":"YulIdentifier","src":"15864:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15591:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15742:9:20","nodeType":"YulTypedName","src":"15742:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15757:4:20","nodeType":"YulTypedName","src":"15757:4:20","type":""}],"src":"15591:419:20"},{"body":{"nativeSrc":"16122:64:20","nodeType":"YulBlock","src":"16122:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16144:6:20","nodeType":"YulIdentifier","src":"16144:6:20"},{"kind":"number","nativeSrc":"16152:1:20","nodeType":"YulLiteral","src":"16152:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16140:3:20","nodeType":"YulIdentifier","src":"16140:3:20"},"nativeSrc":"16140:14:20","nodeType":"YulFunctionCall","src":"16140:14:20"},{"hexValue":"496e76616c6964204e465420636f6e7472616374","kind":"string","nativeSrc":"16156:22:20","nodeType":"YulLiteral","src":"16156:22:20","type":"","value":"Invalid NFT contract"}],"functionName":{"name":"mstore","nativeSrc":"16133:6:20","nodeType":"YulIdentifier","src":"16133:6:20"},"nativeSrc":"16133:46:20","nodeType":"YulFunctionCall","src":"16133:46:20"},"nativeSrc":"16133:46:20","nodeType":"YulExpressionStatement","src":"16133:46:20"}]},"name":"store_literal_in_memory_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","nativeSrc":"16016:170:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16114:6:20","nodeType":"YulTypedName","src":"16114:6:20","type":""}],"src":"16016:170:20"},{"body":{"nativeSrc":"16338:220:20","nodeType":"YulBlock","src":"16338:220:20","statements":[{"nativeSrc":"16348:74:20","nodeType":"YulAssignment","src":"16348:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"16414:3:20","nodeType":"YulIdentifier","src":"16414:3:20"},{"kind":"number","nativeSrc":"16419:2:20","nodeType":"YulLiteral","src":"16419:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16355:58:20","nodeType":"YulIdentifier","src":"16355:58:20"},"nativeSrc":"16355:67:20","nodeType":"YulFunctionCall","src":"16355:67:20"},"variableNames":[{"name":"pos","nativeSrc":"16348:3:20","nodeType":"YulIdentifier","src":"16348:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16520:3:20","nodeType":"YulIdentifier","src":"16520:3:20"}],"functionName":{"name":"store_literal_in_memory_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128","nativeSrc":"16431:88:20","nodeType":"YulIdentifier","src":"16431:88:20"},"nativeSrc":"16431:93:20","nodeType":"YulFunctionCall","src":"16431:93:20"},"nativeSrc":"16431:93:20","nodeType":"YulExpressionStatement","src":"16431:93:20"},{"nativeSrc":"16533:19:20","nodeType":"YulAssignment","src":"16533:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"16544:3:20","nodeType":"YulIdentifier","src":"16544:3:20"},{"kind":"number","nativeSrc":"16549:2:20","nodeType":"YulLiteral","src":"16549:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16540:3:20","nodeType":"YulIdentifier","src":"16540:3:20"},"nativeSrc":"16540:12:20","nodeType":"YulFunctionCall","src":"16540:12:20"},"variableNames":[{"name":"end","nativeSrc":"16533:3:20","nodeType":"YulIdentifier","src":"16533:3:20"}]}]},"name":"abi_encode_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128_to_t_string_memory_ptr_fromStack","nativeSrc":"16192:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16326:3:20","nodeType":"YulTypedName","src":"16326:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16334:3:20","nodeType":"YulTypedName","src":"16334:3:20","type":""}],"src":"16192:366:20"},{"body":{"nativeSrc":"16735:248:20","nodeType":"YulBlock","src":"16735:248:20","statements":[{"nativeSrc":"16745:26:20","nodeType":"YulAssignment","src":"16745:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"16757:9:20","nodeType":"YulIdentifier","src":"16757:9:20"},{"kind":"number","nativeSrc":"16768:2:20","nodeType":"YulLiteral","src":"16768:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16753:3:20","nodeType":"YulIdentifier","src":"16753:3:20"},"nativeSrc":"16753:18:20","nodeType":"YulFunctionCall","src":"16753:18:20"},"variableNames":[{"name":"tail","nativeSrc":"16745:4:20","nodeType":"YulIdentifier","src":"16745:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16792:9:20","nodeType":"YulIdentifier","src":"16792:9:20"},{"kind":"number","nativeSrc":"16803:1:20","nodeType":"YulLiteral","src":"16803:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16788:3:20","nodeType":"YulIdentifier","src":"16788:3:20"},"nativeSrc":"16788:17:20","nodeType":"YulFunctionCall","src":"16788:17:20"},{"arguments":[{"name":"tail","nativeSrc":"16811:4:20","nodeType":"YulIdentifier","src":"16811:4:20"},{"name":"headStart","nativeSrc":"16817:9:20","nodeType":"YulIdentifier","src":"16817:9:20"}],"functionName":{"name":"sub","nativeSrc":"16807:3:20","nodeType":"YulIdentifier","src":"16807:3:20"},"nativeSrc":"16807:20:20","nodeType":"YulFunctionCall","src":"16807:20:20"}],"functionName":{"name":"mstore","nativeSrc":"16781:6:20","nodeType":"YulIdentifier","src":"16781:6:20"},"nativeSrc":"16781:47:20","nodeType":"YulFunctionCall","src":"16781:47:20"},"nativeSrc":"16781:47:20","nodeType":"YulExpressionStatement","src":"16781:47:20"},{"nativeSrc":"16837:139:20","nodeType":"YulAssignment","src":"16837:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"16971:4:20","nodeType":"YulIdentifier","src":"16971:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128_to_t_string_memory_ptr_fromStack","nativeSrc":"16845:124:20","nodeType":"YulIdentifier","src":"16845:124:20"},"nativeSrc":"16845:131:20","nodeType":"YulFunctionCall","src":"16845:131:20"},"variableNames":[{"name":"tail","nativeSrc":"16837:4:20","nodeType":"YulIdentifier","src":"16837:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"16564:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16715:9:20","nodeType":"YulTypedName","src":"16715:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16730:4:20","nodeType":"YulTypedName","src":"16730:4:20","type":""}],"src":"16564:419:20"},{"body":{"nativeSrc":"17095:76:20","nodeType":"YulBlock","src":"17095:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17117:6:20","nodeType":"YulIdentifier","src":"17117:6:20"},{"kind":"number","nativeSrc":"17125:1:20","nodeType":"YulLiteral","src":"17125:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17113:3:20","nodeType":"YulIdentifier","src":"17113:3:20"},"nativeSrc":"17113:14:20","nodeType":"YulFunctionCall","src":"17113:14:20"},{"hexValue":"53746172742074696d65206d75737420626520696e2074686520667574757265","kind":"string","nativeSrc":"17129:34:20","nodeType":"YulLiteral","src":"17129:34:20","type":"","value":"Start time must be in the future"}],"functionName":{"name":"mstore","nativeSrc":"17106:6:20","nodeType":"YulIdentifier","src":"17106:6:20"},"nativeSrc":"17106:58:20","nodeType":"YulFunctionCall","src":"17106:58:20"},"nativeSrc":"17106:58:20","nodeType":"YulExpressionStatement","src":"17106:58:20"}]},"name":"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","nativeSrc":"16989:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17087:6:20","nodeType":"YulTypedName","src":"17087:6:20","type":""}],"src":"16989:182:20"},{"body":{"nativeSrc":"17323:220:20","nodeType":"YulBlock","src":"17323:220:20","statements":[{"nativeSrc":"17333:74:20","nodeType":"YulAssignment","src":"17333:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"17399:3:20","nodeType":"YulIdentifier","src":"17399:3:20"},{"kind":"number","nativeSrc":"17404:2:20","nodeType":"YulLiteral","src":"17404:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17340:58:20","nodeType":"YulIdentifier","src":"17340:58:20"},"nativeSrc":"17340:67:20","nodeType":"YulFunctionCall","src":"17340:67:20"},"variableNames":[{"name":"pos","nativeSrc":"17333:3:20","nodeType":"YulIdentifier","src":"17333:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17505:3:20","nodeType":"YulIdentifier","src":"17505:3:20"}],"functionName":{"name":"store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466","nativeSrc":"17416:88:20","nodeType":"YulIdentifier","src":"17416:88:20"},"nativeSrc":"17416:93:20","nodeType":"YulFunctionCall","src":"17416:93:20"},"nativeSrc":"17416:93:20","nodeType":"YulExpressionStatement","src":"17416:93:20"},{"nativeSrc":"17518:19:20","nodeType":"YulAssignment","src":"17518:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"17529:3:20","nodeType":"YulIdentifier","src":"17529:3:20"},{"kind":"number","nativeSrc":"17534:2:20","nodeType":"YulLiteral","src":"17534:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17525:3:20","nodeType":"YulIdentifier","src":"17525:3:20"},"nativeSrc":"17525:12:20","nodeType":"YulFunctionCall","src":"17525:12:20"},"variableNames":[{"name":"end","nativeSrc":"17518:3:20","nodeType":"YulIdentifier","src":"17518:3:20"}]}]},"name":"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack","nativeSrc":"17177:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17311:3:20","nodeType":"YulTypedName","src":"17311:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17319:3:20","nodeType":"YulTypedName","src":"17319:3:20","type":""}],"src":"17177:366:20"},{"body":{"nativeSrc":"17720:248:20","nodeType":"YulBlock","src":"17720:248:20","statements":[{"nativeSrc":"17730:26:20","nodeType":"YulAssignment","src":"17730:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"17742:9:20","nodeType":"YulIdentifier","src":"17742:9:20"},{"kind":"number","nativeSrc":"17753:2:20","nodeType":"YulLiteral","src":"17753:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17738:3:20","nodeType":"YulIdentifier","src":"17738:3:20"},"nativeSrc":"17738:18:20","nodeType":"YulFunctionCall","src":"17738:18:20"},"variableNames":[{"name":"tail","nativeSrc":"17730:4:20","nodeType":"YulIdentifier","src":"17730:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17777:9:20","nodeType":"YulIdentifier","src":"17777:9:20"},{"kind":"number","nativeSrc":"17788:1:20","nodeType":"YulLiteral","src":"17788:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17773:3:20","nodeType":"YulIdentifier","src":"17773:3:20"},"nativeSrc":"17773:17:20","nodeType":"YulFunctionCall","src":"17773:17:20"},{"arguments":[{"name":"tail","nativeSrc":"17796:4:20","nodeType":"YulIdentifier","src":"17796:4:20"},{"name":"headStart","nativeSrc":"17802:9:20","nodeType":"YulIdentifier","src":"17802:9:20"}],"functionName":{"name":"sub","nativeSrc":"17792:3:20","nodeType":"YulIdentifier","src":"17792:3:20"},"nativeSrc":"17792:20:20","nodeType":"YulFunctionCall","src":"17792:20:20"}],"functionName":{"name":"mstore","nativeSrc":"17766:6:20","nodeType":"YulIdentifier","src":"17766:6:20"},"nativeSrc":"17766:47:20","nodeType":"YulFunctionCall","src":"17766:47:20"},"nativeSrc":"17766:47:20","nodeType":"YulExpressionStatement","src":"17766:47:20"},{"nativeSrc":"17822:139:20","nodeType":"YulAssignment","src":"17822:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"17956:4:20","nodeType":"YulIdentifier","src":"17956:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack","nativeSrc":"17830:124:20","nodeType":"YulIdentifier","src":"17830:124:20"},"nativeSrc":"17830:131:20","nodeType":"YulFunctionCall","src":"17830:131:20"},"variableNames":[{"name":"tail","nativeSrc":"17822:4:20","nodeType":"YulIdentifier","src":"17822:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17549:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17700:9:20","nodeType":"YulTypedName","src":"17700:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17715:4:20","nodeType":"YulTypedName","src":"17715:4:20","type":""}],"src":"17549:419:20"},{"body":{"nativeSrc":"18080:114:20","nodeType":"YulBlock","src":"18080:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18102:6:20","nodeType":"YulIdentifier","src":"18102:6:20"},{"kind":"number","nativeSrc":"18110:1:20","nodeType":"YulLiteral","src":"18110:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18098:3:20","nodeType":"YulIdentifier","src":"18098:3:20"},"nativeSrc":"18098:14:20","nodeType":"YulFunctionCall","src":"18098:14:20"},{"hexValue":"456e642074696d65206d7573742062652061667465722073746172742074696d","kind":"string","nativeSrc":"18114:34:20","nodeType":"YulLiteral","src":"18114:34:20","type":"","value":"End time must be after start tim"}],"functionName":{"name":"mstore","nativeSrc":"18091:6:20","nodeType":"YulIdentifier","src":"18091:6:20"},"nativeSrc":"18091:58:20","nodeType":"YulFunctionCall","src":"18091:58:20"},"nativeSrc":"18091:58:20","nodeType":"YulExpressionStatement","src":"18091:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18170:6:20","nodeType":"YulIdentifier","src":"18170:6:20"},{"kind":"number","nativeSrc":"18178:2:20","nodeType":"YulLiteral","src":"18178:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18166:3:20","nodeType":"YulIdentifier","src":"18166:3:20"},"nativeSrc":"18166:15:20","nodeType":"YulFunctionCall","src":"18166:15:20"},{"hexValue":"65","kind":"string","nativeSrc":"18183:3:20","nodeType":"YulLiteral","src":"18183:3:20","type":"","value":"e"}],"functionName":{"name":"mstore","nativeSrc":"18159:6:20","nodeType":"YulIdentifier","src":"18159:6:20"},"nativeSrc":"18159:28:20","nodeType":"YulFunctionCall","src":"18159:28:20"},"nativeSrc":"18159:28:20","nodeType":"YulExpressionStatement","src":"18159:28:20"}]},"name":"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","nativeSrc":"17974:220:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18072:6:20","nodeType":"YulTypedName","src":"18072:6:20","type":""}],"src":"17974:220:20"},{"body":{"nativeSrc":"18346:220:20","nodeType":"YulBlock","src":"18346:220:20","statements":[{"nativeSrc":"18356:74:20","nodeType":"YulAssignment","src":"18356:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"18422:3:20","nodeType":"YulIdentifier","src":"18422:3:20"},{"kind":"number","nativeSrc":"18427:2:20","nodeType":"YulLiteral","src":"18427:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18363:58:20","nodeType":"YulIdentifier","src":"18363:58:20"},"nativeSrc":"18363:67:20","nodeType":"YulFunctionCall","src":"18363:67:20"},"variableNames":[{"name":"pos","nativeSrc":"18356:3:20","nodeType":"YulIdentifier","src":"18356:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18528:3:20","nodeType":"YulIdentifier","src":"18528:3:20"}],"functionName":{"name":"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5","nativeSrc":"18439:88:20","nodeType":"YulIdentifier","src":"18439:88:20"},"nativeSrc":"18439:93:20","nodeType":"YulFunctionCall","src":"18439:93:20"},"nativeSrc":"18439:93:20","nodeType":"YulExpressionStatement","src":"18439:93:20"},{"nativeSrc":"18541:19:20","nodeType":"YulAssignment","src":"18541:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"18552:3:20","nodeType":"YulIdentifier","src":"18552:3:20"},{"kind":"number","nativeSrc":"18557:2:20","nodeType":"YulLiteral","src":"18557:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18548:3:20","nodeType":"YulIdentifier","src":"18548:3:20"},"nativeSrc":"18548:12:20","nodeType":"YulFunctionCall","src":"18548:12:20"},"variableNames":[{"name":"end","nativeSrc":"18541:3:20","nodeType":"YulIdentifier","src":"18541:3:20"}]}]},"name":"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack","nativeSrc":"18200:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18334:3:20","nodeType":"YulTypedName","src":"18334:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18342:3:20","nodeType":"YulTypedName","src":"18342:3:20","type":""}],"src":"18200:366:20"},{"body":{"nativeSrc":"18743:248:20","nodeType":"YulBlock","src":"18743:248:20","statements":[{"nativeSrc":"18753:26:20","nodeType":"YulAssignment","src":"18753:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"18765:9:20","nodeType":"YulIdentifier","src":"18765:9:20"},{"kind":"number","nativeSrc":"18776:2:20","nodeType":"YulLiteral","src":"18776:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18761:3:20","nodeType":"YulIdentifier","src":"18761:3:20"},"nativeSrc":"18761:18:20","nodeType":"YulFunctionCall","src":"18761:18:20"},"variableNames":[{"name":"tail","nativeSrc":"18753:4:20","nodeType":"YulIdentifier","src":"18753:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18800:9:20","nodeType":"YulIdentifier","src":"18800:9:20"},{"kind":"number","nativeSrc":"18811:1:20","nodeType":"YulLiteral","src":"18811:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18796:3:20","nodeType":"YulIdentifier","src":"18796:3:20"},"nativeSrc":"18796:17:20","nodeType":"YulFunctionCall","src":"18796:17:20"},{"arguments":[{"name":"tail","nativeSrc":"18819:4:20","nodeType":"YulIdentifier","src":"18819:4:20"},{"name":"headStart","nativeSrc":"18825:9:20","nodeType":"YulIdentifier","src":"18825:9:20"}],"functionName":{"name":"sub","nativeSrc":"18815:3:20","nodeType":"YulIdentifier","src":"18815:3:20"},"nativeSrc":"18815:20:20","nodeType":"YulFunctionCall","src":"18815:20:20"}],"functionName":{"name":"mstore","nativeSrc":"18789:6:20","nodeType":"YulIdentifier","src":"18789:6:20"},"nativeSrc":"18789:47:20","nodeType":"YulFunctionCall","src":"18789:47:20"},"nativeSrc":"18789:47:20","nodeType":"YulExpressionStatement","src":"18789:47:20"},{"nativeSrc":"18845:139:20","nodeType":"YulAssignment","src":"18845:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"18979:4:20","nodeType":"YulIdentifier","src":"18979:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack","nativeSrc":"18853:124:20","nodeType":"YulIdentifier","src":"18853:124:20"},"nativeSrc":"18853:131:20","nodeType":"YulFunctionCall","src":"18853:131:20"},"variableNames":[{"name":"tail","nativeSrc":"18845:4:20","nodeType":"YulIdentifier","src":"18845:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18572:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18723:9:20","nodeType":"YulTypedName","src":"18723:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18738:4:20","nodeType":"YulTypedName","src":"18738:4:20","type":""}],"src":"18572:419:20"},{"body":{"nativeSrc":"19062:53:20","nodeType":"YulBlock","src":"19062:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19079:3:20","nodeType":"YulIdentifier","src":"19079:3:20"},{"arguments":[{"name":"value","nativeSrc":"19102:5:20","nodeType":"YulIdentifier","src":"19102:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"19084:17:20","nodeType":"YulIdentifier","src":"19084:17:20"},"nativeSrc":"19084:24:20","nodeType":"YulFunctionCall","src":"19084:24:20"}],"functionName":{"name":"mstore","nativeSrc":"19072:6:20","nodeType":"YulIdentifier","src":"19072:6:20"},"nativeSrc":"19072:37:20","nodeType":"YulFunctionCall","src":"19072:37:20"},"nativeSrc":"19072:37:20","nodeType":"YulExpressionStatement","src":"19072:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18997:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19050:5:20","nodeType":"YulTypedName","src":"19050:5:20","type":""},{"name":"pos","nativeSrc":"19057:3:20","nodeType":"YulTypedName","src":"19057:3:20","type":""}],"src":"18997:118:20"},{"body":{"nativeSrc":"19219:124:20","nodeType":"YulBlock","src":"19219:124:20","statements":[{"nativeSrc":"19229:26:20","nodeType":"YulAssignment","src":"19229:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"19241:9:20","nodeType":"YulIdentifier","src":"19241:9:20"},{"kind":"number","nativeSrc":"19252:2:20","nodeType":"YulLiteral","src":"19252:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19237:3:20","nodeType":"YulIdentifier","src":"19237:3:20"},"nativeSrc":"19237:18:20","nodeType":"YulFunctionCall","src":"19237:18:20"},"variableNames":[{"name":"tail","nativeSrc":"19229:4:20","nodeType":"YulIdentifier","src":"19229:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19309:6:20","nodeType":"YulIdentifier","src":"19309:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"19322:9:20","nodeType":"YulIdentifier","src":"19322:9:20"},{"kind":"number","nativeSrc":"19333:1:20","nodeType":"YulLiteral","src":"19333:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19318:3:20","nodeType":"YulIdentifier","src":"19318:3:20"},"nativeSrc":"19318:17:20","nodeType":"YulFunctionCall","src":"19318:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19265:43:20","nodeType":"YulIdentifier","src":"19265:43:20"},"nativeSrc":"19265:71:20","nodeType":"YulFunctionCall","src":"19265:71:20"},"nativeSrc":"19265:71:20","nodeType":"YulExpressionStatement","src":"19265:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"19121:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19191:9:20","nodeType":"YulTypedName","src":"19191:9:20","type":""},{"name":"value0","nativeSrc":"19203:6:20","nodeType":"YulTypedName","src":"19203:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19214:4:20","nodeType":"YulTypedName","src":"19214:4:20","type":""}],"src":"19121:222:20"},{"body":{"nativeSrc":"19412:80:20","nodeType":"YulBlock","src":"19412:80:20","statements":[{"nativeSrc":"19422:22:20","nodeType":"YulAssignment","src":"19422:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"19437:6:20","nodeType":"YulIdentifier","src":"19437:6:20"}],"functionName":{"name":"mload","nativeSrc":"19431:5:20","nodeType":"YulIdentifier","src":"19431:5:20"},"nativeSrc":"19431:13:20","nodeType":"YulFunctionCall","src":"19431:13:20"},"variableNames":[{"name":"value","nativeSrc":"19422:5:20","nodeType":"YulIdentifier","src":"19422:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"19480:5:20","nodeType":"YulIdentifier","src":"19480:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"19453:26:20","nodeType":"YulIdentifier","src":"19453:26:20"},"nativeSrc":"19453:33:20","nodeType":"YulFunctionCall","src":"19453:33:20"},"nativeSrc":"19453:33:20","nodeType":"YulExpressionStatement","src":"19453:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"19349:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"19390:6:20","nodeType":"YulTypedName","src":"19390:6:20","type":""},{"name":"end","nativeSrc":"19398:3:20","nodeType":"YulTypedName","src":"19398:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"19406:5:20","nodeType":"YulTypedName","src":"19406:5:20","type":""}],"src":"19349:143:20"},{"body":{"nativeSrc":"19575:274:20","nodeType":"YulBlock","src":"19575:274:20","statements":[{"body":{"nativeSrc":"19621:83:20","nodeType":"YulBlock","src":"19621:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19623:77:20","nodeType":"YulIdentifier","src":"19623:77:20"},"nativeSrc":"19623:79:20","nodeType":"YulFunctionCall","src":"19623:79:20"},"nativeSrc":"19623:79:20","nodeType":"YulExpressionStatement","src":"19623:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19596:7:20","nodeType":"YulIdentifier","src":"19596:7:20"},{"name":"headStart","nativeSrc":"19605:9:20","nodeType":"YulIdentifier","src":"19605:9:20"}],"functionName":{"name":"sub","nativeSrc":"19592:3:20","nodeType":"YulIdentifier","src":"19592:3:20"},"nativeSrc":"19592:23:20","nodeType":"YulFunctionCall","src":"19592:23:20"},{"kind":"number","nativeSrc":"19617:2:20","nodeType":"YulLiteral","src":"19617:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"19588:3:20","nodeType":"YulIdentifier","src":"19588:3:20"},"nativeSrc":"19588:32:20","nodeType":"YulFunctionCall","src":"19588:32:20"},"nativeSrc":"19585:119:20","nodeType":"YulIf","src":"19585:119:20"},{"nativeSrc":"19714:128:20","nodeType":"YulBlock","src":"19714:128:20","statements":[{"nativeSrc":"19729:15:20","nodeType":"YulVariableDeclaration","src":"19729:15:20","value":{"kind":"number","nativeSrc":"19743:1:20","nodeType":"YulLiteral","src":"19743:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19733:6:20","nodeType":"YulTypedName","src":"19733:6:20","type":""}]},{"nativeSrc":"19758:74:20","nodeType":"YulAssignment","src":"19758:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19804:9:20","nodeType":"YulIdentifier","src":"19804:9:20"},{"name":"offset","nativeSrc":"19815:6:20","nodeType":"YulIdentifier","src":"19815:6:20"}],"functionName":{"name":"add","nativeSrc":"19800:3:20","nodeType":"YulIdentifier","src":"19800:3:20"},"nativeSrc":"19800:22:20","nodeType":"YulFunctionCall","src":"19800:22:20"},{"name":"dataEnd","nativeSrc":"19824:7:20","nodeType":"YulIdentifier","src":"19824:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"19768:31:20","nodeType":"YulIdentifier","src":"19768:31:20"},"nativeSrc":"19768:64:20","nodeType":"YulFunctionCall","src":"19768:64:20"},"variableNames":[{"name":"value0","nativeSrc":"19758:6:20","nodeType":"YulIdentifier","src":"19758:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"19498:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19545:9:20","nodeType":"YulTypedName","src":"19545:9:20","type":""},{"name":"dataEnd","nativeSrc":"19556:7:20","nodeType":"YulTypedName","src":"19556:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19568:6:20","nodeType":"YulTypedName","src":"19568:6:20","type":""}],"src":"19498:351:20"},{"body":{"nativeSrc":"19961:60:20","nodeType":"YulBlock","src":"19961:60:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19983:6:20","nodeType":"YulIdentifier","src":"19983:6:20"},{"kind":"number","nativeSrc":"19991:1:20","nodeType":"YulLiteral","src":"19991:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19979:3:20","nodeType":"YulIdentifier","src":"19979:3:20"},"nativeSrc":"19979:14:20","nodeType":"YulFunctionCall","src":"19979:14:20"},{"hexValue":"4e6f74206f776e6572206f66204e4654","kind":"string","nativeSrc":"19995:18:20","nodeType":"YulLiteral","src":"19995:18:20","type":"","value":"Not owner of NFT"}],"functionName":{"name":"mstore","nativeSrc":"19972:6:20","nodeType":"YulIdentifier","src":"19972:6:20"},"nativeSrc":"19972:42:20","nodeType":"YulFunctionCall","src":"19972:42:20"},"nativeSrc":"19972:42:20","nodeType":"YulExpressionStatement","src":"19972:42:20"}]},"name":"store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721","nativeSrc":"19855:166:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19953:6:20","nodeType":"YulTypedName","src":"19953:6:20","type":""}],"src":"19855:166:20"},{"body":{"nativeSrc":"20173:220:20","nodeType":"YulBlock","src":"20173:220:20","statements":[{"nativeSrc":"20183:74:20","nodeType":"YulAssignment","src":"20183:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"20249:3:20","nodeType":"YulIdentifier","src":"20249:3:20"},{"kind":"number","nativeSrc":"20254:2:20","nodeType":"YulLiteral","src":"20254:2:20","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20190:58:20","nodeType":"YulIdentifier","src":"20190:58:20"},"nativeSrc":"20190:67:20","nodeType":"YulFunctionCall","src":"20190:67:20"},"variableNames":[{"name":"pos","nativeSrc":"20183:3:20","nodeType":"YulIdentifier","src":"20183:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20355:3:20","nodeType":"YulIdentifier","src":"20355:3:20"}],"functionName":{"name":"store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721","nativeSrc":"20266:88:20","nodeType":"YulIdentifier","src":"20266:88:20"},"nativeSrc":"20266:93:20","nodeType":"YulFunctionCall","src":"20266:93:20"},"nativeSrc":"20266:93:20","nodeType":"YulExpressionStatement","src":"20266:93:20"},{"nativeSrc":"20368:19:20","nodeType":"YulAssignment","src":"20368:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"20379:3:20","nodeType":"YulIdentifier","src":"20379:3:20"},{"kind":"number","nativeSrc":"20384:2:20","nodeType":"YulLiteral","src":"20384:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20375:3:20","nodeType":"YulIdentifier","src":"20375:3:20"},"nativeSrc":"20375:12:20","nodeType":"YulFunctionCall","src":"20375:12:20"},"variableNames":[{"name":"end","nativeSrc":"20368:3:20","nodeType":"YulIdentifier","src":"20368:3:20"}]}]},"name":"abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack","nativeSrc":"20027:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20161:3:20","nodeType":"YulTypedName","src":"20161:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20169:3:20","nodeType":"YulTypedName","src":"20169:3:20","type":""}],"src":"20027:366:20"},{"body":{"nativeSrc":"20570:248:20","nodeType":"YulBlock","src":"20570:248:20","statements":[{"nativeSrc":"20580:26:20","nodeType":"YulAssignment","src":"20580:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"20592:9:20","nodeType":"YulIdentifier","src":"20592:9:20"},{"kind":"number","nativeSrc":"20603:2:20","nodeType":"YulLiteral","src":"20603:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20588:3:20","nodeType":"YulIdentifier","src":"20588:3:20"},"nativeSrc":"20588:18:20","nodeType":"YulFunctionCall","src":"20588:18:20"},"variableNames":[{"name":"tail","nativeSrc":"20580:4:20","nodeType":"YulIdentifier","src":"20580:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20627:9:20","nodeType":"YulIdentifier","src":"20627:9:20"},{"kind":"number","nativeSrc":"20638:1:20","nodeType":"YulLiteral","src":"20638:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20623:3:20","nodeType":"YulIdentifier","src":"20623:3:20"},"nativeSrc":"20623:17:20","nodeType":"YulFunctionCall","src":"20623:17:20"},{"arguments":[{"name":"tail","nativeSrc":"20646:4:20","nodeType":"YulIdentifier","src":"20646:4:20"},{"name":"headStart","nativeSrc":"20652:9:20","nodeType":"YulIdentifier","src":"20652:9:20"}],"functionName":{"name":"sub","nativeSrc":"20642:3:20","nodeType":"YulIdentifier","src":"20642:3:20"},"nativeSrc":"20642:20:20","nodeType":"YulFunctionCall","src":"20642:20:20"}],"functionName":{"name":"mstore","nativeSrc":"20616:6:20","nodeType":"YulIdentifier","src":"20616:6:20"},"nativeSrc":"20616:47:20","nodeType":"YulFunctionCall","src":"20616:47:20"},"nativeSrc":"20616:47:20","nodeType":"YulExpressionStatement","src":"20616:47:20"},{"nativeSrc":"20672:139:20","nodeType":"YulAssignment","src":"20672:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"20806:4:20","nodeType":"YulIdentifier","src":"20806:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack","nativeSrc":"20680:124:20","nodeType":"YulIdentifier","src":"20680:124:20"},"nativeSrc":"20680:131:20","nodeType":"YulFunctionCall","src":"20680:131:20"},"variableNames":[{"name":"tail","nativeSrc":"20672:4:20","nodeType":"YulIdentifier","src":"20672:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20399:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20550:9:20","nodeType":"YulTypedName","src":"20550:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20565:4:20","nodeType":"YulTypedName","src":"20565:4:20","type":""}],"src":"20399:419:20"},{"body":{"nativeSrc":"20950:206:20","nodeType":"YulBlock","src":"20950:206:20","statements":[{"nativeSrc":"20960:26:20","nodeType":"YulAssignment","src":"20960:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"20972:9:20","nodeType":"YulIdentifier","src":"20972:9:20"},{"kind":"number","nativeSrc":"20983:2:20","nodeType":"YulLiteral","src":"20983:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20968:3:20","nodeType":"YulIdentifier","src":"20968:3:20"},"nativeSrc":"20968:18:20","nodeType":"YulFunctionCall","src":"20968:18:20"},"variableNames":[{"name":"tail","nativeSrc":"20960:4:20","nodeType":"YulIdentifier","src":"20960:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21040:6:20","nodeType":"YulIdentifier","src":"21040:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21053:9:20","nodeType":"YulIdentifier","src":"21053:9:20"},{"kind":"number","nativeSrc":"21064:1:20","nodeType":"YulLiteral","src":"21064:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21049:3:20","nodeType":"YulIdentifier","src":"21049:3:20"},"nativeSrc":"21049:17:20","nodeType":"YulFunctionCall","src":"21049:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20996:43:20","nodeType":"YulIdentifier","src":"20996:43:20"},"nativeSrc":"20996:71:20","nodeType":"YulFunctionCall","src":"20996:71:20"},"nativeSrc":"20996:71:20","nodeType":"YulExpressionStatement","src":"20996:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21121:6:20","nodeType":"YulIdentifier","src":"21121:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21134:9:20","nodeType":"YulIdentifier","src":"21134:9:20"},{"kind":"number","nativeSrc":"21145:2:20","nodeType":"YulLiteral","src":"21145:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21130:3:20","nodeType":"YulIdentifier","src":"21130:3:20"},"nativeSrc":"21130:18:20","nodeType":"YulFunctionCall","src":"21130:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21077:43:20","nodeType":"YulIdentifier","src":"21077:43:20"},"nativeSrc":"21077:72:20","nodeType":"YulFunctionCall","src":"21077:72:20"},"nativeSrc":"21077:72:20","nodeType":"YulExpressionStatement","src":"21077:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"20824:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20914:9:20","nodeType":"YulTypedName","src":"20914:9:20","type":""},{"name":"value1","nativeSrc":"20926:6:20","nodeType":"YulTypedName","src":"20926:6:20","type":""},{"name":"value0","nativeSrc":"20934:6:20","nodeType":"YulTypedName","src":"20934:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20945:4:20","nodeType":"YulTypedName","src":"20945:4:20","type":""}],"src":"20824:332:20"},{"body":{"nativeSrc":"21400:537:20","nodeType":"YulBlock","src":"21400:537:20","statements":[{"nativeSrc":"21410:27:20","nodeType":"YulAssignment","src":"21410:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"21422:9:20","nodeType":"YulIdentifier","src":"21422:9:20"},{"kind":"number","nativeSrc":"21433:3:20","nodeType":"YulLiteral","src":"21433:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"21418:3:20","nodeType":"YulIdentifier","src":"21418:3:20"},"nativeSrc":"21418:19:20","nodeType":"YulFunctionCall","src":"21418:19:20"},"variableNames":[{"name":"tail","nativeSrc":"21410:4:20","nodeType":"YulIdentifier","src":"21410:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21491:6:20","nodeType":"YulIdentifier","src":"21491:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21504:9:20","nodeType":"YulIdentifier","src":"21504:9:20"},{"kind":"number","nativeSrc":"21515:1:20","nodeType":"YulLiteral","src":"21515:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21500:3:20","nodeType":"YulIdentifier","src":"21500:3:20"},"nativeSrc":"21500:17:20","nodeType":"YulFunctionCall","src":"21500:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21447:43:20","nodeType":"YulIdentifier","src":"21447:43:20"},"nativeSrc":"21447:71:20","nodeType":"YulFunctionCall","src":"21447:71:20"},"nativeSrc":"21447:71:20","nodeType":"YulExpressionStatement","src":"21447:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21572:6:20","nodeType":"YulIdentifier","src":"21572:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21585:9:20","nodeType":"YulIdentifier","src":"21585:9:20"},{"kind":"number","nativeSrc":"21596:2:20","nodeType":"YulLiteral","src":"21596:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21581:3:20","nodeType":"YulIdentifier","src":"21581:3:20"},"nativeSrc":"21581:18:20","nodeType":"YulFunctionCall","src":"21581:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21528:43:20","nodeType":"YulIdentifier","src":"21528:43:20"},"nativeSrc":"21528:72:20","nodeType":"YulFunctionCall","src":"21528:72:20"},"nativeSrc":"21528:72:20","nodeType":"YulExpressionStatement","src":"21528:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"21654:6:20","nodeType":"YulIdentifier","src":"21654:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21667:9:20","nodeType":"YulIdentifier","src":"21667:9:20"},{"kind":"number","nativeSrc":"21678:2:20","nodeType":"YulLiteral","src":"21678:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21663:3:20","nodeType":"YulIdentifier","src":"21663:3:20"},"nativeSrc":"21663:18:20","nodeType":"YulFunctionCall","src":"21663:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21610:43:20","nodeType":"YulIdentifier","src":"21610:43:20"},"nativeSrc":"21610:72:20","nodeType":"YulFunctionCall","src":"21610:72:20"},"nativeSrc":"21610:72:20","nodeType":"YulExpressionStatement","src":"21610:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"21736:6:20","nodeType":"YulIdentifier","src":"21736:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21749:9:20","nodeType":"YulIdentifier","src":"21749:9:20"},{"kind":"number","nativeSrc":"21760:2:20","nodeType":"YulLiteral","src":"21760:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"21745:3:20","nodeType":"YulIdentifier","src":"21745:3:20"},"nativeSrc":"21745:18:20","nodeType":"YulFunctionCall","src":"21745:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21692:43:20","nodeType":"YulIdentifier","src":"21692:43:20"},"nativeSrc":"21692:72:20","nodeType":"YulFunctionCall","src":"21692:72:20"},"nativeSrc":"21692:72:20","nodeType":"YulExpressionStatement","src":"21692:72:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"21818:6:20","nodeType":"YulIdentifier","src":"21818:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21831:9:20","nodeType":"YulIdentifier","src":"21831:9:20"},{"kind":"number","nativeSrc":"21842:3:20","nodeType":"YulLiteral","src":"21842:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"21827:3:20","nodeType":"YulIdentifier","src":"21827:3:20"},"nativeSrc":"21827:19:20","nodeType":"YulFunctionCall","src":"21827:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21774:43:20","nodeType":"YulIdentifier","src":"21774:43:20"},"nativeSrc":"21774:73:20","nodeType":"YulFunctionCall","src":"21774:73:20"},"nativeSrc":"21774:73:20","nodeType":"YulExpressionStatement","src":"21774:73:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"21901:6:20","nodeType":"YulIdentifier","src":"21901:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"21914:9:20","nodeType":"YulIdentifier","src":"21914:9:20"},{"kind":"number","nativeSrc":"21925:3:20","nodeType":"YulLiteral","src":"21925:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"21910:3:20","nodeType":"YulIdentifier","src":"21910:3:20"},"nativeSrc":"21910:19:20","nodeType":"YulFunctionCall","src":"21910:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21857:43:20","nodeType":"YulIdentifier","src":"21857:43:20"},"nativeSrc":"21857:73:20","nodeType":"YulFunctionCall","src":"21857:73:20"},"nativeSrc":"21857:73:20","nodeType":"YulExpressionStatement","src":"21857:73:20"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__fromStack_reversed","nativeSrc":"21162:775:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21332:9:20","nodeType":"YulTypedName","src":"21332:9:20","type":""},{"name":"value5","nativeSrc":"21344:6:20","nodeType":"YulTypedName","src":"21344:6:20","type":""},{"name":"value4","nativeSrc":"21352:6:20","nodeType":"YulTypedName","src":"21352:6:20","type":""},{"name":"value3","nativeSrc":"21360:6:20","nodeType":"YulTypedName","src":"21360:6:20","type":""},{"name":"value2","nativeSrc":"21368:6:20","nodeType":"YulTypedName","src":"21368:6:20","type":""},{"name":"value1","nativeSrc":"21376:6:20","nodeType":"YulTypedName","src":"21376:6:20","type":""},{"name":"value0","nativeSrc":"21384:6:20","nodeType":"YulTypedName","src":"21384:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21395:4:20","nodeType":"YulTypedName","src":"21395:4:20","type":""}],"src":"21162:775:20"},{"body":{"nativeSrc":"22097:288:20","nodeType":"YulBlock","src":"22097:288:20","statements":[{"nativeSrc":"22107:26:20","nodeType":"YulAssignment","src":"22107:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"22119:9:20","nodeType":"YulIdentifier","src":"22119:9:20"},{"kind":"number","nativeSrc":"22130:2:20","nodeType":"YulLiteral","src":"22130:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22115:3:20","nodeType":"YulIdentifier","src":"22115:3:20"},"nativeSrc":"22115:18:20","nodeType":"YulFunctionCall","src":"22115:18:20"},"variableNames":[{"name":"tail","nativeSrc":"22107:4:20","nodeType":"YulIdentifier","src":"22107:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22187:6:20","nodeType":"YulIdentifier","src":"22187:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22200:9:20","nodeType":"YulIdentifier","src":"22200:9:20"},{"kind":"number","nativeSrc":"22211:1:20","nodeType":"YulLiteral","src":"22211:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22196:3:20","nodeType":"YulIdentifier","src":"22196:3:20"},"nativeSrc":"22196:17:20","nodeType":"YulFunctionCall","src":"22196:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22143:43:20","nodeType":"YulIdentifier","src":"22143:43:20"},"nativeSrc":"22143:71:20","nodeType":"YulFunctionCall","src":"22143:71:20"},"nativeSrc":"22143:71:20","nodeType":"YulExpressionStatement","src":"22143:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22268:6:20","nodeType":"YulIdentifier","src":"22268:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22281:9:20","nodeType":"YulIdentifier","src":"22281:9:20"},{"kind":"number","nativeSrc":"22292:2:20","nodeType":"YulLiteral","src":"22292:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22277:3:20","nodeType":"YulIdentifier","src":"22277:3:20"},"nativeSrc":"22277:18:20","nodeType":"YulFunctionCall","src":"22277:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22224:43:20","nodeType":"YulIdentifier","src":"22224:43:20"},"nativeSrc":"22224:72:20","nodeType":"YulFunctionCall","src":"22224:72:20"},"nativeSrc":"22224:72:20","nodeType":"YulExpressionStatement","src":"22224:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22350:6:20","nodeType":"YulIdentifier","src":"22350:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22363:9:20","nodeType":"YulIdentifier","src":"22363:9:20"},{"kind":"number","nativeSrc":"22374:2:20","nodeType":"YulLiteral","src":"22374:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22359:3:20","nodeType":"YulIdentifier","src":"22359:3:20"},"nativeSrc":"22359:18:20","nodeType":"YulFunctionCall","src":"22359:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22306:43:20","nodeType":"YulIdentifier","src":"22306:43:20"},"nativeSrc":"22306:72:20","nodeType":"YulFunctionCall","src":"22306:72:20"},"nativeSrc":"22306:72:20","nodeType":"YulExpressionStatement","src":"22306:72:20"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"21943:442:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22053:9:20","nodeType":"YulTypedName","src":"22053:9:20","type":""},{"name":"value2","nativeSrc":"22065:6:20","nodeType":"YulTypedName","src":"22065:6:20","type":""},{"name":"value1","nativeSrc":"22073:6:20","nodeType":"YulTypedName","src":"22073:6:20","type":""},{"name":"value0","nativeSrc":"22081:6:20","nodeType":"YulTypedName","src":"22081:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22092:4:20","nodeType":"YulTypedName","src":"22092:4:20","type":""}],"src":"21943:442:20"},{"body":{"nativeSrc":"22497:119:20","nodeType":"YulBlock","src":"22497:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22519:6:20","nodeType":"YulIdentifier","src":"22519:6:20"},{"kind":"number","nativeSrc":"22527:1:20","nodeType":"YulLiteral","src":"22527:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22515:3:20","nodeType":"YulIdentifier","src":"22515:3:20"},"nativeSrc":"22515:14:20","nodeType":"YulFunctionCall","src":"22515:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nativeSrc":"22531:34:20","nodeType":"YulLiteral","src":"22531:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nativeSrc":"22508:6:20","nodeType":"YulIdentifier","src":"22508:6:20"},"nativeSrc":"22508:58:20","nodeType":"YulFunctionCall","src":"22508:58:20"},"nativeSrc":"22508:58:20","nodeType":"YulExpressionStatement","src":"22508:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"22587:6:20","nodeType":"YulIdentifier","src":"22587:6:20"},{"kind":"number","nativeSrc":"22595:2:20","nodeType":"YulLiteral","src":"22595:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22583:3:20","nodeType":"YulIdentifier","src":"22583:3:20"},"nativeSrc":"22583:15:20","nodeType":"YulFunctionCall","src":"22583:15:20"},{"hexValue":"646472657373","kind":"string","nativeSrc":"22600:8:20","nodeType":"YulLiteral","src":"22600:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nativeSrc":"22576:6:20","nodeType":"YulIdentifier","src":"22576:6:20"},"nativeSrc":"22576:33:20","nodeType":"YulFunctionCall","src":"22576:33:20"},"nativeSrc":"22576:33:20","nodeType":"YulExpressionStatement","src":"22576:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"22391:225:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"22489:6:20","nodeType":"YulTypedName","src":"22489:6:20","type":""}],"src":"22391:225:20"},{"body":{"nativeSrc":"22768:220:20","nodeType":"YulBlock","src":"22768:220:20","statements":[{"nativeSrc":"22778:74:20","nodeType":"YulAssignment","src":"22778:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"22844:3:20","nodeType":"YulIdentifier","src":"22844:3:20"},{"kind":"number","nativeSrc":"22849:2:20","nodeType":"YulLiteral","src":"22849:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"22785:58:20","nodeType":"YulIdentifier","src":"22785:58:20"},"nativeSrc":"22785:67:20","nodeType":"YulFunctionCall","src":"22785:67:20"},"variableNames":[{"name":"pos","nativeSrc":"22778:3:20","nodeType":"YulIdentifier","src":"22778:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"22950:3:20","nodeType":"YulIdentifier","src":"22950:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nativeSrc":"22861:88:20","nodeType":"YulIdentifier","src":"22861:88:20"},"nativeSrc":"22861:93:20","nodeType":"YulFunctionCall","src":"22861:93:20"},"nativeSrc":"22861:93:20","nodeType":"YulExpressionStatement","src":"22861:93:20"},{"nativeSrc":"22963:19:20","nodeType":"YulAssignment","src":"22963:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"22974:3:20","nodeType":"YulIdentifier","src":"22974:3:20"},{"kind":"number","nativeSrc":"22979:2:20","nodeType":"YulLiteral","src":"22979:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22970:3:20","nodeType":"YulIdentifier","src":"22970:3:20"},"nativeSrc":"22970:12:20","nodeType":"YulFunctionCall","src":"22970:12:20"},"variableNames":[{"name":"end","nativeSrc":"22963:3:20","nodeType":"YulIdentifier","src":"22963:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"22622:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"22756:3:20","nodeType":"YulTypedName","src":"22756:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"22764:3:20","nodeType":"YulTypedName","src":"22764:3:20","type":""}],"src":"22622:366:20"},{"body":{"nativeSrc":"23165:248:20","nodeType":"YulBlock","src":"23165:248:20","statements":[{"nativeSrc":"23175:26:20","nodeType":"YulAssignment","src":"23175:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"23187:9:20","nodeType":"YulIdentifier","src":"23187:9:20"},{"kind":"number","nativeSrc":"23198:2:20","nodeType":"YulLiteral","src":"23198:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23183:3:20","nodeType":"YulIdentifier","src":"23183:3:20"},"nativeSrc":"23183:18:20","nodeType":"YulFunctionCall","src":"23183:18:20"},"variableNames":[{"name":"tail","nativeSrc":"23175:4:20","nodeType":"YulIdentifier","src":"23175:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23222:9:20","nodeType":"YulIdentifier","src":"23222:9:20"},{"kind":"number","nativeSrc":"23233:1:20","nodeType":"YulLiteral","src":"23233:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23218:3:20","nodeType":"YulIdentifier","src":"23218:3:20"},"nativeSrc":"23218:17:20","nodeType":"YulFunctionCall","src":"23218:17:20"},{"arguments":[{"name":"tail","nativeSrc":"23241:4:20","nodeType":"YulIdentifier","src":"23241:4:20"},{"name":"headStart","nativeSrc":"23247:9:20","nodeType":"YulIdentifier","src":"23247:9:20"}],"functionName":{"name":"sub","nativeSrc":"23237:3:20","nodeType":"YulIdentifier","src":"23237:3:20"},"nativeSrc":"23237:20:20","nodeType":"YulFunctionCall","src":"23237:20:20"}],"functionName":{"name":"mstore","nativeSrc":"23211:6:20","nodeType":"YulIdentifier","src":"23211:6:20"},"nativeSrc":"23211:47:20","nodeType":"YulFunctionCall","src":"23211:47:20"},"nativeSrc":"23211:47:20","nodeType":"YulExpressionStatement","src":"23211:47:20"},{"nativeSrc":"23267:139:20","nodeType":"YulAssignment","src":"23267:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"23401:4:20","nodeType":"YulIdentifier","src":"23401:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nativeSrc":"23275:124:20","nodeType":"YulIdentifier","src":"23275:124:20"},"nativeSrc":"23275:131:20","nodeType":"YulFunctionCall","src":"23275:131:20"},"variableNames":[{"name":"tail","nativeSrc":"23267:4:20","nodeType":"YulIdentifier","src":"23267:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"22994:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23145:9:20","nodeType":"YulTypedName","src":"23145:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23160:4:20","nodeType":"YulTypedName","src":"23160:4:20","type":""}],"src":"22994:419:20"},{"body":{"nativeSrc":"23462:79:20","nodeType":"YulBlock","src":"23462:79:20","statements":[{"body":{"nativeSrc":"23519:16:20","nodeType":"YulBlock","src":"23519:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23528:1:20","nodeType":"YulLiteral","src":"23528:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"23531:1:20","nodeType":"YulLiteral","src":"23531:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"23521:6:20","nodeType":"YulIdentifier","src":"23521:6:20"},"nativeSrc":"23521:12:20","nodeType":"YulFunctionCall","src":"23521:12:20"},"nativeSrc":"23521:12:20","nodeType":"YulExpressionStatement","src":"23521:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23485:5:20","nodeType":"YulIdentifier","src":"23485:5:20"},{"arguments":[{"name":"value","nativeSrc":"23510:5:20","nodeType":"YulIdentifier","src":"23510:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"23492:17:20","nodeType":"YulIdentifier","src":"23492:17:20"},"nativeSrc":"23492:24:20","nodeType":"YulFunctionCall","src":"23492:24:20"}],"functionName":{"name":"eq","nativeSrc":"23482:2:20","nodeType":"YulIdentifier","src":"23482:2:20"},"nativeSrc":"23482:35:20","nodeType":"YulFunctionCall","src":"23482:35:20"}],"functionName":{"name":"iszero","nativeSrc":"23475:6:20","nodeType":"YulIdentifier","src":"23475:6:20"},"nativeSrc":"23475:43:20","nodeType":"YulFunctionCall","src":"23475:43:20"},"nativeSrc":"23472:63:20","nodeType":"YulIf","src":"23472:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"23419:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23455:5:20","nodeType":"YulTypedName","src":"23455:5:20","type":""}],"src":"23419:122:20"},{"body":{"nativeSrc":"23610:80:20","nodeType":"YulBlock","src":"23610:80:20","statements":[{"nativeSrc":"23620:22:20","nodeType":"YulAssignment","src":"23620:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"23635:6:20","nodeType":"YulIdentifier","src":"23635:6:20"}],"functionName":{"name":"mload","nativeSrc":"23629:5:20","nodeType":"YulIdentifier","src":"23629:5:20"},"nativeSrc":"23629:13:20","nodeType":"YulFunctionCall","src":"23629:13:20"},"variableNames":[{"name":"value","nativeSrc":"23620:5:20","nodeType":"YulIdentifier","src":"23620:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23678:5:20","nodeType":"YulIdentifier","src":"23678:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"23651:26:20","nodeType":"YulIdentifier","src":"23651:26:20"},"nativeSrc":"23651:33:20","nodeType":"YulFunctionCall","src":"23651:33:20"},"nativeSrc":"23651:33:20","nodeType":"YulExpressionStatement","src":"23651:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"23547:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23588:6:20","nodeType":"YulTypedName","src":"23588:6:20","type":""},{"name":"end","nativeSrc":"23596:3:20","nodeType":"YulTypedName","src":"23596:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"23604:5:20","nodeType":"YulTypedName","src":"23604:5:20","type":""}],"src":"23547:143:20"},{"body":{"nativeSrc":"23773:274:20","nodeType":"YulBlock","src":"23773:274:20","statements":[{"body":{"nativeSrc":"23819:83:20","nodeType":"YulBlock","src":"23819:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23821:77:20","nodeType":"YulIdentifier","src":"23821:77:20"},"nativeSrc":"23821:79:20","nodeType":"YulFunctionCall","src":"23821:79:20"},"nativeSrc":"23821:79:20","nodeType":"YulExpressionStatement","src":"23821:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23794:7:20","nodeType":"YulIdentifier","src":"23794:7:20"},{"name":"headStart","nativeSrc":"23803:9:20","nodeType":"YulIdentifier","src":"23803:9:20"}],"functionName":{"name":"sub","nativeSrc":"23790:3:20","nodeType":"YulIdentifier","src":"23790:3:20"},"nativeSrc":"23790:23:20","nodeType":"YulFunctionCall","src":"23790:23:20"},{"kind":"number","nativeSrc":"23815:2:20","nodeType":"YulLiteral","src":"23815:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"23786:3:20","nodeType":"YulIdentifier","src":"23786:3:20"},"nativeSrc":"23786:32:20","nodeType":"YulFunctionCall","src":"23786:32:20"},"nativeSrc":"23783:119:20","nodeType":"YulIf","src":"23783:119:20"},{"nativeSrc":"23912:128:20","nodeType":"YulBlock","src":"23912:128:20","statements":[{"nativeSrc":"23927:15:20","nodeType":"YulVariableDeclaration","src":"23927:15:20","value":{"kind":"number","nativeSrc":"23941:1:20","nodeType":"YulLiteral","src":"23941:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23931:6:20","nodeType":"YulTypedName","src":"23931:6:20","type":""}]},{"nativeSrc":"23956:74:20","nodeType":"YulAssignment","src":"23956:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24002:9:20","nodeType":"YulIdentifier","src":"24002:9:20"},{"name":"offset","nativeSrc":"24013:6:20","nodeType":"YulIdentifier","src":"24013:6:20"}],"functionName":{"name":"add","nativeSrc":"23998:3:20","nodeType":"YulIdentifier","src":"23998:3:20"},"nativeSrc":"23998:22:20","nodeType":"YulFunctionCall","src":"23998:22:20"},{"name":"dataEnd","nativeSrc":"24022:7:20","nodeType":"YulIdentifier","src":"24022:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"23966:31:20","nodeType":"YulIdentifier","src":"23966:31:20"},"nativeSrc":"23966:64:20","nodeType":"YulFunctionCall","src":"23966:64:20"},"variableNames":[{"name":"value0","nativeSrc":"23956:6:20","nodeType":"YulIdentifier","src":"23956:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"23696:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23743:9:20","nodeType":"YulTypedName","src":"23743:9:20","type":""},{"name":"dataEnd","nativeSrc":"23754:7:20","nodeType":"YulTypedName","src":"23754:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23766:6:20","nodeType":"YulTypedName","src":"23766:6:20","type":""}],"src":"23696:351:20"},{"body":{"nativeSrc":"24159:127:20","nodeType":"YulBlock","src":"24159:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24181:6:20","nodeType":"YulIdentifier","src":"24181:6:20"},{"kind":"number","nativeSrc":"24189:1:20","nodeType":"YulLiteral","src":"24189:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24177:3:20","nodeType":"YulIdentifier","src":"24177:3:20"},"nativeSrc":"24177:14:20","nodeType":"YulFunctionCall","src":"24177:14:20"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nativeSrc":"24193:34:20","nodeType":"YulLiteral","src":"24193:34:20","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nativeSrc":"24170:6:20","nodeType":"YulIdentifier","src":"24170:6:20"},"nativeSrc":"24170:58:20","nodeType":"YulFunctionCall","src":"24170:58:20"},"nativeSrc":"24170:58:20","nodeType":"YulExpressionStatement","src":"24170:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24249:6:20","nodeType":"YulIdentifier","src":"24249:6:20"},{"kind":"number","nativeSrc":"24257:2:20","nodeType":"YulLiteral","src":"24257:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24245:3:20","nodeType":"YulIdentifier","src":"24245:3:20"},"nativeSrc":"24245:15:20","nodeType":"YulFunctionCall","src":"24245:15:20"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nativeSrc":"24262:16:20","nodeType":"YulLiteral","src":"24262:16:20","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nativeSrc":"24238:6:20","nodeType":"YulIdentifier","src":"24238:6:20"},"nativeSrc":"24238:41:20","nodeType":"YulFunctionCall","src":"24238:41:20"},"nativeSrc":"24238:41:20","nodeType":"YulExpressionStatement","src":"24238:41:20"}]},"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nativeSrc":"24053:233:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24151:6:20","nodeType":"YulTypedName","src":"24151:6:20","type":""}],"src":"24053:233:20"},{"body":{"nativeSrc":"24438:220:20","nodeType":"YulBlock","src":"24438:220:20","statements":[{"nativeSrc":"24448:74:20","nodeType":"YulAssignment","src":"24448:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"24514:3:20","nodeType":"YulIdentifier","src":"24514:3:20"},{"kind":"number","nativeSrc":"24519:2:20","nodeType":"YulLiteral","src":"24519:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24455:58:20","nodeType":"YulIdentifier","src":"24455:58:20"},"nativeSrc":"24455:67:20","nodeType":"YulFunctionCall","src":"24455:67:20"},"variableNames":[{"name":"pos","nativeSrc":"24448:3:20","nodeType":"YulIdentifier","src":"24448:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24620:3:20","nodeType":"YulIdentifier","src":"24620:3:20"}],"functionName":{"name":"store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","nativeSrc":"24531:88:20","nodeType":"YulIdentifier","src":"24531:88:20"},"nativeSrc":"24531:93:20","nodeType":"YulFunctionCall","src":"24531:93:20"},"nativeSrc":"24531:93:20","nodeType":"YulExpressionStatement","src":"24531:93:20"},{"nativeSrc":"24633:19:20","nodeType":"YulAssignment","src":"24633:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"24644:3:20","nodeType":"YulIdentifier","src":"24644:3:20"},{"kind":"number","nativeSrc":"24649:2:20","nodeType":"YulLiteral","src":"24649:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24640:3:20","nodeType":"YulIdentifier","src":"24640:3:20"},"nativeSrc":"24640:12:20","nodeType":"YulFunctionCall","src":"24640:12:20"},"variableNames":[{"name":"end","nativeSrc":"24633:3:20","nodeType":"YulIdentifier","src":"24633:3:20"}]}]},"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nativeSrc":"24292:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24426:3:20","nodeType":"YulTypedName","src":"24426:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24434:3:20","nodeType":"YulTypedName","src":"24434:3:20","type":""}],"src":"24292:366:20"},{"body":{"nativeSrc":"24835:248:20","nodeType":"YulBlock","src":"24835:248:20","statements":[{"nativeSrc":"24845:26:20","nodeType":"YulAssignment","src":"24845:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"24857:9:20","nodeType":"YulIdentifier","src":"24857:9:20"},{"kind":"number","nativeSrc":"24868:2:20","nodeType":"YulLiteral","src":"24868:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24853:3:20","nodeType":"YulIdentifier","src":"24853:3:20"},"nativeSrc":"24853:18:20","nodeType":"YulFunctionCall","src":"24853:18:20"},"variableNames":[{"name":"tail","nativeSrc":"24845:4:20","nodeType":"YulIdentifier","src":"24845:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24892:9:20","nodeType":"YulIdentifier","src":"24892:9:20"},{"kind":"number","nativeSrc":"24903:1:20","nodeType":"YulLiteral","src":"24903:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24888:3:20","nodeType":"YulIdentifier","src":"24888:3:20"},"nativeSrc":"24888:17:20","nodeType":"YulFunctionCall","src":"24888:17:20"},{"arguments":[{"name":"tail","nativeSrc":"24911:4:20","nodeType":"YulIdentifier","src":"24911:4:20"},{"name":"headStart","nativeSrc":"24917:9:20","nodeType":"YulIdentifier","src":"24917:9:20"}],"functionName":{"name":"sub","nativeSrc":"24907:3:20","nodeType":"YulIdentifier","src":"24907:3:20"},"nativeSrc":"24907:20:20","nodeType":"YulFunctionCall","src":"24907:20:20"}],"functionName":{"name":"mstore","nativeSrc":"24881:6:20","nodeType":"YulIdentifier","src":"24881:6:20"},"nativeSrc":"24881:47:20","nodeType":"YulFunctionCall","src":"24881:47:20"},"nativeSrc":"24881:47:20","nodeType":"YulExpressionStatement","src":"24881:47:20"},{"nativeSrc":"24937:139:20","nodeType":"YulAssignment","src":"24937:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"25071:4:20","nodeType":"YulIdentifier","src":"25071:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack","nativeSrc":"24945:124:20","nodeType":"YulIdentifier","src":"24945:124:20"},"nativeSrc":"24945:131:20","nodeType":"YulFunctionCall","src":"24945:131:20"},"variableNames":[{"name":"tail","nativeSrc":"24937:4:20","nodeType":"YulIdentifier","src":"24937:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24664:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24815:9:20","nodeType":"YulTypedName","src":"24815:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24830:4:20","nodeType":"YulTypedName","src":"24830:4:20","type":""}],"src":"24664:419:20"},{"body":{"nativeSrc":"25195:122:20","nodeType":"YulBlock","src":"25195:122:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25217:6:20","nodeType":"YulIdentifier","src":"25217:6:20"},{"kind":"number","nativeSrc":"25225:1:20","nodeType":"YulLiteral","src":"25225:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25213:3:20","nodeType":"YulIdentifier","src":"25213:3:20"},"nativeSrc":"25213:14:20","nodeType":"YulFunctionCall","src":"25213:14:20"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nativeSrc":"25229:34:20","nodeType":"YulLiteral","src":"25229:34:20","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nativeSrc":"25206:6:20","nodeType":"YulIdentifier","src":"25206:6:20"},"nativeSrc":"25206:58:20","nodeType":"YulFunctionCall","src":"25206:58:20"},"nativeSrc":"25206:58:20","nodeType":"YulExpressionStatement","src":"25206:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25285:6:20","nodeType":"YulIdentifier","src":"25285:6:20"},{"kind":"number","nativeSrc":"25293:2:20","nodeType":"YulLiteral","src":"25293:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25281:3:20","nodeType":"YulIdentifier","src":"25281:3:20"},"nativeSrc":"25281:15:20","nodeType":"YulFunctionCall","src":"25281:15:20"},{"hexValue":"6961626c6555554944","kind":"string","nativeSrc":"25298:11:20","nodeType":"YulLiteral","src":"25298:11:20","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nativeSrc":"25274:6:20","nodeType":"YulIdentifier","src":"25274:6:20"},"nativeSrc":"25274:36:20","nodeType":"YulFunctionCall","src":"25274:36:20"},"nativeSrc":"25274:36:20","nodeType":"YulExpressionStatement","src":"25274:36:20"}]},"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nativeSrc":"25089:228:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25187:6:20","nodeType":"YulTypedName","src":"25187:6:20","type":""}],"src":"25089:228:20"},{"body":{"nativeSrc":"25469:220:20","nodeType":"YulBlock","src":"25469:220:20","statements":[{"nativeSrc":"25479:74:20","nodeType":"YulAssignment","src":"25479:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"25545:3:20","nodeType":"YulIdentifier","src":"25545:3:20"},{"kind":"number","nativeSrc":"25550:2:20","nodeType":"YulLiteral","src":"25550:2:20","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25486:58:20","nodeType":"YulIdentifier","src":"25486:58:20"},"nativeSrc":"25486:67:20","nodeType":"YulFunctionCall","src":"25486:67:20"},"variableNames":[{"name":"pos","nativeSrc":"25479:3:20","nodeType":"YulIdentifier","src":"25479:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25651:3:20","nodeType":"YulIdentifier","src":"25651:3:20"}],"functionName":{"name":"store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","nativeSrc":"25562:88:20","nodeType":"YulIdentifier","src":"25562:88:20"},"nativeSrc":"25562:93:20","nodeType":"YulFunctionCall","src":"25562:93:20"},"nativeSrc":"25562:93:20","nodeType":"YulExpressionStatement","src":"25562:93:20"},{"nativeSrc":"25664:19:20","nodeType":"YulAssignment","src":"25664:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"25675:3:20","nodeType":"YulIdentifier","src":"25675:3:20"},{"kind":"number","nativeSrc":"25680:2:20","nodeType":"YulLiteral","src":"25680:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25671:3:20","nodeType":"YulIdentifier","src":"25671:3:20"},"nativeSrc":"25671:12:20","nodeType":"YulFunctionCall","src":"25671:12:20"},"variableNames":[{"name":"end","nativeSrc":"25664:3:20","nodeType":"YulIdentifier","src":"25664:3:20"}]}]},"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nativeSrc":"25323:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25457:3:20","nodeType":"YulTypedName","src":"25457:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25465:3:20","nodeType":"YulTypedName","src":"25465:3:20","type":""}],"src":"25323:366:20"},{"body":{"nativeSrc":"25866:248:20","nodeType":"YulBlock","src":"25866:248:20","statements":[{"nativeSrc":"25876:26:20","nodeType":"YulAssignment","src":"25876:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"25888:9:20","nodeType":"YulIdentifier","src":"25888:9:20"},{"kind":"number","nativeSrc":"25899:2:20","nodeType":"YulLiteral","src":"25899:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25884:3:20","nodeType":"YulIdentifier","src":"25884:3:20"},"nativeSrc":"25884:18:20","nodeType":"YulFunctionCall","src":"25884:18:20"},"variableNames":[{"name":"tail","nativeSrc":"25876:4:20","nodeType":"YulIdentifier","src":"25876:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25923:9:20","nodeType":"YulIdentifier","src":"25923:9:20"},{"kind":"number","nativeSrc":"25934:1:20","nodeType":"YulLiteral","src":"25934:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25919:3:20","nodeType":"YulIdentifier","src":"25919:3:20"},"nativeSrc":"25919:17:20","nodeType":"YulFunctionCall","src":"25919:17:20"},{"arguments":[{"name":"tail","nativeSrc":"25942:4:20","nodeType":"YulIdentifier","src":"25942:4:20"},{"name":"headStart","nativeSrc":"25948:9:20","nodeType":"YulIdentifier","src":"25948:9:20"}],"functionName":{"name":"sub","nativeSrc":"25938:3:20","nodeType":"YulIdentifier","src":"25938:3:20"},"nativeSrc":"25938:20:20","nodeType":"YulFunctionCall","src":"25938:20:20"}],"functionName":{"name":"mstore","nativeSrc":"25912:6:20","nodeType":"YulIdentifier","src":"25912:6:20"},"nativeSrc":"25912:47:20","nodeType":"YulFunctionCall","src":"25912:47:20"},"nativeSrc":"25912:47:20","nodeType":"YulExpressionStatement","src":"25912:47:20"},{"nativeSrc":"25968:139:20","nodeType":"YulAssignment","src":"25968:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"26102:4:20","nodeType":"YulIdentifier","src":"26102:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack","nativeSrc":"25976:124:20","nodeType":"YulIdentifier","src":"25976:124:20"},"nativeSrc":"25976:131:20","nodeType":"YulFunctionCall","src":"25976:131:20"},"variableNames":[{"name":"tail","nativeSrc":"25968:4:20","nodeType":"YulIdentifier","src":"25968:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25695:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25846:9:20","nodeType":"YulTypedName","src":"25846:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25861:4:20","nodeType":"YulTypedName","src":"25861:4:20","type":""}],"src":"25695:419:20"},{"body":{"nativeSrc":"26226:124:20","nodeType":"YulBlock","src":"26226:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26248:6:20","nodeType":"YulIdentifier","src":"26248:6:20"},{"kind":"number","nativeSrc":"26256:1:20","nodeType":"YulLiteral","src":"26256:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26244:3:20","nodeType":"YulIdentifier","src":"26244:3:20"},"nativeSrc":"26244:14:20","nodeType":"YulFunctionCall","src":"26244:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nativeSrc":"26260:34:20","nodeType":"YulLiteral","src":"26260:34:20","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nativeSrc":"26237:6:20","nodeType":"YulIdentifier","src":"26237:6:20"},"nativeSrc":"26237:58:20","nodeType":"YulFunctionCall","src":"26237:58:20"},"nativeSrc":"26237:58:20","nodeType":"YulExpressionStatement","src":"26237:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26316:6:20","nodeType":"YulIdentifier","src":"26316:6:20"},{"kind":"number","nativeSrc":"26324:2:20","nodeType":"YulLiteral","src":"26324:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26312:3:20","nodeType":"YulIdentifier","src":"26312:3:20"},"nativeSrc":"26312:15:20","nodeType":"YulFunctionCall","src":"26312:15:20"},{"hexValue":"6e697469616c697a696e67","kind":"string","nativeSrc":"26329:13:20","nodeType":"YulLiteral","src":"26329:13:20","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nativeSrc":"26305:6:20","nodeType":"YulIdentifier","src":"26305:6:20"},"nativeSrc":"26305:38:20","nodeType":"YulFunctionCall","src":"26305:38:20"},"nativeSrc":"26305:38:20","nodeType":"YulExpressionStatement","src":"26305:38:20"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nativeSrc":"26120:230:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26218:6:20","nodeType":"YulTypedName","src":"26218:6:20","type":""}],"src":"26120:230:20"},{"body":{"nativeSrc":"26502:220:20","nodeType":"YulBlock","src":"26502:220:20","statements":[{"nativeSrc":"26512:74:20","nodeType":"YulAssignment","src":"26512:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"26578:3:20","nodeType":"YulIdentifier","src":"26578:3:20"},{"kind":"number","nativeSrc":"26583:2:20","nodeType":"YulLiteral","src":"26583:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26519:58:20","nodeType":"YulIdentifier","src":"26519:58:20"},"nativeSrc":"26519:67:20","nodeType":"YulFunctionCall","src":"26519:67:20"},"variableNames":[{"name":"pos","nativeSrc":"26512:3:20","nodeType":"YulIdentifier","src":"26512:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26684:3:20","nodeType":"YulIdentifier","src":"26684:3:20"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nativeSrc":"26595:88:20","nodeType":"YulIdentifier","src":"26595:88:20"},"nativeSrc":"26595:93:20","nodeType":"YulFunctionCall","src":"26595:93:20"},"nativeSrc":"26595:93:20","nodeType":"YulExpressionStatement","src":"26595:93:20"},{"nativeSrc":"26697:19:20","nodeType":"YulAssignment","src":"26697:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"26708:3:20","nodeType":"YulIdentifier","src":"26708:3:20"},{"kind":"number","nativeSrc":"26713:2:20","nodeType":"YulLiteral","src":"26713:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26704:3:20","nodeType":"YulIdentifier","src":"26704:3:20"},"nativeSrc":"26704:12:20","nodeType":"YulFunctionCall","src":"26704:12:20"},"variableNames":[{"name":"end","nativeSrc":"26697:3:20","nodeType":"YulIdentifier","src":"26697:3:20"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nativeSrc":"26356:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26490:3:20","nodeType":"YulTypedName","src":"26490:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26498:3:20","nodeType":"YulTypedName","src":"26498:3:20","type":""}],"src":"26356:366:20"},{"body":{"nativeSrc":"26899:248:20","nodeType":"YulBlock","src":"26899:248:20","statements":[{"nativeSrc":"26909:26:20","nodeType":"YulAssignment","src":"26909:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"26921:9:20","nodeType":"YulIdentifier","src":"26921:9:20"},{"kind":"number","nativeSrc":"26932:2:20","nodeType":"YulLiteral","src":"26932:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26917:3:20","nodeType":"YulIdentifier","src":"26917:3:20"},"nativeSrc":"26917:18:20","nodeType":"YulFunctionCall","src":"26917:18:20"},"variableNames":[{"name":"tail","nativeSrc":"26909:4:20","nodeType":"YulIdentifier","src":"26909:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26956:9:20","nodeType":"YulIdentifier","src":"26956:9:20"},{"kind":"number","nativeSrc":"26967:1:20","nodeType":"YulLiteral","src":"26967:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26952:3:20","nodeType":"YulIdentifier","src":"26952:3:20"},"nativeSrc":"26952:17:20","nodeType":"YulFunctionCall","src":"26952:17:20"},{"arguments":[{"name":"tail","nativeSrc":"26975:4:20","nodeType":"YulIdentifier","src":"26975:4:20"},{"name":"headStart","nativeSrc":"26981:9:20","nodeType":"YulIdentifier","src":"26981:9:20"}],"functionName":{"name":"sub","nativeSrc":"26971:3:20","nodeType":"YulIdentifier","src":"26971:3:20"},"nativeSrc":"26971:20:20","nodeType":"YulFunctionCall","src":"26971:20:20"}],"functionName":{"name":"mstore","nativeSrc":"26945:6:20","nodeType":"YulIdentifier","src":"26945:6:20"},"nativeSrc":"26945:47:20","nodeType":"YulFunctionCall","src":"26945:47:20"},"nativeSrc":"26945:47:20","nodeType":"YulExpressionStatement","src":"26945:47:20"},{"nativeSrc":"27001:139:20","nodeType":"YulAssignment","src":"27001:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"27135:4:20","nodeType":"YulIdentifier","src":"27135:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nativeSrc":"27009:124:20","nodeType":"YulIdentifier","src":"27009:124:20"},"nativeSrc":"27009:131:20","nodeType":"YulFunctionCall","src":"27009:131:20"},"variableNames":[{"name":"tail","nativeSrc":"27001:4:20","nodeType":"YulIdentifier","src":"27001:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26728:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26879:9:20","nodeType":"YulTypedName","src":"26879:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26894:4:20","nodeType":"YulTypedName","src":"26894:4:20","type":""}],"src":"26728:419:20"},{"body":{"nativeSrc":"27259:76:20","nodeType":"YulBlock","src":"27259:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27281:6:20","nodeType":"YulIdentifier","src":"27281:6:20"},{"kind":"number","nativeSrc":"27289:1:20","nodeType":"YulLiteral","src":"27289:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27277:3:20","nodeType":"YulIdentifier","src":"27277:3:20"},"nativeSrc":"27277:14:20","nodeType":"YulFunctionCall","src":"27277:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nativeSrc":"27293:34:20","nodeType":"YulLiteral","src":"27293:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nativeSrc":"27270:6:20","nodeType":"YulIdentifier","src":"27270:6:20"},"nativeSrc":"27270:58:20","nodeType":"YulFunctionCall","src":"27270:58:20"},"nativeSrc":"27270:58:20","nodeType":"YulExpressionStatement","src":"27270:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"27153:182:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27251:6:20","nodeType":"YulTypedName","src":"27251:6:20","type":""}],"src":"27153:182:20"},{"body":{"nativeSrc":"27487:220:20","nodeType":"YulBlock","src":"27487:220:20","statements":[{"nativeSrc":"27497:74:20","nodeType":"YulAssignment","src":"27497:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"27563:3:20","nodeType":"YulIdentifier","src":"27563:3:20"},{"kind":"number","nativeSrc":"27568:2:20","nodeType":"YulLiteral","src":"27568:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27504:58:20","nodeType":"YulIdentifier","src":"27504:58:20"},"nativeSrc":"27504:67:20","nodeType":"YulFunctionCall","src":"27504:67:20"},"variableNames":[{"name":"pos","nativeSrc":"27497:3:20","nodeType":"YulIdentifier","src":"27497:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27669:3:20","nodeType":"YulIdentifier","src":"27669:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nativeSrc":"27580:88:20","nodeType":"YulIdentifier","src":"27580:88:20"},"nativeSrc":"27580:93:20","nodeType":"YulFunctionCall","src":"27580:93:20"},"nativeSrc":"27580:93:20","nodeType":"YulExpressionStatement","src":"27580:93:20"},{"nativeSrc":"27682:19:20","nodeType":"YulAssignment","src":"27682:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"27693:3:20","nodeType":"YulIdentifier","src":"27693:3:20"},{"kind":"number","nativeSrc":"27698:2:20","nodeType":"YulLiteral","src":"27698:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27689:3:20","nodeType":"YulIdentifier","src":"27689:3:20"},"nativeSrc":"27689:12:20","nodeType":"YulFunctionCall","src":"27689:12:20"},"variableNames":[{"name":"end","nativeSrc":"27682:3:20","nodeType":"YulIdentifier","src":"27682:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"27341:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27475:3:20","nodeType":"YulTypedName","src":"27475:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27483:3:20","nodeType":"YulTypedName","src":"27483:3:20","type":""}],"src":"27341:366:20"},{"body":{"nativeSrc":"27884:248:20","nodeType":"YulBlock","src":"27884:248:20","statements":[{"nativeSrc":"27894:26:20","nodeType":"YulAssignment","src":"27894:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"27906:9:20","nodeType":"YulIdentifier","src":"27906:9:20"},{"kind":"number","nativeSrc":"27917:2:20","nodeType":"YulLiteral","src":"27917:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27902:3:20","nodeType":"YulIdentifier","src":"27902:3:20"},"nativeSrc":"27902:18:20","nodeType":"YulFunctionCall","src":"27902:18:20"},"variableNames":[{"name":"tail","nativeSrc":"27894:4:20","nodeType":"YulIdentifier","src":"27894:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27941:9:20","nodeType":"YulIdentifier","src":"27941:9:20"},{"kind":"number","nativeSrc":"27952:1:20","nodeType":"YulLiteral","src":"27952:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27937:3:20","nodeType":"YulIdentifier","src":"27937:3:20"},"nativeSrc":"27937:17:20","nodeType":"YulFunctionCall","src":"27937:17:20"},{"arguments":[{"name":"tail","nativeSrc":"27960:4:20","nodeType":"YulIdentifier","src":"27960:4:20"},{"name":"headStart","nativeSrc":"27966:9:20","nodeType":"YulIdentifier","src":"27966:9:20"}],"functionName":{"name":"sub","nativeSrc":"27956:3:20","nodeType":"YulIdentifier","src":"27956:3:20"},"nativeSrc":"27956:20:20","nodeType":"YulFunctionCall","src":"27956:20:20"}],"functionName":{"name":"mstore","nativeSrc":"27930:6:20","nodeType":"YulIdentifier","src":"27930:6:20"},"nativeSrc":"27930:47:20","nodeType":"YulFunctionCall","src":"27930:47:20"},"nativeSrc":"27930:47:20","nodeType":"YulExpressionStatement","src":"27930:47:20"},{"nativeSrc":"27986:139:20","nodeType":"YulAssignment","src":"27986:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"28120:4:20","nodeType":"YulIdentifier","src":"28120:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nativeSrc":"27994:124:20","nodeType":"YulIdentifier","src":"27994:124:20"},"nativeSrc":"27994:131:20","nodeType":"YulFunctionCall","src":"27994:131:20"},"variableNames":[{"name":"tail","nativeSrc":"27986:4:20","nodeType":"YulIdentifier","src":"27986:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27713:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27864:9:20","nodeType":"YulTypedName","src":"27864:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27879:4:20","nodeType":"YulTypedName","src":"27879:4:20","type":""}],"src":"27713:419:20"},{"body":{"nativeSrc":"28244:126:20","nodeType":"YulBlock","src":"28244:126:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28266:6:20","nodeType":"YulIdentifier","src":"28266:6:20"},{"kind":"number","nativeSrc":"28274:1:20","nodeType":"YulLiteral","src":"28274:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28262:3:20","nodeType":"YulIdentifier","src":"28262:3:20"},"nativeSrc":"28262:14:20","nodeType":"YulFunctionCall","src":"28262:14:20"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nativeSrc":"28278:34:20","nodeType":"YulLiteral","src":"28278:34:20","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nativeSrc":"28255:6:20","nodeType":"YulIdentifier","src":"28255:6:20"},"nativeSrc":"28255:58:20","nodeType":"YulFunctionCall","src":"28255:58:20"},"nativeSrc":"28255:58:20","nodeType":"YulExpressionStatement","src":"28255:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"28334:6:20","nodeType":"YulIdentifier","src":"28334:6:20"},{"kind":"number","nativeSrc":"28342:2:20","nodeType":"YulLiteral","src":"28342:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28330:3:20","nodeType":"YulIdentifier","src":"28330:3:20"},"nativeSrc":"28330:15:20","nodeType":"YulFunctionCall","src":"28330:15:20"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nativeSrc":"28347:15:20","nodeType":"YulLiteral","src":"28347:15:20","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nativeSrc":"28323:6:20","nodeType":"YulIdentifier","src":"28323:6:20"},"nativeSrc":"28323:40:20","nodeType":"YulFunctionCall","src":"28323:40:20"},"nativeSrc":"28323:40:20","nodeType":"YulExpressionStatement","src":"28323:40:20"}]},"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nativeSrc":"28138:232:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"28236:6:20","nodeType":"YulTypedName","src":"28236:6:20","type":""}],"src":"28138:232:20"},{"body":{"nativeSrc":"28522:220:20","nodeType":"YulBlock","src":"28522:220:20","statements":[{"nativeSrc":"28532:74:20","nodeType":"YulAssignment","src":"28532:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"28598:3:20","nodeType":"YulIdentifier","src":"28598:3:20"},{"kind":"number","nativeSrc":"28603:2:20","nodeType":"YulLiteral","src":"28603:2:20","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"28539:58:20","nodeType":"YulIdentifier","src":"28539:58:20"},"nativeSrc":"28539:67:20","nodeType":"YulFunctionCall","src":"28539:67:20"},"variableNames":[{"name":"pos","nativeSrc":"28532:3:20","nodeType":"YulIdentifier","src":"28532:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"28704:3:20","nodeType":"YulIdentifier","src":"28704:3:20"}],"functionName":{"name":"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","nativeSrc":"28615:88:20","nodeType":"YulIdentifier","src":"28615:88:20"},"nativeSrc":"28615:93:20","nodeType":"YulFunctionCall","src":"28615:93:20"},"nativeSrc":"28615:93:20","nodeType":"YulExpressionStatement","src":"28615:93:20"},{"nativeSrc":"28717:19:20","nodeType":"YulAssignment","src":"28717:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"28728:3:20","nodeType":"YulIdentifier","src":"28728:3:20"},{"kind":"number","nativeSrc":"28733:2:20","nodeType":"YulLiteral","src":"28733:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"28724:3:20","nodeType":"YulIdentifier","src":"28724:3:20"},"nativeSrc":"28724:12:20","nodeType":"YulFunctionCall","src":"28724:12:20"},"variableNames":[{"name":"end","nativeSrc":"28717:3:20","nodeType":"YulIdentifier","src":"28717:3:20"}]}]},"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nativeSrc":"28376:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"28510:3:20","nodeType":"YulTypedName","src":"28510:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"28518:3:20","nodeType":"YulTypedName","src":"28518:3:20","type":""}],"src":"28376:366:20"},{"body":{"nativeSrc":"28919:248:20","nodeType":"YulBlock","src":"28919:248:20","statements":[{"nativeSrc":"28929:26:20","nodeType":"YulAssignment","src":"28929:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"28941:9:20","nodeType":"YulIdentifier","src":"28941:9:20"},{"kind":"number","nativeSrc":"28952:2:20","nodeType":"YulLiteral","src":"28952:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"28937:3:20","nodeType":"YulIdentifier","src":"28937:3:20"},"nativeSrc":"28937:18:20","nodeType":"YulFunctionCall","src":"28937:18:20"},"variableNames":[{"name":"tail","nativeSrc":"28929:4:20","nodeType":"YulIdentifier","src":"28929:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28976:9:20","nodeType":"YulIdentifier","src":"28976:9:20"},{"kind":"number","nativeSrc":"28987:1:20","nodeType":"YulLiteral","src":"28987:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"28972:3:20","nodeType":"YulIdentifier","src":"28972:3:20"},"nativeSrc":"28972:17:20","nodeType":"YulFunctionCall","src":"28972:17:20"},{"arguments":[{"name":"tail","nativeSrc":"28995:4:20","nodeType":"YulIdentifier","src":"28995:4:20"},{"name":"headStart","nativeSrc":"29001:9:20","nodeType":"YulIdentifier","src":"29001:9:20"}],"functionName":{"name":"sub","nativeSrc":"28991:3:20","nodeType":"YulIdentifier","src":"28991:3:20"},"nativeSrc":"28991:20:20","nodeType":"YulFunctionCall","src":"28991:20:20"}],"functionName":{"name":"mstore","nativeSrc":"28965:6:20","nodeType":"YulIdentifier","src":"28965:6:20"},"nativeSrc":"28965:47:20","nodeType":"YulFunctionCall","src":"28965:47:20"},"nativeSrc":"28965:47:20","nodeType":"YulExpressionStatement","src":"28965:47:20"},{"nativeSrc":"29021:139:20","nodeType":"YulAssignment","src":"29021:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"29155:4:20","nodeType":"YulIdentifier","src":"29155:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack","nativeSrc":"29029:124:20","nodeType":"YulIdentifier","src":"29029:124:20"},"nativeSrc":"29029:131:20","nodeType":"YulFunctionCall","src":"29029:131:20"},"variableNames":[{"name":"tail","nativeSrc":"29021:4:20","nodeType":"YulIdentifier","src":"29021:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"28748:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28899:9:20","nodeType":"YulTypedName","src":"28899:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"28914:4:20","nodeType":"YulTypedName","src":"28914:4:20","type":""}],"src":"28748:419:20"},{"body":{"nativeSrc":"29299:206:20","nodeType":"YulBlock","src":"29299:206:20","statements":[{"nativeSrc":"29309:26:20","nodeType":"YulAssignment","src":"29309:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"29321:9:20","nodeType":"YulIdentifier","src":"29321:9:20"},{"kind":"number","nativeSrc":"29332:2:20","nodeType":"YulLiteral","src":"29332:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"29317:3:20","nodeType":"YulIdentifier","src":"29317:3:20"},"nativeSrc":"29317:18:20","nodeType":"YulFunctionCall","src":"29317:18:20"},"variableNames":[{"name":"tail","nativeSrc":"29309:4:20","nodeType":"YulIdentifier","src":"29309:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"29389:6:20","nodeType":"YulIdentifier","src":"29389:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"29402:9:20","nodeType":"YulIdentifier","src":"29402:9:20"},{"kind":"number","nativeSrc":"29413:1:20","nodeType":"YulLiteral","src":"29413:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"29398:3:20","nodeType":"YulIdentifier","src":"29398:3:20"},"nativeSrc":"29398:17:20","nodeType":"YulFunctionCall","src":"29398:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29345:43:20","nodeType":"YulIdentifier","src":"29345:43:20"},"nativeSrc":"29345:71:20","nodeType":"YulFunctionCall","src":"29345:71:20"},"nativeSrc":"29345:71:20","nodeType":"YulExpressionStatement","src":"29345:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"29470:6:20","nodeType":"YulIdentifier","src":"29470:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"29483:9:20","nodeType":"YulIdentifier","src":"29483:9:20"},{"kind":"number","nativeSrc":"29494:2:20","nodeType":"YulLiteral","src":"29494:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29479:3:20","nodeType":"YulIdentifier","src":"29479:3:20"},"nativeSrc":"29479:18:20","nodeType":"YulFunctionCall","src":"29479:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"29426:43:20","nodeType":"YulIdentifier","src":"29426:43:20"},"nativeSrc":"29426:72:20","nodeType":"YulFunctionCall","src":"29426:72:20"},"nativeSrc":"29426:72:20","nodeType":"YulExpressionStatement","src":"29426:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"29173:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29263:9:20","nodeType":"YulTypedName","src":"29263:9:20","type":""},{"name":"value1","nativeSrc":"29275:6:20","nodeType":"YulTypedName","src":"29275:6:20","type":""},{"name":"value0","nativeSrc":"29283:6:20","nodeType":"YulTypedName","src":"29283:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"29294:4:20","nodeType":"YulTypedName","src":"29294:4:20","type":""}],"src":"29173:332:20"},{"body":{"nativeSrc":"29569:40:20","nodeType":"YulBlock","src":"29569:40:20","statements":[{"nativeSrc":"29580:22:20","nodeType":"YulAssignment","src":"29580:22:20","value":{"arguments":[{"name":"value","nativeSrc":"29596:5:20","nodeType":"YulIdentifier","src":"29596:5:20"}],"functionName":{"name":"mload","nativeSrc":"29590:5:20","nodeType":"YulIdentifier","src":"29590:5:20"},"nativeSrc":"29590:12:20","nodeType":"YulFunctionCall","src":"29590:12:20"},"variableNames":[{"name":"length","nativeSrc":"29580:6:20","nodeType":"YulIdentifier","src":"29580:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"29511:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"29552:5:20","nodeType":"YulTypedName","src":"29552:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"29562:6:20","nodeType":"YulTypedName","src":"29562:6:20","type":""}],"src":"29511:98:20"},{"body":{"nativeSrc":"29728:34:20","nodeType":"YulBlock","src":"29728:34:20","statements":[{"nativeSrc":"29738:18:20","nodeType":"YulAssignment","src":"29738:18:20","value":{"name":"pos","nativeSrc":"29753:3:20","nodeType":"YulIdentifier","src":"29753:3:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"29738:11:20","nodeType":"YulIdentifier","src":"29738:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"29615:147:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"29700:3:20","nodeType":"YulTypedName","src":"29700:3:20","type":""},{"name":"length","nativeSrc":"29705:6:20","nodeType":"YulTypedName","src":"29705:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"29716:11:20","nodeType":"YulTypedName","src":"29716:11:20","type":""}],"src":"29615:147:20"},{"body":{"nativeSrc":"29830:186:20","nodeType":"YulBlock","src":"29830:186:20","statements":[{"nativeSrc":"29841:10:20","nodeType":"YulVariableDeclaration","src":"29841:10:20","value":{"kind":"number","nativeSrc":"29850:1:20","nodeType":"YulLiteral","src":"29850:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"29845:1:20","nodeType":"YulTypedName","src":"29845:1:20","type":""}]},{"body":{"nativeSrc":"29910:63:20","nodeType":"YulBlock","src":"29910:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"29935:3:20","nodeType":"YulIdentifier","src":"29935:3:20"},{"name":"i","nativeSrc":"29940:1:20","nodeType":"YulIdentifier","src":"29940:1:20"}],"functionName":{"name":"add","nativeSrc":"29931:3:20","nodeType":"YulIdentifier","src":"29931:3:20"},"nativeSrc":"29931:11:20","nodeType":"YulFunctionCall","src":"29931:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"29954:3:20","nodeType":"YulIdentifier","src":"29954:3:20"},{"name":"i","nativeSrc":"29959:1:20","nodeType":"YulIdentifier","src":"29959:1:20"}],"functionName":{"name":"add","nativeSrc":"29950:3:20","nodeType":"YulIdentifier","src":"29950:3:20"},"nativeSrc":"29950:11:20","nodeType":"YulFunctionCall","src":"29950:11:20"}],"functionName":{"name":"mload","nativeSrc":"29944:5:20","nodeType":"YulIdentifier","src":"29944:5:20"},"nativeSrc":"29944:18:20","nodeType":"YulFunctionCall","src":"29944:18:20"}],"functionName":{"name":"mstore","nativeSrc":"29924:6:20","nodeType":"YulIdentifier","src":"29924:6:20"},"nativeSrc":"29924:39:20","nodeType":"YulFunctionCall","src":"29924:39:20"},"nativeSrc":"29924:39:20","nodeType":"YulExpressionStatement","src":"29924:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"29871:1:20","nodeType":"YulIdentifier","src":"29871:1:20"},{"name":"length","nativeSrc":"29874:6:20","nodeType":"YulIdentifier","src":"29874:6:20"}],"functionName":{"name":"lt","nativeSrc":"29868:2:20","nodeType":"YulIdentifier","src":"29868:2:20"},"nativeSrc":"29868:13:20","nodeType":"YulFunctionCall","src":"29868:13:20"},"nativeSrc":"29860:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"29882:19:20","nodeType":"YulBlock","src":"29882:19:20","statements":[{"nativeSrc":"29884:15:20","nodeType":"YulAssignment","src":"29884:15:20","value":{"arguments":[{"name":"i","nativeSrc":"29893:1:20","nodeType":"YulIdentifier","src":"29893:1:20"},{"kind":"number","nativeSrc":"29896:2:20","nodeType":"YulLiteral","src":"29896:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29889:3:20","nodeType":"YulIdentifier","src":"29889:3:20"},"nativeSrc":"29889:10:20","nodeType":"YulFunctionCall","src":"29889:10:20"},"variableNames":[{"name":"i","nativeSrc":"29884:1:20","nodeType":"YulIdentifier","src":"29884:1:20"}]}]},"pre":{"nativeSrc":"29864:3:20","nodeType":"YulBlock","src":"29864:3:20","statements":[]},"src":"29860:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"29993:3:20","nodeType":"YulIdentifier","src":"29993:3:20"},{"name":"length","nativeSrc":"29998:6:20","nodeType":"YulIdentifier","src":"29998:6:20"}],"functionName":{"name":"add","nativeSrc":"29989:3:20","nodeType":"YulIdentifier","src":"29989:3:20"},"nativeSrc":"29989:16:20","nodeType":"YulFunctionCall","src":"29989:16:20"},{"kind":"number","nativeSrc":"30007:1:20","nodeType":"YulLiteral","src":"30007:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"29982:6:20","nodeType":"YulIdentifier","src":"29982:6:20"},"nativeSrc":"29982:27:20","nodeType":"YulFunctionCall","src":"29982:27:20"},"nativeSrc":"29982:27:20","nodeType":"YulExpressionStatement","src":"29982:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"29768:248:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"29812:3:20","nodeType":"YulTypedName","src":"29812:3:20","type":""},{"name":"dst","nativeSrc":"29817:3:20","nodeType":"YulTypedName","src":"29817:3:20","type":""},{"name":"length","nativeSrc":"29822:6:20","nodeType":"YulTypedName","src":"29822:6:20","type":""}],"src":"29768:248:20"},{"body":{"nativeSrc":"30130:278:20","nodeType":"YulBlock","src":"30130:278:20","statements":[{"nativeSrc":"30140:52:20","nodeType":"YulVariableDeclaration","src":"30140:52:20","value":{"arguments":[{"name":"value","nativeSrc":"30186:5:20","nodeType":"YulIdentifier","src":"30186:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"30154:31:20","nodeType":"YulIdentifier","src":"30154:31:20"},"nativeSrc":"30154:38:20","nodeType":"YulFunctionCall","src":"30154:38:20"},"variables":[{"name":"length","nativeSrc":"30144:6:20","nodeType":"YulTypedName","src":"30144:6:20","type":""}]},{"nativeSrc":"30201:95:20","nodeType":"YulAssignment","src":"30201:95:20","value":{"arguments":[{"name":"pos","nativeSrc":"30284:3:20","nodeType":"YulIdentifier","src":"30284:3:20"},{"name":"length","nativeSrc":"30289:6:20","nodeType":"YulIdentifier","src":"30289:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30208:75:20","nodeType":"YulIdentifier","src":"30208:75:20"},"nativeSrc":"30208:88:20","nodeType":"YulFunctionCall","src":"30208:88:20"},"variableNames":[{"name":"pos","nativeSrc":"30201:3:20","nodeType":"YulIdentifier","src":"30201:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"30344:5:20","nodeType":"YulIdentifier","src":"30344:5:20"},{"kind":"number","nativeSrc":"30351:4:20","nodeType":"YulLiteral","src":"30351:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"30340:3:20","nodeType":"YulIdentifier","src":"30340:3:20"},"nativeSrc":"30340:16:20","nodeType":"YulFunctionCall","src":"30340:16:20"},{"name":"pos","nativeSrc":"30358:3:20","nodeType":"YulIdentifier","src":"30358:3:20"},{"name":"length","nativeSrc":"30363:6:20","nodeType":"YulIdentifier","src":"30363:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"30305:34:20","nodeType":"YulIdentifier","src":"30305:34:20"},"nativeSrc":"30305:65:20","nodeType":"YulFunctionCall","src":"30305:65:20"},"nativeSrc":"30305:65:20","nodeType":"YulExpressionStatement","src":"30305:65:20"},{"nativeSrc":"30379:23:20","nodeType":"YulAssignment","src":"30379:23:20","value":{"arguments":[{"name":"pos","nativeSrc":"30390:3:20","nodeType":"YulIdentifier","src":"30390:3:20"},{"name":"length","nativeSrc":"30395:6:20","nodeType":"YulIdentifier","src":"30395:6:20"}],"functionName":{"name":"add","nativeSrc":"30386:3:20","nodeType":"YulIdentifier","src":"30386:3:20"},"nativeSrc":"30386:16:20","nodeType":"YulFunctionCall","src":"30386:16:20"},"variableNames":[{"name":"end","nativeSrc":"30379:3:20","nodeType":"YulIdentifier","src":"30379:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30022:386:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"30111:5:20","nodeType":"YulTypedName","src":"30111:5:20","type":""},{"name":"pos","nativeSrc":"30118:3:20","nodeType":"YulTypedName","src":"30118:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30126:3:20","nodeType":"YulTypedName","src":"30126:3:20","type":""}],"src":"30022:386:20"},{"body":{"nativeSrc":"30548:137:20","nodeType":"YulBlock","src":"30548:137:20","statements":[{"nativeSrc":"30559:100:20","nodeType":"YulAssignment","src":"30559:100:20","value":{"arguments":[{"name":"value0","nativeSrc":"30646:6:20","nodeType":"YulIdentifier","src":"30646:6:20"},{"name":"pos","nativeSrc":"30655:3:20","nodeType":"YulIdentifier","src":"30655:3:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"30566:79:20","nodeType":"YulIdentifier","src":"30566:79:20"},"nativeSrc":"30566:93:20","nodeType":"YulFunctionCall","src":"30566:93:20"},"variableNames":[{"name":"pos","nativeSrc":"30559:3:20","nodeType":"YulIdentifier","src":"30559:3:20"}]},{"nativeSrc":"30669:10:20","nodeType":"YulAssignment","src":"30669:10:20","value":{"name":"pos","nativeSrc":"30676:3:20","nodeType":"YulIdentifier","src":"30676:3:20"},"variableNames":[{"name":"end","nativeSrc":"30669:3:20","nodeType":"YulIdentifier","src":"30669:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"30414:271:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"30527:3:20","nodeType":"YulTypedName","src":"30527:3:20","type":""},{"name":"value0","nativeSrc":"30533:6:20","nodeType":"YulTypedName","src":"30533:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"30544:3:20","nodeType":"YulTypedName","src":"30544:3:20","type":""}],"src":"30414:271:20"},{"body":{"nativeSrc":"30797:73:20","nodeType":"YulBlock","src":"30797:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"30819:6:20","nodeType":"YulIdentifier","src":"30819:6:20"},{"kind":"number","nativeSrc":"30827:1:20","nodeType":"YulLiteral","src":"30827:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30815:3:20","nodeType":"YulIdentifier","src":"30815:3:20"},"nativeSrc":"30815:14:20","nodeType":"YulFunctionCall","src":"30815:14:20"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nativeSrc":"30831:31:20","nodeType":"YulLiteral","src":"30831:31:20","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nativeSrc":"30808:6:20","nodeType":"YulIdentifier","src":"30808:6:20"},"nativeSrc":"30808:55:20","nodeType":"YulFunctionCall","src":"30808:55:20"},"nativeSrc":"30808:55:20","nodeType":"YulExpressionStatement","src":"30808:55:20"}]},"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nativeSrc":"30691:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"30789:6:20","nodeType":"YulTypedName","src":"30789:6:20","type":""}],"src":"30691:179:20"},{"body":{"nativeSrc":"31022:220:20","nodeType":"YulBlock","src":"31022:220:20","statements":[{"nativeSrc":"31032:74:20","nodeType":"YulAssignment","src":"31032:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"31098:3:20","nodeType":"YulIdentifier","src":"31098:3:20"},{"kind":"number","nativeSrc":"31103:2:20","nodeType":"YulLiteral","src":"31103:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31039:58:20","nodeType":"YulIdentifier","src":"31039:58:20"},"nativeSrc":"31039:67:20","nodeType":"YulFunctionCall","src":"31039:67:20"},"variableNames":[{"name":"pos","nativeSrc":"31032:3:20","nodeType":"YulIdentifier","src":"31032:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"31204:3:20","nodeType":"YulIdentifier","src":"31204:3:20"}],"functionName":{"name":"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","nativeSrc":"31115:88:20","nodeType":"YulIdentifier","src":"31115:88:20"},"nativeSrc":"31115:93:20","nodeType":"YulFunctionCall","src":"31115:93:20"},"nativeSrc":"31115:93:20","nodeType":"YulExpressionStatement","src":"31115:93:20"},{"nativeSrc":"31217:19:20","nodeType":"YulAssignment","src":"31217:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"31228:3:20","nodeType":"YulIdentifier","src":"31228:3:20"},{"kind":"number","nativeSrc":"31233:2:20","nodeType":"YulLiteral","src":"31233:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31224:3:20","nodeType":"YulIdentifier","src":"31224:3:20"},"nativeSrc":"31224:12:20","nodeType":"YulFunctionCall","src":"31224:12:20"},"variableNames":[{"name":"end","nativeSrc":"31217:3:20","nodeType":"YulIdentifier","src":"31217:3:20"}]}]},"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nativeSrc":"30876:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"31010:3:20","nodeType":"YulTypedName","src":"31010:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31018:3:20","nodeType":"YulTypedName","src":"31018:3:20","type":""}],"src":"30876:366:20"},{"body":{"nativeSrc":"31419:248:20","nodeType":"YulBlock","src":"31419:248:20","statements":[{"nativeSrc":"31429:26:20","nodeType":"YulAssignment","src":"31429:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"31441:9:20","nodeType":"YulIdentifier","src":"31441:9:20"},{"kind":"number","nativeSrc":"31452:2:20","nodeType":"YulLiteral","src":"31452:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31437:3:20","nodeType":"YulIdentifier","src":"31437:3:20"},"nativeSrc":"31437:18:20","nodeType":"YulFunctionCall","src":"31437:18:20"},"variableNames":[{"name":"tail","nativeSrc":"31429:4:20","nodeType":"YulIdentifier","src":"31429:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31476:9:20","nodeType":"YulIdentifier","src":"31476:9:20"},{"kind":"number","nativeSrc":"31487:1:20","nodeType":"YulLiteral","src":"31487:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31472:3:20","nodeType":"YulIdentifier","src":"31472:3:20"},"nativeSrc":"31472:17:20","nodeType":"YulFunctionCall","src":"31472:17:20"},{"arguments":[{"name":"tail","nativeSrc":"31495:4:20","nodeType":"YulIdentifier","src":"31495:4:20"},{"name":"headStart","nativeSrc":"31501:9:20","nodeType":"YulIdentifier","src":"31501:9:20"}],"functionName":{"name":"sub","nativeSrc":"31491:3:20","nodeType":"YulIdentifier","src":"31491:3:20"},"nativeSrc":"31491:20:20","nodeType":"YulFunctionCall","src":"31491:20:20"}],"functionName":{"name":"mstore","nativeSrc":"31465:6:20","nodeType":"YulIdentifier","src":"31465:6:20"},"nativeSrc":"31465:47:20","nodeType":"YulFunctionCall","src":"31465:47:20"},"nativeSrc":"31465:47:20","nodeType":"YulExpressionStatement","src":"31465:47:20"},{"nativeSrc":"31521:139:20","nodeType":"YulAssignment","src":"31521:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"31655:4:20","nodeType":"YulIdentifier","src":"31655:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack","nativeSrc":"31529:124:20","nodeType":"YulIdentifier","src":"31529:124:20"},"nativeSrc":"31529:131:20","nodeType":"YulFunctionCall","src":"31529:131:20"},"variableNames":[{"name":"tail","nativeSrc":"31521:4:20","nodeType":"YulIdentifier","src":"31521:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"31248:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31399:9:20","nodeType":"YulTypedName","src":"31399:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31414:4:20","nodeType":"YulTypedName","src":"31414:4:20","type":""}],"src":"31248:419:20"},{"body":{"nativeSrc":"31732:40:20","nodeType":"YulBlock","src":"31732:40:20","statements":[{"nativeSrc":"31743:22:20","nodeType":"YulAssignment","src":"31743:22:20","value":{"arguments":[{"name":"value","nativeSrc":"31759:5:20","nodeType":"YulIdentifier","src":"31759:5:20"}],"functionName":{"name":"mload","nativeSrc":"31753:5:20","nodeType":"YulIdentifier","src":"31753:5:20"},"nativeSrc":"31753:12:20","nodeType":"YulFunctionCall","src":"31753:12:20"},"variableNames":[{"name":"length","nativeSrc":"31743:6:20","nodeType":"YulIdentifier","src":"31743:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"31673:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31715:5:20","nodeType":"YulTypedName","src":"31715:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"31725:6:20","nodeType":"YulTypedName","src":"31725:6:20","type":""}],"src":"31673:99:20"},{"body":{"nativeSrc":"31870:285:20","nodeType":"YulBlock","src":"31870:285:20","statements":[{"nativeSrc":"31880:53:20","nodeType":"YulVariableDeclaration","src":"31880:53:20","value":{"arguments":[{"name":"value","nativeSrc":"31927:5:20","nodeType":"YulIdentifier","src":"31927:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"31894:32:20","nodeType":"YulIdentifier","src":"31894:32:20"},"nativeSrc":"31894:39:20","nodeType":"YulFunctionCall","src":"31894:39:20"},"variables":[{"name":"length","nativeSrc":"31884:6:20","nodeType":"YulTypedName","src":"31884:6:20","type":""}]},{"nativeSrc":"31942:78:20","nodeType":"YulAssignment","src":"31942:78:20","value":{"arguments":[{"name":"pos","nativeSrc":"32008:3:20","nodeType":"YulIdentifier","src":"32008:3:20"},{"name":"length","nativeSrc":"32013:6:20","nodeType":"YulIdentifier","src":"32013:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"31949:58:20","nodeType":"YulIdentifier","src":"31949:58:20"},"nativeSrc":"31949:71:20","nodeType":"YulFunctionCall","src":"31949:71:20"},"variableNames":[{"name":"pos","nativeSrc":"31942:3:20","nodeType":"YulIdentifier","src":"31942:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"32068:5:20","nodeType":"YulIdentifier","src":"32068:5:20"},{"kind":"number","nativeSrc":"32075:4:20","nodeType":"YulLiteral","src":"32075:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"32064:3:20","nodeType":"YulIdentifier","src":"32064:3:20"},"nativeSrc":"32064:16:20","nodeType":"YulFunctionCall","src":"32064:16:20"},{"name":"pos","nativeSrc":"32082:3:20","nodeType":"YulIdentifier","src":"32082:3:20"},{"name":"length","nativeSrc":"32087:6:20","nodeType":"YulIdentifier","src":"32087:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"32029:34:20","nodeType":"YulIdentifier","src":"32029:34:20"},"nativeSrc":"32029:65:20","nodeType":"YulFunctionCall","src":"32029:65:20"},"nativeSrc":"32029:65:20","nodeType":"YulExpressionStatement","src":"32029:65:20"},{"nativeSrc":"32103:46:20","nodeType":"YulAssignment","src":"32103:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"32114:3:20","nodeType":"YulIdentifier","src":"32114:3:20"},{"arguments":[{"name":"length","nativeSrc":"32141:6:20","nodeType":"YulIdentifier","src":"32141:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"32119:21:20","nodeType":"YulIdentifier","src":"32119:21:20"},"nativeSrc":"32119:29:20","nodeType":"YulFunctionCall","src":"32119:29:20"}],"functionName":{"name":"add","nativeSrc":"32110:3:20","nodeType":"YulIdentifier","src":"32110:3:20"},"nativeSrc":"32110:39:20","nodeType":"YulFunctionCall","src":"32110:39:20"},"variableNames":[{"name":"end","nativeSrc":"32103:3:20","nodeType":"YulIdentifier","src":"32103:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"31778:377:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31851:5:20","nodeType":"YulTypedName","src":"31851:5:20","type":""},{"name":"pos","nativeSrc":"31858:3:20","nodeType":"YulTypedName","src":"31858:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"31866:3:20","nodeType":"YulTypedName","src":"31866:3:20","type":""}],"src":"31778:377:20"},{"body":{"nativeSrc":"32279:195:20","nodeType":"YulBlock","src":"32279:195:20","statements":[{"nativeSrc":"32289:26:20","nodeType":"YulAssignment","src":"32289:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"32301:9:20","nodeType":"YulIdentifier","src":"32301:9:20"},{"kind":"number","nativeSrc":"32312:2:20","nodeType":"YulLiteral","src":"32312:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32297:3:20","nodeType":"YulIdentifier","src":"32297:3:20"},"nativeSrc":"32297:18:20","nodeType":"YulFunctionCall","src":"32297:18:20"},"variableNames":[{"name":"tail","nativeSrc":"32289:4:20","nodeType":"YulIdentifier","src":"32289:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"32336:9:20","nodeType":"YulIdentifier","src":"32336:9:20"},{"kind":"number","nativeSrc":"32347:1:20","nodeType":"YulLiteral","src":"32347:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32332:3:20","nodeType":"YulIdentifier","src":"32332:3:20"},"nativeSrc":"32332:17:20","nodeType":"YulFunctionCall","src":"32332:17:20"},{"arguments":[{"name":"tail","nativeSrc":"32355:4:20","nodeType":"YulIdentifier","src":"32355:4:20"},{"name":"headStart","nativeSrc":"32361:9:20","nodeType":"YulIdentifier","src":"32361:9:20"}],"functionName":{"name":"sub","nativeSrc":"32351:3:20","nodeType":"YulIdentifier","src":"32351:3:20"},"nativeSrc":"32351:20:20","nodeType":"YulFunctionCall","src":"32351:20:20"}],"functionName":{"name":"mstore","nativeSrc":"32325:6:20","nodeType":"YulIdentifier","src":"32325:6:20"},"nativeSrc":"32325:47:20","nodeType":"YulFunctionCall","src":"32325:47:20"},"nativeSrc":"32325:47:20","nodeType":"YulExpressionStatement","src":"32325:47:20"},{"nativeSrc":"32381:86:20","nodeType":"YulAssignment","src":"32381:86:20","value":{"arguments":[{"name":"value0","nativeSrc":"32453:6:20","nodeType":"YulIdentifier","src":"32453:6:20"},{"name":"tail","nativeSrc":"32462:4:20","nodeType":"YulIdentifier","src":"32462:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"32389:63:20","nodeType":"YulIdentifier","src":"32389:63:20"},"nativeSrc":"32389:78:20","nodeType":"YulFunctionCall","src":"32389:78:20"},"variableNames":[{"name":"tail","nativeSrc":"32381:4:20","nodeType":"YulIdentifier","src":"32381:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"32161:313:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"32251:9:20","nodeType":"YulTypedName","src":"32251:9:20","type":""},{"name":"value0","nativeSrc":"32263:6:20","nodeType":"YulTypedName","src":"32263:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"32274:4:20","nodeType":"YulTypedName","src":"32274:4:20","type":""}],"src":"32161:313:20"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function must be called through \")\n\n        mstore(add(memPtr, 32), \"active proxy\")\n\n    }\n\n    function abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid auction implementation\")\n\n    }\n\n    function abi_encode_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_efbf71dcb4e78b46351312d45444437c5d074937abe6782195486fa0e94a4927_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"UUPSUpgradeable: must not be cal\")\n\n        mstore(add(memPtr, 32), \"led through delegatecall\")\n\n    }\n\n    function abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid NFT contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2887757f0f3cf576ec3f340649b20d3beb1d12358fb66f4b67a47b38093fc128_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be in the future\")\n\n    }\n\n    function abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_91f1f2e511bedf319ad6ce391862732cf90c76883618f4f508c8f5e61f705466_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"End time must be after start tim\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner of NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: new implementati\")\n\n        mstore(add(memPtr, 32), \"on is not UUPS\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: unsupported prox\")\n\n        mstore(add(memPtr, 32), \"iableUUID\")\n\n    }\n\n    function abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"733":[{"length":32,"start":723},{"length":32,"start":865},{"length":32,"start":1795},{"length":32,"start":1937},{"length":32,"start":2113}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A7F3F6C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6A7F3F6C EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7C06919 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xF2DF5047 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x282 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x2630C12F EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x571A26A0 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1ED PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xA27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x356 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x39E PUSH2 0xEA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EB SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3FD DUP2 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x456 DUP2 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x41C JUMPI PUSH2 0x41B PUSH2 0x17DB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 PUSH2 0xF03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x48A JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x4B7 JUMPI POP PUSH2 0x499 ADDRESS PUSH2 0x1071 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x53B PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x543 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xCB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xCA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7CE PUSH2 0xEA1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81B SWAP1 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x82D DUP3 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x839 DUP3 DUP3 PUSH1 0x1 PUSH2 0xF03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x963 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x96D PUSH1 0x0 PUSH2 0x11BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA1D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9D3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA31 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 LT ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADA SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 GT PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x209B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP1 PUSH2 0x2114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP3 SWAP2 SWAP1 PUSH2 0x2134 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xCA6 PUSH1 0xCB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1282 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x871B6236 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0xCA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xC9 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE26 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8C SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x11BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF00 PUSH2 0x113E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF2F PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF53 JUMPI PUSH2 0xF4E DUP4 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x106C JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xFBB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB8 SWAP2 SWAP1 PUSH2 0x22B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF1 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1056 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x106B DUP4 DUP4 DUP4 PUSH2 0x1363 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EB PUSH2 0x138F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1133 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1146 PUSH2 0x13F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1164 PUSH2 0x96F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128F DUP3 PUSH1 0x0 PUSH2 0x13F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B3 DUP2 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x131F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x136C DUP4 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1379 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x138A JUMPI PUSH2 0x1388 DUP4 DUP4 PUSH2 0x153F JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D5 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13EE PUSH2 0x13E9 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1441 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1438 SWAP3 SWAP2 SWAP1 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14EA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1564 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2718 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1596 SWAP2 SWAP1 PUSH2 0x262E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15E7 DUP7 DUP4 DUP4 DUP8 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x164C JUMPI PUSH2 0x160C DUP6 PUSH2 0x1071 JUMP JUMPDEST PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1642 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x165F JUMP JUMPDEST PUSH2 0x165E DUP4 DUP4 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x167A JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AE SWAP2 SWAP1 PUSH2 0x26F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x170D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174D DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP5 DUP3 DUP6 ADD PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1797 JUMPI PUSH2 0x1796 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1813 DUP3 PUSH2 0x17CA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x17DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1845 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH2 0x1851 DUP3 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1870 PUSH2 0x17DB JUMP JUMPDEST JUMPDEST PUSH2 0x187A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A9 PUSH2 0x18A4 DUP5 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x183B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST PUSH2 0x18D0 DUP5 DUP3 DUP6 PUSH2 0x1887 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x191D JUMPI PUSH2 0x191C PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x192B DUP6 DUP3 DUP7 ADD PUSH2 0x173E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x1722 JUMP JUMPDEST JUMPDEST PUSH2 0x1958 DUP6 DUP3 DUP7 ADD PUSH2 0x18D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1990 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP2 EQ PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C6 DUP2 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E2 JUMPI PUSH2 0x19E1 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F0 DUP5 DUP3 DUP6 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2E DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A40 DUP4 DUP4 PUSH2 0x1A25 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 DUP3 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0x1A6E DUP2 DUP6 PUSH2 0x1A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A79 DUP4 PUSH2 0x1A15 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AAA JUMPI DUP2 MLOAD PUSH2 0x1A91 DUP9 DUP3 PUSH2 0x1A34 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A9C DUP4 PUSH2 0x1A4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A7D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD1 DUP2 DUP5 PUSH2 0x1A59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF4 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B03 DUP9 DUP3 DUP10 ADD PUSH2 0x173E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B14 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B25 DUP9 DUP3 DUP10 ADD PUSH2 0x173E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1B36 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1B47 DUP9 DUP3 DUP10 ADD PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656C656761746563616C6C0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH1 0x2C DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BCC DUP3 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF0 DUP2 PUSH2 0x1BB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6163746976652070726F78790000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C53 PUSH1 0x2C DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5E DUP3 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 PUSH2 0x1C46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 PUSH1 0x2E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF0 DUP3 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D14 DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061756374696F6E20696D706C656D656E746174696F6E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D51 PUSH1 0x1E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5C DUP3 PUSH2 0x1D1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D80 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207072696365206F7261636C65000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBD PUSH1 0x14 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC8 DUP3 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DEC DUP2 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2F PUSH2 0x1E2A PUSH2 0x1E25 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3F DUP2 PUSH2 0x1E14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH1 0x38 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC7 DUP3 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EEB DUP2 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964204E465420636F6E7472616374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F28 PUSH1 0x14 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP3 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F57 DUP2 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D75737420626520696E2074686520667574757265 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F94 PUSH1 0x20 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9F DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC3 DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2026 PUSH1 0x21 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2031 DUP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2055 DUP2 PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2065 DUP2 PUSH2 0x1996 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2080 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2095 DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20BF DUP5 DUP3 DUP6 ADD PUSH2 0x2086 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66204E465400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE PUSH1 0x10 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2109 DUP3 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212D DUP2 PUSH2 0x20F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2149 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x2156 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x21A6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x16E9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x21E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x21ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2251 PUSH1 0x26 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x225C DUP3 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2280 DUP2 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2290 DUP2 PUSH2 0x1962 JUMP JUMPDEST DUP2 EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22AD DUP2 PUSH2 0x2287 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C9 JUMPI PUSH2 0x22C8 PUSH2 0x171D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D7 DUP5 DUP3 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E206973206E6F742055555053000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233C PUSH1 0x2E DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2347 DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x236B DUP2 PUSH2 0x232F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6961626C65555549440000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23CE PUSH1 0x29 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D9 DUP3 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23FD DUP2 PUSH2 0x23C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH1 0x2B DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x246B DUP3 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CC PUSH1 0x20 DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D7 DUP3 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24FB DUP2 PUSH2 0x24BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255E PUSH1 0x2D DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2569 DUP3 PUSH2 0x2502 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x258D DUP2 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25A9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x205C JUMP JUMPDEST PUSH2 0x25B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x205C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2608 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH2 0x2612 DUP2 DUP6 PUSH2 0x25C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x2622 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25D3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263A DUP3 DUP5 PUSH2 0x25FD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267B PUSH1 0x1D DUP4 PUSH2 0x1B54 JUMP JUMPDEST SWAP2 POP PUSH2 0x2686 DUP3 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 PUSH2 0x266E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C7 DUP3 PUSH2 0x26B1 JUMP JUMPDEST PUSH2 0x26D1 DUP2 DUP6 PUSH2 0x1B54 JUMP JUMPDEST SWAP4 POP PUSH2 0x26E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25D3 JUMP JUMPDEST PUSH2 0x26EA DUP2 PUSH2 0x17CA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x270F DUP2 DUP5 PUSH2 0x26BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122081C6C4 0xEB 0xA6 0xBC KECCAK256 PUSH28 0x1BA1D60BE40E088BECDAB8F2213AA06F33968BE4466D442B64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"363:2155:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;513:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3408:195:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;767:411:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3027:131;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:25:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;584:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:1;;;;;;;;;;;;;:::i;:::-;;1462:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:96:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:1038;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2335:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;513:26:18;;;;;;;;;;;;;:::o;3408:195:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3489:36:::1;3507:17;3489;:36::i;:::-;3535:61;3557:17;3586:1;3576:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3590:5;3535:21;:61::i;:::-;3408:195:::0;:::o;767:411:18:-;3279:19:6;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;870:16:18::1;:14;:16::i;:::-;896:24;:22;:24::i;:::-;972:1;938:36;;:22;:36;;::::0;930:79:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1051:1;1027:26;;:12;:26;;::::0;1019:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1113:22;1089:21;;:46;;;;;;;;;;;;;;;;;;1159:12;1145:11;;:26;;;;;;;;;;;;;;;;;;3651:14:6::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;767:411:18;;:::o;3922:220:7:-;1764:6;1747:23;;1755:4;1747:23;;;1739:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1861:6;1837:30;;:20;:18;:20::i;:::-;:30;;;1829:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;:::-;3922:220:::0;;:::o;3027:131::-;3105:7;2199:6;2182:23;;2190:4;2182:23;;;2174:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1180:66:4::1;3131:20:7;;3124:27;;3027:131:::0;:::o;447:25:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;584:36::-;;;;;;;;;;;;;:::o;2085:101:1:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;1462:85::-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;2330:96:18:-;2376:16;2411:8;2404:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:96;:::o;1232:1038::-;1424:7;1355:13:1;:11;:13::i;:::-;1475:1:18::1;1451:26;;:12;:26;;::::0;1443:59:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1534:15;1520:10;:29;;1512:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1615:10;1604:8;:21;1596:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1733:10;1690:53;;1698:12;1690:29;;;1720:8;1690:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;1682:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:12;1783:29;;;1821:4;1828:8;1783:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1856:15;1874:35;1887:21;;;;;;;;;;;1874:12;:35::i;:::-;1856:53;;1944:7;1928:36;;;1978:12;2004:8;2026:7;2047:10;2071:8;2093:11;;;;;;;;;;;1928:186;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2141:12;2133:34;;;2168:10;2180:7;2189:8;2133:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2217:8;2231:7;2217:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:7;2249:14;;;1232:1038:::0;;;;;;;:::o;2335:198:1:-;1355:13;:11;:13::i;:::-;2443:1:::1;2423:22;;:8;:22;;::::0;2415:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2498:28;2517:8;2498:18;:28::i;:::-;2335:198:::0;:::o;1478:151:4:-;1531:7;1557:59;1180:66;1595:20;;1557:37;:59::i;:::-;:65;;;;;;;;;;;;1550:72;;1478:151;:::o;2432:84:18:-;1355:13:1;:11;:13::i;:::-;2432:84:18;:::o;2841:944:4:-;3257:53;839:66;3295:14;;3257:37;:53::i;:::-;:59;;;;;;;;;;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;:::-;3253:526;;;3433:17;3404:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;;;;;;;;;:::i;:::-;;;;;;;;3400:302;1180:66;3525:20;;3517:4;:28;3509:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;:::-;3253:526;2841:944;;;:::o;1423:320:8:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;1024:95:1:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:26:1::1;:24;:26::i;:::-;1024:95::o:0;2290:67:7:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2290:67:7:o;1620:130:1:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2687:187::-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;1405:123:11:-;1462:16;1497:24;1503:14;1519:1;1497:5;:24::i;:::-;1490:31;;1405:123;;;:::o;1870:190:10:-;1931:21;2040:4;2030:14;;1870:190;;;:::o;2158:::-;2219:21;2328:4;2318:14;;2158:190;;;:::o;1720:281:4:-;1801:48;1831:17;1801:29;:48::i;:::-;1793:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1977:17;1909:59;1180:66;1947:20;;1909:37;:59::i;:::-;:65;;;:85;;;;;;;;;;;;;;;;;;1720:281;:::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;:::-;;2540:123;2393:276;;;:::o;1125:111:1:-;5374:13:6;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:1::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;886:96:9:-;939:7;965:10;958:17;;886:96;:::o;2255:910:11:-;2327:16;2383:5;2359:21;:29;2355:123;;;2438:21;2461:5;2411:56;;;;;;;;;;;;:::i;:::-;;;;;;;;2355:123;2764:48;2746:14;2740:4;2736:25;2730:4;2726:36;2723:90;2717:4;2710:104;2971:32;2954:14;2948:4;2944:25;2941:63;2935:4;2928:77;3050:4;3044;3037:5;3030:25;3018:37;;3098:1;3078:22;;:8;:22;;;3074:85;;3123:25;;;;;;;;;;;;;;3074:85;2255:910;;;;:::o;2107:152:4:-;2173:37;2192:17;2173:18;:37::i;:::-;2234:17;2225:27;;;;;;;;;;;;2107:152;:::o;6685:198:8:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;;;;7069:325;;;;;:::o;7682:628::-;7862:12;7890:7;7886:418;;;7938:1;7917:10;:17;:22;7913:286;;8132:18;8143:6;8132:10;:18::i;:::-;8124:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7913:286;8219:10;8212:17;;;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;;:::o;8832:540::-;9011:1;8991:10;:17;:21;8987:379;;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:126:20;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:474::-;1596:6;1604;1653:2;1641:9;1632:7;1628:23;1624:32;1621:119;;;1659:79;;:::i;:::-;1621:119;1779:1;1804:53;1849:7;1840:6;1829:9;1825:22;1804:53;:::i;:::-;1794:63;;1750:117;1906:2;1932:53;1977:7;1968:6;1957:9;1953:22;1932:53;:::i;:::-;1922:63;;1877:118;1528:474;;;;;:::o;2008:117::-;2117:1;2114;2107:12;2131:117;2240:1;2237;2230:12;2254:102;2295:6;2346:2;2342:7;2337:2;2330:5;2326:14;2322:28;2312:38;;2254:102;;;:::o;2362:180::-;2410:77;2407:1;2400:88;2507:4;2504:1;2497:15;2531:4;2528:1;2521:15;2548:281;2631:27;2653:4;2631:27;:::i;:::-;2623:6;2619:40;2761:6;2749:10;2746:22;2725:18;2713:10;2710:34;2707:62;2704:88;;;2772:18;;:::i;:::-;2704:88;2812:10;2808:2;2801:22;2591:238;2548:281;;:::o;2835:129::-;2869:6;2896:20;;:::i;:::-;2886:30;;2925:33;2953:4;2945:6;2925:33;:::i;:::-;2835:129;;;:::o;2970:307::-;3031:4;3121:18;3113:6;3110:30;3107:56;;;3143:18;;:::i;:::-;3107:56;3181:29;3203:6;3181:29;:::i;:::-;3173:37;;3265:4;3259;3255:15;3247:23;;2970:307;;;:::o;3283:148::-;3381:6;3376:3;3371;3358:30;3422:1;3413:6;3408:3;3404:16;3397:27;3283:148;;;:::o;3437:423::-;3514:5;3539:65;3555:48;3596:6;3555:48;:::i;:::-;3539:65;:::i;:::-;3530:74;;3627:6;3620:5;3613:21;3665:4;3658:5;3654:16;3703:3;3694:6;3689:3;3685:16;3682:25;3679:112;;;3710:79;;:::i;:::-;3679:112;3800:54;3847:6;3842:3;3837;3800:54;:::i;:::-;3520:340;3437:423;;;;;:::o;3879:338::-;3934:5;3983:3;3976:4;3968:6;3964:17;3960:27;3950:122;;3991:79;;:::i;:::-;3950:122;4108:6;4095:20;4133:78;4207:3;4199:6;4192:4;4184:6;4180:17;4133:78;:::i;:::-;4124:87;;3940:277;3879:338;;;;:::o;4223:652::-;4300:6;4308;4357:2;4345:9;4336:7;4332:23;4328:32;4325:119;;;4363:79;;:::i;:::-;4325:119;4483:1;4508:53;4553:7;4544:6;4533:9;4529:22;4508:53;:::i;:::-;4498:63;;4454:117;4638:2;4627:9;4623:18;4610:32;4669:18;4661:6;4658:30;4655:117;;;4691:79;;:::i;:::-;4655:117;4796:62;4850:7;4841:6;4830:9;4826:22;4796:62;:::i;:::-;4786:72;;4581:287;4223:652;;;;;:::o;4881:77::-;4918:7;4947:5;4936:16;;4881:77;;;:::o;4964:118::-;5051:24;5069:5;5051:24;:::i;:::-;5046:3;5039:37;4964:118;;:::o;5088:222::-;5181:4;5219:2;5208:9;5204:18;5196:26;;5232:71;5300:1;5289:9;5285:17;5276:6;5232:71;:::i;:::-;5088:222;;;;:::o;5316:77::-;5353:7;5382:5;5371:16;;5316:77;;;:::o;5399:122::-;5472:24;5490:5;5472:24;:::i;:::-;5465:5;5462:35;5452:63;;5511:1;5508;5501:12;5452:63;5399:122;:::o;5527:139::-;5573:5;5611:6;5598:20;5589:29;;5627:33;5654:5;5627:33;:::i;:::-;5527:139;;;;:::o;5672:329::-;5731:6;5780:2;5768:9;5759:7;5755:23;5751:32;5748:119;;;5786:79;;:::i;:::-;5748:119;5906:1;5931:53;5976:7;5967:6;5956:9;5952:22;5931:53;:::i;:::-;5921:63;;5877:117;5672:329;;;;:::o;6007:114::-;6074:6;6108:5;6102:12;6092:22;;6007:114;;;:::o;6127:184::-;6226:11;6260:6;6255:3;6248:19;6300:4;6295:3;6291:14;6276:29;;6127:184;;;;:::o;6317:132::-;6384:4;6407:3;6399:11;;6437:4;6432:3;6428:14;6420:22;;6317:132;;;:::o;6455:108::-;6532:24;6550:5;6532:24;:::i;:::-;6527:3;6520:37;6455:108;;:::o;6569:179::-;6638:10;6659:46;6701:3;6693:6;6659:46;:::i;:::-;6737:4;6732:3;6728:14;6714:28;;6569:179;;;;:::o;6754:113::-;6824:4;6856;6851:3;6847:14;6839:22;;6754:113;;;:::o;6903:732::-;7022:3;7051:54;7099:5;7051:54;:::i;:::-;7121:86;7200:6;7195:3;7121:86;:::i;:::-;7114:93;;7231:56;7281:5;7231:56;:::i;:::-;7310:7;7341:1;7326:284;7351:6;7348:1;7345:13;7326:284;;;7427:6;7421:13;7454:63;7513:3;7498:13;7454:63;:::i;:::-;7447:70;;7540:60;7593:6;7540:60;:::i;:::-;7530:70;;7386:224;7373:1;7370;7366:9;7361:14;;7326:284;;;7330:14;7626:3;7619:10;;7027:608;;;6903:732;;;;:::o;7641:373::-;7784:4;7822:2;7811:9;7807:18;7799:26;;7871:9;7865:4;7861:20;7857:1;7846:9;7842:17;7835:47;7899:108;8002:4;7993:6;7899:108;:::i;:::-;7891:116;;7641:373;;;;:::o;8020:911::-;8115:6;8123;8131;8139;8147;8196:3;8184:9;8175:7;8171:23;8167:33;8164:120;;;8203:79;;:::i;:::-;8164:120;8323:1;8348:53;8393:7;8384:6;8373:9;8369:22;8348:53;:::i;:::-;8338:63;;8294:117;8450:2;8476:53;8521:7;8512:6;8501:9;8497:22;8476:53;:::i;:::-;8466:63;;8421:118;8578:2;8604:53;8649:7;8640:6;8629:9;8625:22;8604:53;:::i;:::-;8594:63;;8549:118;8706:2;8732:53;8777:7;8768:6;8757:9;8753:22;8732:53;:::i;:::-;8722:63;;8677:118;8834:3;8861:53;8906:7;8897:6;8886:9;8882:22;8861:53;:::i;:::-;8851:63;;8805:119;8020:911;;;;;;;;:::o;8937:169::-;9021:11;9055:6;9050:3;9043:19;9095:4;9090:3;9086:14;9071:29;;8937:169;;;;:::o;9112:231::-;9252:34;9248:1;9240:6;9236:14;9229:58;9321:14;9316:2;9308:6;9304:15;9297:39;9112:231;:::o;9349:366::-;9491:3;9512:67;9576:2;9571:3;9512:67;:::i;:::-;9505:74;;9588:93;9677:3;9588:93;:::i;:::-;9706:2;9701:3;9697:12;9690:19;;9349:366;;;:::o;9721:419::-;9887:4;9925:2;9914:9;9910:18;9902:26;;9974:9;9968:4;9964:20;9960:1;9949:9;9945:17;9938:47;10002:131;10128:4;10002:131;:::i;:::-;9994:139;;9721:419;;;:::o;10146:231::-;10286:34;10282:1;10274:6;10270:14;10263:58;10355:14;10350:2;10342:6;10338:15;10331:39;10146:231;:::o;10383:366::-;10525:3;10546:67;10610:2;10605:3;10546:67;:::i;:::-;10539:74;;10622:93;10711:3;10622:93;:::i;:::-;10740:2;10735:3;10731:12;10724:19;;10383:366;;;:::o;10755:419::-;10921:4;10959:2;10948:9;10944:18;10936:26;;11008:9;11002:4;10998:20;10994:1;10983:9;10979:17;10972:47;11036:131;11162:4;11036:131;:::i;:::-;11028:139;;10755:419;;;:::o;11180:233::-;11320:34;11316:1;11308:6;11304:14;11297:58;11389:16;11384:2;11376:6;11372:15;11365:41;11180:233;:::o;11419:366::-;11561:3;11582:67;11646:2;11641:3;11582:67;:::i;:::-;11575:74;;11658:93;11747:3;11658:93;:::i;:::-;11776:2;11771:3;11767:12;11760:19;;11419:366;;;:::o;11791:419::-;11957:4;11995:2;11984:9;11980:18;11972:26;;12044:9;12038:4;12034:20;12030:1;12019:9;12015:17;12008:47;12072:131;12198:4;12072:131;:::i;:::-;12064:139;;11791:419;;;:::o;12216:180::-;12356:32;12352:1;12344:6;12340:14;12333:56;12216:180;:::o;12402:366::-;12544:3;12565:67;12629:2;12624:3;12565:67;:::i;:::-;12558:74;;12641:93;12730:3;12641:93;:::i;:::-;12759:2;12754:3;12750:12;12743:19;;12402:366;;;:::o;12774:419::-;12940:4;12978:2;12967:9;12963:18;12955:26;;13027:9;13021:4;13017:20;13013:1;13002:9;12998:17;12991:47;13055:131;13181:4;13055:131;:::i;:::-;13047:139;;12774:419;;;:::o;13199:170::-;13339:22;13335:1;13327:6;13323:14;13316:46;13199:170;:::o;13375:366::-;13517:3;13538:67;13602:2;13597:3;13538:67;:::i;:::-;13531:74;;13614:93;13703:3;13614:93;:::i;:::-;13732:2;13727:3;13723:12;13716:19;;13375:366;;;:::o;13747:419::-;13913:4;13951:2;13940:9;13936:18;13928:26;;14000:9;13994:4;13990:20;13986:1;13975:9;13971:17;13964:47;14028:131;14154:4;14028:131;:::i;:::-;14020:139;;13747:419;;;:::o;14172:85::-;14217:7;14246:5;14235:16;;14172:85;;;:::o;14263:86::-;14298:7;14338:4;14331:5;14327:16;14316:27;;14263:86;;;:::o;14355:60::-;14383:3;14404:5;14397:12;;14355:60;;;:::o;14421:154::-;14477:9;14510:59;14526:42;14535:32;14561:5;14535:32;:::i;:::-;14526:42;:::i;:::-;14510:59;:::i;:::-;14497:72;;14421:154;;;:::o;14581:143::-;14674:43;14711:5;14674:43;:::i;:::-;14669:3;14662:56;14581:143;;:::o;14730:234::-;14829:4;14867:2;14856:9;14852:18;14844:26;;14880:77;14954:1;14943:9;14939:17;14930:6;14880:77;:::i;:::-;14730:234;;;;:::o;14970:243::-;15110:34;15106:1;15098:6;15094:14;15087:58;15179:26;15174:2;15166:6;15162:15;15155:51;14970:243;:::o;15219:366::-;15361:3;15382:67;15446:2;15441:3;15382:67;:::i;:::-;15375:74;;15458:93;15547:3;15458:93;:::i;:::-;15576:2;15571:3;15567:12;15560:19;;15219:366;;;:::o;15591:419::-;15757:4;15795:2;15784:9;15780:18;15772:26;;15844:9;15838:4;15834:20;15830:1;15819:9;15815:17;15808:47;15872:131;15998:4;15872:131;:::i;:::-;15864:139;;15591:419;;;:::o;16016:170::-;16156:22;16152:1;16144:6;16140:14;16133:46;16016:170;:::o;16192:366::-;16334:3;16355:67;16419:2;16414:3;16355:67;:::i;:::-;16348:74;;16431:93;16520:3;16431:93;:::i;:::-;16549:2;16544:3;16540:12;16533:19;;16192:366;;;:::o;16564:419::-;16730:4;16768:2;16757:9;16753:18;16745:26;;16817:9;16811:4;16807:20;16803:1;16792:9;16788:17;16781:47;16845:131;16971:4;16845:131;:::i;:::-;16837:139;;16564:419;;;:::o;16989:182::-;17129:34;17125:1;17117:6;17113:14;17106:58;16989:182;:::o;17177:366::-;17319:3;17340:67;17404:2;17399:3;17340:67;:::i;:::-;17333:74;;17416:93;17505:3;17416:93;:::i;:::-;17534:2;17529:3;17525:12;17518:19;;17177:366;;;:::o;17549:419::-;17715:4;17753:2;17742:9;17738:18;17730:26;;17802:9;17796:4;17792:20;17788:1;17777:9;17773:17;17766:47;17830:131;17956:4;17830:131;:::i;:::-;17822:139;;17549:419;;;:::o;17974:220::-;18114:34;18110:1;18102:6;18098:14;18091:58;18183:3;18178:2;18170:6;18166:15;18159:28;17974:220;:::o;18200:366::-;18342:3;18363:67;18427:2;18422:3;18363:67;:::i;:::-;18356:74;;18439:93;18528:3;18439:93;:::i;:::-;18557:2;18552:3;18548:12;18541:19;;18200:366;;;:::o;18572:419::-;18738:4;18776:2;18765:9;18761:18;18753:26;;18825:9;18819:4;18815:20;18811:1;18800:9;18796:17;18789:47;18853:131;18979:4;18853:131;:::i;:::-;18845:139;;18572:419;;;:::o;18997:118::-;19084:24;19102:5;19084:24;:::i;:::-;19079:3;19072:37;18997:118;;:::o;19121:222::-;19214:4;19252:2;19241:9;19237:18;19229:26;;19265:71;19333:1;19322:9;19318:17;19309:6;19265:71;:::i;:::-;19121:222;;;;:::o;19349:143::-;19406:5;19437:6;19431:13;19422:22;;19453:33;19480:5;19453:33;:::i;:::-;19349:143;;;;:::o;19498:351::-;19568:6;19617:2;19605:9;19596:7;19592:23;19588:32;19585:119;;;19623:79;;:::i;:::-;19585:119;19743:1;19768:64;19824:7;19815:6;19804:9;19800:22;19768:64;:::i;:::-;19758:74;;19714:128;19498:351;;;;:::o;19855:166::-;19995:18;19991:1;19983:6;19979:14;19972:42;19855:166;:::o;20027:366::-;20169:3;20190:67;20254:2;20249:3;20190:67;:::i;:::-;20183:74;;20266:93;20355:3;20266:93;:::i;:::-;20384:2;20379:3;20375:12;20368:19;;20027:366;;;:::o;20399:419::-;20565:4;20603:2;20592:9;20588:18;20580:26;;20652:9;20646:4;20642:20;20638:1;20627:9;20623:17;20616:47;20680:131;20806:4;20680:131;:::i;:::-;20672:139;;20399:419;;;:::o;20824:332::-;20945:4;20983:2;20972:9;20968:18;20960:26;;20996:71;21064:1;21053:9;21049:17;21040:6;20996:71;:::i;:::-;21077:72;21145:2;21134:9;21130:18;21121:6;21077:72;:::i;:::-;20824:332;;;;;:::o;21162:775::-;21395:4;21433:3;21422:9;21418:19;21410:27;;21447:71;21515:1;21504:9;21500:17;21491:6;21447:71;:::i;:::-;21528:72;21596:2;21585:9;21581:18;21572:6;21528:72;:::i;:::-;21610;21678:2;21667:9;21663:18;21654:6;21610:72;:::i;:::-;21692;21760:2;21749:9;21745:18;21736:6;21692:72;:::i;:::-;21774:73;21842:3;21831:9;21827:19;21818:6;21774:73;:::i;:::-;21857;21925:3;21914:9;21910:19;21901:6;21857:73;:::i;:::-;21162:775;;;;;;;;;:::o;21943:442::-;22092:4;22130:2;22119:9;22115:18;22107:26;;22143:71;22211:1;22200:9;22196:17;22187:6;22143:71;:::i;:::-;22224:72;22292:2;22281:9;22277:18;22268:6;22224:72;:::i;:::-;22306;22374:2;22363:9;22359:18;22350:6;22306:72;:::i;:::-;21943:442;;;;;;:::o;22391:225::-;22531:34;22527:1;22519:6;22515:14;22508:58;22600:8;22595:2;22587:6;22583:15;22576:33;22391:225;:::o;22622:366::-;22764:3;22785:67;22849:2;22844:3;22785:67;:::i;:::-;22778:74;;22861:93;22950:3;22861:93;:::i;:::-;22979:2;22974:3;22970:12;22963:19;;22622:366;;;:::o;22994:419::-;23160:4;23198:2;23187:9;23183:18;23175:26;;23247:9;23241:4;23237:20;23233:1;23222:9;23218:17;23211:47;23275:131;23401:4;23275:131;:::i;:::-;23267:139;;22994:419;;;:::o;23419:122::-;23492:24;23510:5;23492:24;:::i;:::-;23485:5;23482:35;23472:63;;23531:1;23528;23521:12;23472:63;23419:122;:::o;23547:143::-;23604:5;23635:6;23629:13;23620:22;;23651:33;23678:5;23651:33;:::i;:::-;23547:143;;;;:::o;23696:351::-;23766:6;23815:2;23803:9;23794:7;23790:23;23786:32;23783:119;;;23821:79;;:::i;:::-;23783:119;23941:1;23966:64;24022:7;24013:6;24002:9;23998:22;23966:64;:::i;:::-;23956:74;;23912:128;23696:351;;;;:::o;24053:233::-;24193:34;24189:1;24181:6;24177:14;24170:58;24262:16;24257:2;24249:6;24245:15;24238:41;24053:233;:::o;24292:366::-;24434:3;24455:67;24519:2;24514:3;24455:67;:::i;:::-;24448:74;;24531:93;24620:3;24531:93;:::i;:::-;24649:2;24644:3;24640:12;24633:19;;24292:366;;;:::o;24664:419::-;24830:4;24868:2;24857:9;24853:18;24845:26;;24917:9;24911:4;24907:20;24903:1;24892:9;24888:17;24881:47;24945:131;25071:4;24945:131;:::i;:::-;24937:139;;24664:419;;;:::o;25089:228::-;25229:34;25225:1;25217:6;25213:14;25206:58;25298:11;25293:2;25285:6;25281:15;25274:36;25089:228;:::o;25323:366::-;25465:3;25486:67;25550:2;25545:3;25486:67;:::i;:::-;25479:74;;25562:93;25651:3;25562:93;:::i;:::-;25680:2;25675:3;25671:12;25664:19;;25323:366;;;:::o;25695:419::-;25861:4;25899:2;25888:9;25884:18;25876:26;;25948:9;25942:4;25938:20;25934:1;25923:9;25919:17;25912:47;25976:131;26102:4;25976:131;:::i;:::-;25968:139;;25695:419;;;:::o;26120:230::-;26260:34;26256:1;26248:6;26244:14;26237:58;26329:13;26324:2;26316:6;26312:15;26305:38;26120:230;:::o;26356:366::-;26498:3;26519:67;26583:2;26578:3;26519:67;:::i;:::-;26512:74;;26595:93;26684:3;26595:93;:::i;:::-;26713:2;26708:3;26704:12;26697:19;;26356:366;;;:::o;26728:419::-;26894:4;26932:2;26921:9;26917:18;26909:26;;26981:9;26975:4;26971:20;26967:1;26956:9;26952:17;26945:47;27009:131;27135:4;27009:131;:::i;:::-;27001:139;;26728:419;;;:::o;27153:182::-;27293:34;27289:1;27281:6;27277:14;27270:58;27153:182;:::o;27341:366::-;27483:3;27504:67;27568:2;27563:3;27504:67;:::i;:::-;27497:74;;27580:93;27669:3;27580:93;:::i;:::-;27698:2;27693:3;27689:12;27682:19;;27341:366;;;:::o;27713:419::-;27879:4;27917:2;27906:9;27902:18;27894:26;;27966:9;27960:4;27956:20;27952:1;27941:9;27937:17;27930:47;27994:131;28120:4;27994:131;:::i;:::-;27986:139;;27713:419;;;:::o;28138:232::-;28278:34;28274:1;28266:6;28262:14;28255:58;28347:15;28342:2;28334:6;28330:15;28323:40;28138:232;:::o;28376:366::-;28518:3;28539:67;28603:2;28598:3;28539:67;:::i;:::-;28532:74;;28615:93;28704:3;28615:93;:::i;:::-;28733:2;28728:3;28724:12;28717:19;;28376:366;;;:::o;28748:419::-;28914:4;28952:2;28941:9;28937:18;28929:26;;29001:9;28995:4;28991:20;28987:1;28976:9;28972:17;28965:47;29029:131;29155:4;29029:131;:::i;:::-;29021:139;;28748:419;;;:::o;29173:332::-;29294:4;29332:2;29321:9;29317:18;29309:26;;29345:71;29413:1;29402:9;29398:17;29389:6;29345:71;:::i;:::-;29426:72;29494:2;29483:9;29479:18;29470:6;29426:72;:::i;:::-;29173:332;;;;;:::o;29511:98::-;29562:6;29596:5;29590:12;29580:22;;29511:98;;;:::o;29615:147::-;29716:11;29753:3;29738:18;;29615:147;;;;:::o;29768:248::-;29850:1;29860:113;29874:6;29871:1;29868:13;29860:113;;;29959:1;29954:3;29950:11;29944:18;29940:1;29935:3;29931:11;29924:39;29896:2;29893:1;29889:10;29884:15;;29860:113;;;30007:1;29998:6;29993:3;29989:16;29982:27;29830:186;29768:248;;;:::o;30022:386::-;30126:3;30154:38;30186:5;30154:38;:::i;:::-;30208:88;30289:6;30284:3;30208:88;:::i;:::-;30201:95;;30305:65;30363:6;30358:3;30351:4;30344:5;30340:16;30305:65;:::i;:::-;30395:6;30390:3;30386:16;30379:23;;30130:278;30022:386;;;;:::o;30414:271::-;30544:3;30566:93;30655:3;30646:6;30566:93;:::i;:::-;30559:100;;30676:3;30669:10;;30414:271;;;;:::o;30691:179::-;30831:31;30827:1;30819:6;30815:14;30808:55;30691:179;:::o;30876:366::-;31018:3;31039:67;31103:2;31098:3;31039:67;:::i;:::-;31032:74;;31115:93;31204:3;31115:93;:::i;:::-;31233:2;31228:3;31224:12;31217:19;;30876:366;;;:::o;31248:419::-;31414:4;31452:2;31441:9;31437:18;31429:26;;31501:9;31495:4;31491:20;31487:1;31476:9;31472:17;31465:47;31529:131;31655:4;31529:131;:::i;:::-;31521:139;;31248:419;;;:::o;31673:99::-;31725:6;31759:5;31753:12;31743:22;;31673:99;;;:::o;31778:377::-;31866:3;31894:39;31927:5;31894:39;:::i;:::-;31949:71;32013:6;32008:3;31949:71;:::i;:::-;31942:78;;32029:65;32087:6;32082:3;32075:4;32068:5;32064:16;32029:65;:::i;:::-;32119:29;32141:6;32119:29;:::i;:::-;32114:3;32110:39;32103:46;;31870:285;31778:377;;;;:::o;32161:313::-;32274:4;32312:2;32301:9;32297:18;32289:26;;32361:9;32355:4;32351:20;32347:1;32336:9;32332:17;32325:47;32389:78;32462:4;32453:6;32389:78;:::i;:::-;32381:86;;32161:313;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2020000","executionCost":"infinite","totalCost":"infinite"},"external":{"auctionImplementation()":"2514","auctions(uint256)":"5067","createAuction(address,uint256,address,uint256,uint256)":"infinite","getAuctions()":"infinite","initialize(address,address)":"infinite","owner()":"2566","priceOracle()":"2515","proxiableUUID()":"infinite","renounceOwnership()":"30420","transferOwnership(address)":"30854","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"auctionImplementation()":"6a7f3f6c","auctions(uint256)":"571a26a0","createAuction(address,uint256,address,uint256,uint256)":"f2df5047","getAuctions()":"d7c06919","initialize(address,address)":"485cc955","owner()":"8da5cb5b","priceOracle()":"2630c12f","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_auctionImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAuction(address,uint256,address,uint256,uint256)\":{\"notice\":\"\\u521b\\u5efa\\u65b0\\u7684\\u62cd\\u5356\\u5408\\u7ea6\"},\"getAuctions()\":{\"notice\":\"\\u83b7\\u53d6\\u6240\\u6709\\u62cd\\u5356\\u5408\\u7ea6\\u5730\\u5740\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AuctionFactory.sol\":\"AuctionFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Create2} from \\\"../utils/Create2.sol\\\";\\nimport {Errors} from \\\"../utils/Errors.sol\\\";\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n */\\nlibrary Clones {\\n    error CloneArgumentsTooLong();\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        return clone(implementation, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\\n     * to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function clone(address implementation, uint256 value) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(value, 0x09, 0x37)\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        return cloneDeterministic(implementation, salt, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\\n     * a `value` parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneDeterministic(\\n        address implementation,\\n        bytes32 salt,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(value, 0x09, 0x37, salt)\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\\n     * access the arguments within the implementation, use {fetchCloneArgs}.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\\n        return cloneWithImmutableArgs(implementation, args, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\\n     * parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        if (address(this).balance < value) {\\n            revert Errors.InsufficientBalance(address(this).balance, value);\\n        }\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        assembly (\\\"memory-safe\\\") {\\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\\n        }\\n        if (instance == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\\n     * access the arguments within the implementation, use {fetchCloneArgs}.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\\n     * at the same address.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     */\\n    function cloneDeterministicWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt\\n    ) internal returns (address instance) {\\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\\n     * but with a `value` parameter to send native currency to the new contract.\\n     *\\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\\n     *\\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\\n     */\\n    function cloneDeterministicWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt,\\n        uint256 value\\n    ) internal returns (address instance) {\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        return Create2.deploy(value, salt, bytecode);\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\\n     */\\n    function predictDeterministicAddressWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\\n     */\\n    function predictDeterministicAddressWithImmutableArgs(\\n        address implementation,\\n        bytes memory args,\\n        bytes32 salt\\n    ) internal view returns (address predicted) {\\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\\n    }\\n\\n    /**\\n     * @dev Get the immutable args attached to a clone.\\n     *\\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\\n     *   function will return an empty array.\\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\\n     *   creation.\\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\\n     *   function should only be used to check addresses that are known to be clones.\\n     */\\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\\n        assembly (\\\"memory-safe\\\") {\\n            extcodecopy(instance, add(result, 32), 45, mload(result))\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\\n     *\\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\\n     * abi.encodePacked is more expensive but also more portable and easier to review.\\n     *\\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\\n     */\\n    function _cloneCodeWithImmutableArgs(\\n        address implementation,\\n        bytes memory args\\n    ) private pure returns (bytes memory) {\\n        if (args.length > 24531) revert CloneArgumentsTooLong();\\n        return\\n            abi.encodePacked(\\n                hex\\\"61\\\",\\n                uint16(args.length + 45),\\n                hex\\\"3d81600a3d39f3363d3d373d3d3d363d73\\\",\\n                implementation,\\n                hex\\\"5af43d82803e903d91602b57fd5bf3\\\",\\n                args\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Errors} from \\\"./Errors.sol\\\";\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev There's no code to deploy.\\n     */\\n    error Create2EmptyBytecode();\\n\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        if (address(this).balance < amount) {\\n            revert Errors.InsufficientBalance(address(this).balance, amount);\\n        }\\n        if (bytecode.length == 0) {\\n            revert Create2EmptyBytecode();\\n        }\\n        assembly (\\\"memory-safe\\\") {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n            // if no address was created, and returndata is not empty, bubble revert\\n            if and(iszero(addr), not(iszero(returndatasize()))) {\\n                let p := mload(0x40)\\n                returndatacopy(p, 0, returndatasize())\\n                revert(p, returndatasize())\\n            }\\n        }\\n        if (addr == address(0)) {\\n            revert Errors.FailedDeployment();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of common custom errors used in multiple contracts\\n *\\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\\n * It is recommended to avoid relying on the error API for critical functionality.\\n *\\n * _Available since v5.1._\\n */\\nlibrary Errors {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error InsufficientBalance(uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedCall();\\n\\n    /**\\n     * @dev The deployment failed.\\n     */\\n    error FailedDeployment();\\n\\n    /**\\n     * @dev A necessary precompile is missing.\\n     */\\n    error MissingPrecompile(address);\\n}\\n\",\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./PriceOracle.sol\\\";\\n\\ncontract Auction is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\n    \\n    struct AuctionItem {\\n        // \\u62cd\\u5356\\u57fa\\u672c\\u4fe1\\u606f\\u5b57\\u6bb5\\n        address nftContract;     // NFT \\u5408\\u7ea6\\u5730\\u5740\\n        uint256 tokenId;         // NFT \\u4ee3\\u5e01 ID\\n        address seller;          // \\u5356\\u5bb6\\u5730\\u5740\\n        uint256 startTime;       // \\u62cd\\u5356\\u5f00\\u59cb\\u65f6\\u95f4\\n        uint256 endTime;         // \\u62cd\\u5356\\u7ed3\\u675f\\u65f6\\u95f4\\n        bool ended;              // \\u62cd\\u5356\\u662f\\u5426\\u7ed3\\u675f\\n    }\\n\\n    struct Bid {\\n        // \\u51fa\\u4ef7\\u4fe1\\u606f\\u5b57\\u6bb5\\n        address bidder;          // \\u51fa\\u4ef7\\u4eba\\u5730\\u5740\\n        address token;           // \\u51fa\\u4ef7\\u4f7f\\u7528\\u7684\\u4ee3\\u5e01\\u5730\\u5740 (ddress(0) for ETH)\\n        uint256 amount;          // \\u51fa\\u4ef7\\u91d1\\u989d(\\u7f8e\\u5143\\u4ef7\\u503c)\\n        uint256 timestamp;       // \\u51fa\\u4ef7\\u65f6\\u95f4\\u6233\\n    }\\n\\n    Bid public highestBid;              // \\u5f53\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7\\n    AuctionItem public auctionItem;     // \\u5f53\\u524d\\u62cd\\u5356\\u9879\\u76ee\\u4fe1\\u606f\\n    PriceOracle public priceOracle;     // \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5408\\u7ea6\\u5730\\u5740\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    /**\\n     * \\u521d\\u59cb\\u5316\\u62cd\\u5356\\u5408\\u7ea6\\n     */\\n    function initialize(\\n        address _nftContract,\\n        uint256 _tokenId,\\n        address _seller,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        address _priceOracle) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n\\n        // \\u521d\\u59cb\\u5316\\u62cd\\u5356\\u5408\\u7ea6\\u72b6\\u6001\\n        require(_nftContract != address(0), \\\"Invalid NFT contract address\\\");\\n        require(_seller != address(0), \\\"Invalid seller address\\\");\\n        require(_startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start time\\\");\\n        require(_priceOracle != address(0), \\\"Invalid price oracle address\\\");\\n\\n        auctionItem = AuctionItem({\\n            nftContract: _nftContract,\\n            tokenId: _tokenId,\\n            seller: _seller,\\n            startTime: _startTime,\\n            endTime: _endTime,\\n            ended: false\\n        }); \\n        priceOracle = PriceOracle(_priceOracle);\\n    }\\n\\n    /**\\n     * \\u51fa\\u4ef7\\u51fd\\u6570\\uff0c\\u652f\\u6301\\u4ee5\\u592a\\u574a\\u548c ERC20 \\u4ee3\\u5e01\\u51fa\\u4ef7\\n     */\\n    function placeBid(address _token, uint256 _amount) external payable {\\n        require(block.timestamp >= auctionItem.startTime, \\\"Auction not started yet\\\");\\n        require(block.timestamp <= auctionItem.endTime, \\\"Auction already ended\\\");\\n        require(!auctionItem.ended, \\\"Auction has ended\\\");\\n        require(_amount > 0, \\\"Bid amount must be greater than zero\\\");\\n\\n        // \\u7ade\\u62cd\\u903b\\u8f91\\n        uint256 usdAmount;\\n        if (_token == address(0)) {\\n            // \\u4ee5\\u592a\\u574a\\u51fa\\u4ef7\\u903b\\u8f91\\n            require(msg.value == _amount, \\\"ETH amount mismatch\\\");\\n            usdAmount = priceOracle.convertToUSD(address(0), _amount);\\n        } else {\\n            // ERC20 \\u4ee3\\u5e01\\u51fa\\u4ef7\\u903b\\u8f91\\n            require(msg.value == 0, \\\"ETH not accepted for ERC20 bids\\\");\\n            IERC20(_token).transferFrom(msg.sender, address(this), _amount);\\n            usdAmount = priceOracle.convertToUSD(_token, _amount);\\n        }\\n        // \\u68c0\\u67e5\\u662f\\u5426\\u9ad8\\u4e8e\\u5f53\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7 (\\u6309\\u7f8e\\u5143\\u4ef7\\u503c\\u6bd4\\u8f83)\\n        uint256 currentHighestUSD = 0;\\n        if (highestBid.amount > 0) {\\n            currentHighestUSD = priceOracle.convertToUSD(highestBid.token, highestBid.amount);\\n        }\\n        require(usdAmount > currentHighestUSD, \\\"Bid must be higher than current highest bid\\\");\\n\\n        // \\u9000\\u8fd8\\u4e4b\\u524d\\u6700\\u9ad8\\u51fa\\u4ef7\\n        if (highestBid.bidder != address(0)) {\\n            if (highestBid.token == address(0)) {\\n                // \\u9000\\u8fd8 ETH\\n                payable(highestBid.bidder).transfer(highestBid.amount);\\n            } else {\\n                //\\u9000\\u8fd8 ERC20 \\u4ee3\\u5e01\\n                IERC20(highestBid.token).transfer(highestBid.bidder, highestBid.amount);\\n            }\\n        }\\n\\n        // \\u66f4\\u65b0\\u6700\\u9ad8\\u51fa\\u4ef7\\n        highestBid = Bid({\\n            bidder: msg.sender,\\n            token: _token,\\n            amount: _amount,\\n            timestamp: block.timestamp\\n        });\\n    }\\n\\n    /**\\n     * \\u7ed3\\u675f\\u62cd\\u5356\\n     */\\n    function endAuction() external {\\n        require(!auctionItem.ended, \\\"Auction already ended\\\");\\n        require(block.timestamp >= auctionItem.endTime || (block.timestamp >= auctionItem.startTime && highestBid.amount > 0), \\n                \\\"Auction not ended yet\\\");   \\n        auctionItem.ended = true;\\n        // \\u5904\\u7406\\u62cd\\u5356\\u7ed3\\u679c\\n        if (highestBid.bidder != address(0)) {\\n            // \\u8f6c\\u79fb NFT \\u7ed9\\u6700\\u9ad8\\u51fa\\u4ef7\\u8005\\n            IERC721(auctionItem.nftContract).transferFrom(address(this), highestBid.bidder, auctionItem.tokenId);\\n            // \\u5c06\\u51fa\\u4ef7\\u91d1\\u989d\\u8f6c\\u7ed9\\u5356\\u5bb6\\n            if (highestBid.token == address(0)) {\\n                payable(auctionItem.seller).transfer(highestBid.amount);\\n            } else {\\n                IERC20(highestBid.token).transfer(auctionItem.seller, highestBid.amount);\\n            }\\n        } else {\\n            // \\u65e0\\u4eba\\u51fa\\u4ef7\\uff0cNFT \\u5f52\\u8fd8\\u7ed9\\u5356\\u5bb6\\n            IERC721(auctionItem.nftContract).transferFrom(address(this), auctionItem.seller, auctionItem.tokenId);\\n        }\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u6700\\u9ad8\\u51fa\\u4ef7\\n     */\\n    function getHighestBid() external view returns (Bid memory) {\\n        return highestBid;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u62cd\\u5356\\u9879\\u76ee\\u4fe1\\u606f\\n     */\\n    function getAuctionItem() external view returns (AuctionItem memory) {\\n        return auctionItem;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal virtual override onlyOwner {}\\n\\n    // \\u63a5\\u53d7\\u4ee5\\u592a\\u574a\\u8f6c\\u8d26\\n    receive() external payable {}\\n}   \",\"keccak256\":\"0x466126d9fda3c5024b4ceaeefa68f0e544b829b010dc6bc3fa2fa1231db99403\",\"license\":\"MIT\"},\"contracts/AuctionFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"./Auction.sol\\\";\\n\\ncontract AuctionFactory is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\n    address[] public auctions;  // \\u5b58\\u50a8\\u6240\\u6709\\u62cd\\u5356\\u5408\\u7ea6\\u5730\\u5740\\n    address public priceOracle;         // \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5408\\u7ea6\\u5730\\u5740\\n    address public auctionImplementation; // \\u62cd\\u5356\\u5408\\u7ea6\\u5b9e\\u73b0\\u5730\\u5740\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _auctionImplementation, address _priceOracle) public initializer {\\n        __Ownable_init();\\n        __UUPSUpgradeable_init();\\n        require(_auctionImplementation != address(0), \\\"Invalid auction implementation\\\");\\n        require(_priceOracle != address(0), \\\"Invalid price oracle\\\");\\n\\n        auctionImplementation = _auctionImplementation;\\n        priceOracle = _priceOracle;\\n    }\\n\\n    /**\\n     * \\u521b\\u5efa\\u65b0\\u7684\\u62cd\\u5356\\u5408\\u7ea6\\n     */\\n    function createAuction(\\n        address _nftContract,\\n        uint256 _tokenId,\\n        address _seller,\\n        uint256 _startTime,\\n        uint256 _endTime\\n    ) external onlyOwner returns (address) {\\n        require(_nftContract != address(0), \\\"Invalid NFT contract\\\");\\n        require(_startTime >= block.timestamp, \\\"Start time must be in the future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start time\\\");\\n        \\n        require(IERC721(_nftContract).ownerOf(_tokenId) == msg.sender, \\\"Not owner of NFT\\\");\\n        \\n        IERC721(_nftContract).approve(address(this), _tokenId);\\n        \\n        address auction = Clones.clone(auctionImplementation);\\n        \\n        Auction(payable(auction)).initialize(\\n            _nftContract,\\n            _tokenId,\\n            _seller,\\n            _startTime,\\n            _endTime,\\n            priceOracle\\n        );\\n        \\n        IERC721(_nftContract).transferFrom(msg.sender, auction, _tokenId);\\n        \\n        auctions.push(auction);\\n        return auction;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u6240\\u6709\\u62cd\\u5356\\u5408\\u7ea6\\u5730\\u5740\\n     */\\n    function getAuctions() external view returns (address[] memory) {\\n        return auctions;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\n}\",\"keccak256\":\"0x9005d4f045fc9f41c3010d45ac7ae38ff43d4ef47fdbba159690cdfb938f0cba\",\"license\":\"MIT\"},\"contracts/PriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceOracle {\\n    mapping(address => AggregatorV3Interface) public priceFeeds;\\n    \\n    // \\u6a21\\u62df\\u4ef7\\u683c\\u5b58\\u50a8\\uff08\\u7528\\u4e8e\\u6d4b\\u8bd5\\uff09\\n    mapping(uint256 => uint256) public testEthPrices;\\n    mapping(address => uint256) public testTokenPrices;\\n\\n    constructor(address ethUsdFeed) {\\n        // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n        priceFeeds[address(0)] = AggregatorV3Interface(ethUsdFeed); // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n    }\\n\\n    /**\\n     * \\u8bbe\\u7f6e\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5730\\u5740\\n     */\\n    function setPriceFeed(address token, address feed) external {\\n        priceFeeds[token] = AggregatorV3Interface(feed);\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n     */\\n    function getLatestPrice(address token) external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[token];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for this token\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6 ETH/USD \\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n    */\\n    function getEthUsdPrice() external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[address(0)];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for ETH\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u5c06\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\u8f6c\\u6362\\u4e3a USD \\u4ef7\\u503c\\n     */\\n    function convertToUSD(address token, uint256 amount) external view returns (uint256) {\\n        if (token == address(0)) {\\n            // ETH \\u76f4\\u63a5\\u8fd4\\u56de USD \\u4ef7\\u503c\\n            int256 ethPrice = this.getEthUsdPrice();\\n            require(ethPrice > 0, \\\"Invalid ETH price\\\");\\n            return (amount * uint256(ethPrice)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        } else {\\n            // \\u5176\\u4ed6\\u4ee3\\u5e01\\u9700\\u8981\\u5148\\u83b7\\u53d6\\u5176\\u4ef7\\u683c\\n            int256 price = this.getLatestPrice(token);\\n            require(price > 0, \\\"Invalid price\\\");\\n            return (amount * uint256(price)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        }\\n    }\\n\\n    /**\\n     * @dev \\u8bbe\\u7f6e\\u6d4b\\u8bd5\\u4ef7\\u683c\\uff08\\u4ec5\\u7528\\u4e8e\\u6d4b\\u8bd5\\u73af\\u5883\\uff09\\n     */\\n    function setTestPrice(address token, uint256 price) external {\\n        if (token == address(0)) {\\n            testEthPrices[block.chainid] = price;\\n        } else {\\n            testTokenPrices[token] = price;\\n        }\\n    }\\n}\",\"keccak256\":\"0x5da541360795204931c7e6bf78f8670d5384f9d154a4f9863489e05b575d0eff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":551,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":554,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1230,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":57,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":177,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":533,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":849,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"__gap","offset":0,"slot":"151","type":"t_array(t_uint256)50_storage"},{"astId":2547,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"auctions","offset":0,"slot":"201","type":"t_array(t_address)dyn_storage"},{"astId":2549,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"priceOracle","offset":0,"slot":"202","type":"t_address"},{"astId":2551,"contract":"contracts/AuctionFactory.sol:AuctionFactory","label":"auctionImplementation","offset":0,"slot":"203","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"createAuction(address,uint256,address,uint256,uint256)":{"notice":"创建新的拍卖合约"},"getAuctions()":{"notice":"获取所有拍卖合约地址"}},"version":1}}},"contracts/PriceOracle.sol":{"PriceOracle":{"abi":[{"inputs":[{"internalType":"address","name":"ethUsdFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertToUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEthUsdPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getLatestPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"priceFeeds","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"feed","type":"address"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setTestPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"testEthPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"testTokenPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"setTestPrice(address,uint256)":{"details":"设置测试价格（仅用于测试环境）"}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2765":{"entryPoint":null,"id":2765,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":280,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":218,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":181,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":236,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1199:20","nodeType":"YulBlock","src":"0:1199:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"922:274:20","nodeType":"YulBlock","src":"922:274:20","statements":[{"body":{"nativeSrc":"968:83:20","nodeType":"YulBlock","src":"968:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:20","nodeType":"YulIdentifier","src":"970:77:20"},"nativeSrc":"970:79:20","nodeType":"YulFunctionCall","src":"970:79:20"},"nativeSrc":"970:79:20","nodeType":"YulExpressionStatement","src":"970:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:20","nodeType":"YulIdentifier","src":"943:7:20"},{"name":"headStart","nativeSrc":"952:9:20","nodeType":"YulIdentifier","src":"952:9:20"}],"functionName":{"name":"sub","nativeSrc":"939:3:20","nodeType":"YulIdentifier","src":"939:3:20"},"nativeSrc":"939:23:20","nodeType":"YulFunctionCall","src":"939:23:20"},{"kind":"number","nativeSrc":"964:2:20","nodeType":"YulLiteral","src":"964:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:20","nodeType":"YulIdentifier","src":"935:3:20"},"nativeSrc":"935:32:20","nodeType":"YulFunctionCall","src":"935:32:20"},"nativeSrc":"932:119:20","nodeType":"YulIf","src":"932:119:20"},{"nativeSrc":"1061:128:20","nodeType":"YulBlock","src":"1061:128:20","statements":[{"nativeSrc":"1076:15:20","nodeType":"YulVariableDeclaration","src":"1076:15:20","value":{"kind":"number","nativeSrc":"1090:1:20","nodeType":"YulLiteral","src":"1090:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:20","nodeType":"YulTypedName","src":"1080:6:20","type":""}]},{"nativeSrc":"1105:74:20","nodeType":"YulAssignment","src":"1105:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:20","nodeType":"YulIdentifier","src":"1151:9:20"},{"name":"offset","nativeSrc":"1162:6:20","nodeType":"YulIdentifier","src":"1162:6:20"}],"functionName":{"name":"add","nativeSrc":"1147:3:20","nodeType":"YulIdentifier","src":"1147:3:20"},"nativeSrc":"1147:22:20","nodeType":"YulFunctionCall","src":"1147:22:20"},{"name":"dataEnd","nativeSrc":"1171:7:20","nodeType":"YulIdentifier","src":"1171:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:20","nodeType":"YulIdentifier","src":"1115:31:20"},"nativeSrc":"1115:64:20","nodeType":"YulFunctionCall","src":"1115:64:20"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:20","nodeType":"YulIdentifier","src":"1105:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:20","nodeType":"YulTypedName","src":"892:9:20","type":""},{"name":"dataEnd","nativeSrc":"903:7:20","nodeType":"YulTypedName","src":"903:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:20","nodeType":"YulTypedName","src":"915:6:20","type":""}],"src":"845:351:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610fcd380380610fcd83398181016040528101906100329190610118565b806000808073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610145565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e5826100ba565b9050919050565b6100f5816100da565b811461010057600080fd5b50565b600081519050610112816100ec565b92915050565b60006020828403121561012e5761012d6100b5565b5b600061013c84828501610103565b91505092915050565b610e79806101546000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639dcb511a1161005b5780639dcb511a14610125578063a0a8045e14610155578063d2fe163114610173578063f08a25ed146101a357610088565b806316345f181461008d57806323ebc76e146100bd578063332c6397146100ed57806376e1128614610109575b600080fd5b6100a760048036038101906100a2919061084e565b6101d3565b6040516100b49190610894565b60405180910390f35b6100d760048036038101906100d291906108e5565b610327565b6040516100e49190610921565b60405180910390f35b6101076004803603810190610102919061093c565b61033f565b005b610123600480360381019061011e919061097c565b6103d9565b005b61013f600480360381019061013a919061084e565b61045a565b60405161014c9190610a1b565b60405180910390f35b61015d61048d565b60405161016a9190610894565b60405180910390f35b61018d6004803603810190610188919061084e565b6105df565b60405161019a9190610921565b60405180910390f35b6101bd60048036038101906101b8919061093c565b6105f7565b6040516101ca9190610921565b60405180910390f35b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610ab9565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610b5c565b5050509150508092505050919050565b60016020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610390578060016000468152602001908152602001600020819055506103d5565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000808073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610c23565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610b5c565b505050915050809250505090565b60026020528060005260406000206000915090505481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107055760003073ffffffffffffffffffffffffffffffffffffffff1663a0a8045e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610c43565b9050600081136106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990610cbc565b60405180910390fd5b6305f5e10081846106f39190610d0b565b6106fd9190610d7c565b9150506107e5565b60003073ffffffffffffffffffffffffffffffffffffffff166316345f18856040518263ffffffff1660e01b81526004016107409190610dbc565b602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190610c43565b9050600081136107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90610e23565b60405180910390fd5b6305f5e10081846107d79190610d0b565b6107e19190610d7c565b9150505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b811461083657600080fd5b50565b60008135905061084881610822565b92915050565b600060208284031215610864576108636107eb565b5b600061087284828501610839565b91505092915050565b6000819050919050565b61088e8161087b565b82525050565b60006020820190506108a96000830184610885565b92915050565b6000819050919050565b6108c2816108af565b81146108cd57600080fd5b50565b6000813590506108df816108b9565b92915050565b6000602082840312156108fb576108fa6107eb565b5b6000610909848285016108d0565b91505092915050565b61091b816108af565b82525050565b60006020820190506109366000830184610912565b92915050565b60008060408385031215610953576109526107eb565b5b600061096185828601610839565b9250506020610972858286016108d0565b9150509250929050565b60008060408385031215610993576109926107eb565b5b60006109a185828601610839565b92505060206109b285828601610839565b9150509250929050565b6000819050919050565b60006109e16109dc6109d7846107f0565b6109bc565b6107f0565b9050919050565b60006109f3826109c6565b9050919050565b6000610a05826109e8565b9050919050565b610a15816109fa565b82525050565b6000602082019050610a306000830184610a0c565b92915050565b600082825260208201905092915050565b7f50726963652066656564206e6f742073657420666f72207468697320746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610aa3602183610a36565b9150610aae82610a47565b604082019050919050565b60006020820190508181036000830152610ad281610a96565b9050919050565b600069ffffffffffffffffffff82169050919050565b610af881610ad9565b8114610b0357600080fd5b50565b600081519050610b1581610aef565b92915050565b610b248161087b565b8114610b2f57600080fd5b50565b600081519050610b4181610b1b565b92915050565b600081519050610b56816108b9565b92915050565b600080600080600060a08688031215610b7857610b776107eb565b5b6000610b8688828901610b06565b9550506020610b9788828901610b32565b9450506040610ba888828901610b47565b9350506060610bb988828901610b47565b9250506080610bca88828901610b06565b9150509295509295909350565b7f50726963652066656564206e6f742073657420666f7220455448000000000000600082015250565b6000610c0d601a83610a36565b9150610c1882610bd7565b602082019050919050565b60006020820190508181036000830152610c3c81610c00565b9050919050565b600060208284031215610c5957610c586107eb565b5b6000610c6784828501610b32565b91505092915050565b7f496e76616c696420455448207072696365000000000000000000000000000000600082015250565b6000610ca6601183610a36565b9150610cb182610c70565b602082019050919050565b60006020820190508181036000830152610cd581610c99565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d16826108af565b9150610d21836108af565b9250828202610d2f816108af565b91508282048414831517610d4657610d45610cdc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d87826108af565b9150610d92836108af565b925082610da257610da1610d4d565b5b828204905092915050565b610db681610810565b82525050565b6000602082019050610dd16000830184610dad565b92915050565b7f496e76616c696420707269636500000000000000000000000000000000000000600082015250565b6000610e0d600d83610a36565b9150610e1882610dd7565b602082019050919050565b60006020820190508181036000830152610e3c81610e00565b905091905056fea264697066735822122042b639323f24efda3c20f650295dd099311b32ea6b8bf1d4fbdd5f2e4c95a05364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFCD CODESIZE SUB DUP1 PUSH2 0xFCD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x145 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0xDA JUMP JUMPDEST DUP2 EQ PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x112 DUP2 PUSH2 0xEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E JUMPI PUSH2 0x12D PUSH2 0xB5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP5 DUP3 DUP6 ADD PUSH2 0x103 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE79 DUP1 PUSH2 0x154 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DCB511A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9DCB511A EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xA0A8045E EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD2FE1631 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF08A25ED EQ PUSH2 0x1A3 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16345F18 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x23EBC76E EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x332C6397 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x390 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 CHAINID DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3D5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x705 JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0A8045E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x679 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x16345F18 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x810 JUMP JUMPDEST DUP2 EQ PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x848 DUP2 PUSH2 0x822 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x872 DUP5 DUP3 DUP6 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DF DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x909 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x961 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x972 DUP6 DUP3 DUP7 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9B2 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 PUSH2 0x9DC PUSH2 0x9D7 DUP5 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726963652066656564206E6F742073657420666F72207468697320746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA3 PUSH1 0x21 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP3 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAD2 DUP2 PUSH2 0xA96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB15 DUP2 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB24 DUP2 PUSH2 0x87B JUMP JUMPDEST DUP2 EQ PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB41 DUP2 PUSH2 0xB1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB56 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB77 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP9 DUP3 DUP10 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB97 DUP9 DUP3 DUP10 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBA8 DUP9 DUP3 DUP10 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xBB9 DUP9 DUP3 DUP10 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xBCA DUP9 DUP3 DUP10 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x50726963652066656564206E6F742073657420666F7220455448000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D PUSH1 0x1A DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3C DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP5 DUP3 DUP6 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455448207072696365000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 PUSH1 0x11 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB1 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD5 DUP2 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD2F DUP2 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD87 DUP3 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP PUSH2 0xD92 DUP4 PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0D PUSH1 0xD DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xE18 DUP3 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3C DUP2 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB6 CODECOPY ORIGIN EXTCODEHASH 0x24 0xEF 0xDA EXTCODECOPY KECCAK256 0xF6 POP 0x29 TSTORE 0xD0 SWAP10 BALANCE SHL ORIGIN 0xEA PUSH12 0x8BF1D4FBDD5F2E4C95A05364 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"171:2401:19:-:0;;;423:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;572:10;525;:22;544:1;525:22;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;423:219;171:2401;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;171:2401:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@convertToUSD_2924":{"entryPoint":1527,"id":2924,"parameterSlots":2,"returnSlots":1},"@getEthUsdPrice_2857":{"entryPoint":1165,"id":2857,"parameterSlots":0,"returnSlots":1},"@getLatestPrice_2819":{"entryPoint":467,"id":2819,"parameterSlots":1,"returnSlots":1},"@priceFeeds_2740":{"entryPoint":1114,"id":2740,"parameterSlots":0,"returnSlots":0},"@setPriceFeed_2782":{"entryPoint":985,"id":2782,"parameterSlots":2,"returnSlots":0},"@setTestPrice_2955":{"entryPoint":831,"id":2955,"parameterSlots":2,"returnSlots":0},"@testEthPrices_2744":{"entryPoint":807,"id":2744,"parameterSlots":0,"returnSlots":0},"@testTokenPrices_2748":{"entryPoint":1503,"id":2748,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":2866,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":2822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2428,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2364,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_int256_fromMemory":{"entryPoint":3139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":2908,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3501,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack":{"entryPoint":2572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":2181,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934_to_t_string_memory_ptr_fromStack":{"entryPoint":2710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff_to_t_string_memory_ptr_fromStack":{"entryPoint":3225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d_to_t_string_memory_ptr_fromStack":{"entryPoint":3072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack":{"entryPoint":3584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2322,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":2196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3260,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2614,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3339,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2064,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":2171,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2223,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":2777,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$45_to_t_address":{"entryPoint":2554,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2536,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2502,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":2492,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3292,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3405,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2027,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934":{"entryPoint":2631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff":{"entryPoint":3184,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d":{"entryPoint":3031,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7":{"entryPoint":3543,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2082,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":2843,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2233,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":2799,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12168:20","nodeType":"YulBlock","src":"0:12168:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"748:87:20","nodeType":"YulBlock","src":"748:87:20","statements":[{"nativeSrc":"758:29:20","nodeType":"YulAssignment","src":"758:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:20","nodeType":"YulIdentifier","src":"780:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:20","nodeType":"YulIdentifier","src":"767:12:20"},"nativeSrc":"767:20:20","nodeType":"YulFunctionCall","src":"767:20:20"},"variableNames":[{"name":"value","nativeSrc":"758:5:20","nodeType":"YulIdentifier","src":"758:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:20","nodeType":"YulIdentifier","src":"823:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:20","nodeType":"YulIdentifier","src":"796:26:20"},"nativeSrc":"796:33:20","nodeType":"YulFunctionCall","src":"796:33:20"},"nativeSrc":"796:33:20","nodeType":"YulExpressionStatement","src":"796:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:20","nodeType":"YulTypedName","src":"726:6:20","type":""},{"name":"end","nativeSrc":"734:3:20","nodeType":"YulTypedName","src":"734:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:20","nodeType":"YulTypedName","src":"742:5:20","type":""}],"src":"696:139:20"},{"body":{"nativeSrc":"907:263:20","nodeType":"YulBlock","src":"907:263:20","statements":[{"body":{"nativeSrc":"953:83:20","nodeType":"YulBlock","src":"953:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:20","nodeType":"YulIdentifier","src":"955:77:20"},"nativeSrc":"955:79:20","nodeType":"YulFunctionCall","src":"955:79:20"},"nativeSrc":"955:79:20","nodeType":"YulExpressionStatement","src":"955:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:20","nodeType":"YulIdentifier","src":"928:7:20"},{"name":"headStart","nativeSrc":"937:9:20","nodeType":"YulIdentifier","src":"937:9:20"}],"functionName":{"name":"sub","nativeSrc":"924:3:20","nodeType":"YulIdentifier","src":"924:3:20"},"nativeSrc":"924:23:20","nodeType":"YulFunctionCall","src":"924:23:20"},{"kind":"number","nativeSrc":"949:2:20","nodeType":"YulLiteral","src":"949:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:20","nodeType":"YulIdentifier","src":"920:3:20"},"nativeSrc":"920:32:20","nodeType":"YulFunctionCall","src":"920:32:20"},"nativeSrc":"917:119:20","nodeType":"YulIf","src":"917:119:20"},{"nativeSrc":"1046:117:20","nodeType":"YulBlock","src":"1046:117:20","statements":[{"nativeSrc":"1061:15:20","nodeType":"YulVariableDeclaration","src":"1061:15:20","value":{"kind":"number","nativeSrc":"1075:1:20","nodeType":"YulLiteral","src":"1075:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:20","nodeType":"YulTypedName","src":"1065:6:20","type":""}]},{"nativeSrc":"1090:63:20","nodeType":"YulAssignment","src":"1090:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:20","nodeType":"YulIdentifier","src":"1125:9:20"},{"name":"offset","nativeSrc":"1136:6:20","nodeType":"YulIdentifier","src":"1136:6:20"}],"functionName":{"name":"add","nativeSrc":"1121:3:20","nodeType":"YulIdentifier","src":"1121:3:20"},"nativeSrc":"1121:22:20","nodeType":"YulFunctionCall","src":"1121:22:20"},{"name":"dataEnd","nativeSrc":"1145:7:20","nodeType":"YulIdentifier","src":"1145:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:20","nodeType":"YulIdentifier","src":"1100:20:20"},"nativeSrc":"1100:53:20","nodeType":"YulFunctionCall","src":"1100:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:20","nodeType":"YulIdentifier","src":"1090:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:20","nodeType":"YulTypedName","src":"877:9:20","type":""},{"name":"dataEnd","nativeSrc":"888:7:20","nodeType":"YulTypedName","src":"888:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:20","nodeType":"YulTypedName","src":"900:6:20","type":""}],"src":"841:329:20"},{"body":{"nativeSrc":"1220:32:20","nodeType":"YulBlock","src":"1220:32:20","statements":[{"nativeSrc":"1230:16:20","nodeType":"YulAssignment","src":"1230:16:20","value":{"name":"value","nativeSrc":"1241:5:20","nodeType":"YulIdentifier","src":"1241:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1230:7:20","nodeType":"YulIdentifier","src":"1230:7:20"}]}]},"name":"cleanup_t_int256","nativeSrc":"1176:76:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1202:5:20","nodeType":"YulTypedName","src":"1202:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1212:7:20","nodeType":"YulTypedName","src":"1212:7:20","type":""}],"src":"1176:76:20"},{"body":{"nativeSrc":"1321:52:20","nodeType":"YulBlock","src":"1321:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1338:3:20","nodeType":"YulIdentifier","src":"1338:3:20"},{"arguments":[{"name":"value","nativeSrc":"1360:5:20","nodeType":"YulIdentifier","src":"1360:5:20"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"1343:16:20","nodeType":"YulIdentifier","src":"1343:16:20"},"nativeSrc":"1343:23:20","nodeType":"YulFunctionCall","src":"1343:23:20"}],"functionName":{"name":"mstore","nativeSrc":"1331:6:20","nodeType":"YulIdentifier","src":"1331:6:20"},"nativeSrc":"1331:36:20","nodeType":"YulFunctionCall","src":"1331:36:20"},"nativeSrc":"1331:36:20","nodeType":"YulExpressionStatement","src":"1331:36:20"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"1258:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1309:5:20","nodeType":"YulTypedName","src":"1309:5:20","type":""},{"name":"pos","nativeSrc":"1316:3:20","nodeType":"YulTypedName","src":"1316:3:20","type":""}],"src":"1258:115:20"},{"body":{"nativeSrc":"1475:122:20","nodeType":"YulBlock","src":"1475:122:20","statements":[{"nativeSrc":"1485:26:20","nodeType":"YulAssignment","src":"1485:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1497:9:20","nodeType":"YulIdentifier","src":"1497:9:20"},{"kind":"number","nativeSrc":"1508:2:20","nodeType":"YulLiteral","src":"1508:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1493:3:20","nodeType":"YulIdentifier","src":"1493:3:20"},"nativeSrc":"1493:18:20","nodeType":"YulFunctionCall","src":"1493:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1485:4:20","nodeType":"YulIdentifier","src":"1485:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1563:6:20","nodeType":"YulIdentifier","src":"1563:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"1576:9:20","nodeType":"YulIdentifier","src":"1576:9:20"},{"kind":"number","nativeSrc":"1587:1:20","nodeType":"YulLiteral","src":"1587:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1572:3:20","nodeType":"YulIdentifier","src":"1572:3:20"},"nativeSrc":"1572:17:20","nodeType":"YulFunctionCall","src":"1572:17:20"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"1521:41:20","nodeType":"YulIdentifier","src":"1521:41:20"},"nativeSrc":"1521:69:20","nodeType":"YulFunctionCall","src":"1521:69:20"},"nativeSrc":"1521:69:20","nodeType":"YulExpressionStatement","src":"1521:69:20"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nativeSrc":"1379:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1447:9:20","nodeType":"YulTypedName","src":"1447:9:20","type":""},{"name":"value0","nativeSrc":"1459:6:20","nodeType":"YulTypedName","src":"1459:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1470:4:20","nodeType":"YulTypedName","src":"1470:4:20","type":""}],"src":"1379:218:20"},{"body":{"nativeSrc":"1648:32:20","nodeType":"YulBlock","src":"1648:32:20","statements":[{"nativeSrc":"1658:16:20","nodeType":"YulAssignment","src":"1658:16:20","value":{"name":"value","nativeSrc":"1669:5:20","nodeType":"YulIdentifier","src":"1669:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1658:7:20","nodeType":"YulIdentifier","src":"1658:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1603:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1630:5:20","nodeType":"YulTypedName","src":"1630:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1640:7:20","nodeType":"YulTypedName","src":"1640:7:20","type":""}],"src":"1603:77:20"},{"body":{"nativeSrc":"1729:79:20","nodeType":"YulBlock","src":"1729:79:20","statements":[{"body":{"nativeSrc":"1786:16:20","nodeType":"YulBlock","src":"1786:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1795:1:20","nodeType":"YulLiteral","src":"1795:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1798:1:20","nodeType":"YulLiteral","src":"1798:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1788:6:20","nodeType":"YulIdentifier","src":"1788:6:20"},"nativeSrc":"1788:12:20","nodeType":"YulFunctionCall","src":"1788:12:20"},"nativeSrc":"1788:12:20","nodeType":"YulExpressionStatement","src":"1788:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1752:5:20","nodeType":"YulIdentifier","src":"1752:5:20"},{"arguments":[{"name":"value","nativeSrc":"1777:5:20","nodeType":"YulIdentifier","src":"1777:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1759:17:20","nodeType":"YulIdentifier","src":"1759:17:20"},"nativeSrc":"1759:24:20","nodeType":"YulFunctionCall","src":"1759:24:20"}],"functionName":{"name":"eq","nativeSrc":"1749:2:20","nodeType":"YulIdentifier","src":"1749:2:20"},"nativeSrc":"1749:35:20","nodeType":"YulFunctionCall","src":"1749:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1742:6:20","nodeType":"YulIdentifier","src":"1742:6:20"},"nativeSrc":"1742:43:20","nodeType":"YulFunctionCall","src":"1742:43:20"},"nativeSrc":"1739:63:20","nodeType":"YulIf","src":"1739:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"1686:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1722:5:20","nodeType":"YulTypedName","src":"1722:5:20","type":""}],"src":"1686:122:20"},{"body":{"nativeSrc":"1866:87:20","nodeType":"YulBlock","src":"1866:87:20","statements":[{"nativeSrc":"1876:29:20","nodeType":"YulAssignment","src":"1876:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1898:6:20","nodeType":"YulIdentifier","src":"1898:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1885:12:20","nodeType":"YulIdentifier","src":"1885:12:20"},"nativeSrc":"1885:20:20","nodeType":"YulFunctionCall","src":"1885:20:20"},"variableNames":[{"name":"value","nativeSrc":"1876:5:20","nodeType":"YulIdentifier","src":"1876:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1941:5:20","nodeType":"YulIdentifier","src":"1941:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1914:26:20","nodeType":"YulIdentifier","src":"1914:26:20"},"nativeSrc":"1914:33:20","nodeType":"YulFunctionCall","src":"1914:33:20"},"nativeSrc":"1914:33:20","nodeType":"YulExpressionStatement","src":"1914:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"1814:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1844:6:20","nodeType":"YulTypedName","src":"1844:6:20","type":""},{"name":"end","nativeSrc":"1852:3:20","nodeType":"YulTypedName","src":"1852:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1860:5:20","nodeType":"YulTypedName","src":"1860:5:20","type":""}],"src":"1814:139:20"},{"body":{"nativeSrc":"2025:263:20","nodeType":"YulBlock","src":"2025:263:20","statements":[{"body":{"nativeSrc":"2071:83:20","nodeType":"YulBlock","src":"2071:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2073:77:20","nodeType":"YulIdentifier","src":"2073:77:20"},"nativeSrc":"2073:79:20","nodeType":"YulFunctionCall","src":"2073:79:20"},"nativeSrc":"2073:79:20","nodeType":"YulExpressionStatement","src":"2073:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2046:7:20","nodeType":"YulIdentifier","src":"2046:7:20"},{"name":"headStart","nativeSrc":"2055:9:20","nodeType":"YulIdentifier","src":"2055:9:20"}],"functionName":{"name":"sub","nativeSrc":"2042:3:20","nodeType":"YulIdentifier","src":"2042:3:20"},"nativeSrc":"2042:23:20","nodeType":"YulFunctionCall","src":"2042:23:20"},{"kind":"number","nativeSrc":"2067:2:20","nodeType":"YulLiteral","src":"2067:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2038:3:20","nodeType":"YulIdentifier","src":"2038:3:20"},"nativeSrc":"2038:32:20","nodeType":"YulFunctionCall","src":"2038:32:20"},"nativeSrc":"2035:119:20","nodeType":"YulIf","src":"2035:119:20"},{"nativeSrc":"2164:117:20","nodeType":"YulBlock","src":"2164:117:20","statements":[{"nativeSrc":"2179:15:20","nodeType":"YulVariableDeclaration","src":"2179:15:20","value":{"kind":"number","nativeSrc":"2193:1:20","nodeType":"YulLiteral","src":"2193:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2183:6:20","nodeType":"YulTypedName","src":"2183:6:20","type":""}]},{"nativeSrc":"2208:63:20","nodeType":"YulAssignment","src":"2208:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2243:9:20","nodeType":"YulIdentifier","src":"2243:9:20"},{"name":"offset","nativeSrc":"2254:6:20","nodeType":"YulIdentifier","src":"2254:6:20"}],"functionName":{"name":"add","nativeSrc":"2239:3:20","nodeType":"YulIdentifier","src":"2239:3:20"},"nativeSrc":"2239:22:20","nodeType":"YulFunctionCall","src":"2239:22:20"},{"name":"dataEnd","nativeSrc":"2263:7:20","nodeType":"YulIdentifier","src":"2263:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2218:20:20","nodeType":"YulIdentifier","src":"2218:20:20"},"nativeSrc":"2218:53:20","nodeType":"YulFunctionCall","src":"2218:53:20"},"variableNames":[{"name":"value0","nativeSrc":"2208:6:20","nodeType":"YulIdentifier","src":"2208:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1959:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1995:9:20","nodeType":"YulTypedName","src":"1995:9:20","type":""},{"name":"dataEnd","nativeSrc":"2006:7:20","nodeType":"YulTypedName","src":"2006:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2018:6:20","nodeType":"YulTypedName","src":"2018:6:20","type":""}],"src":"1959:329:20"},{"body":{"nativeSrc":"2359:53:20","nodeType":"YulBlock","src":"2359:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2376:3:20","nodeType":"YulIdentifier","src":"2376:3:20"},{"arguments":[{"name":"value","nativeSrc":"2399:5:20","nodeType":"YulIdentifier","src":"2399:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2381:17:20","nodeType":"YulIdentifier","src":"2381:17:20"},"nativeSrc":"2381:24:20","nodeType":"YulFunctionCall","src":"2381:24:20"}],"functionName":{"name":"mstore","nativeSrc":"2369:6:20","nodeType":"YulIdentifier","src":"2369:6:20"},"nativeSrc":"2369:37:20","nodeType":"YulFunctionCall","src":"2369:37:20"},"nativeSrc":"2369:37:20","nodeType":"YulExpressionStatement","src":"2369:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2294:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2347:5:20","nodeType":"YulTypedName","src":"2347:5:20","type":""},{"name":"pos","nativeSrc":"2354:3:20","nodeType":"YulTypedName","src":"2354:3:20","type":""}],"src":"2294:118:20"},{"body":{"nativeSrc":"2516:124:20","nodeType":"YulBlock","src":"2516:124:20","statements":[{"nativeSrc":"2526:26:20","nodeType":"YulAssignment","src":"2526:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2538:9:20","nodeType":"YulIdentifier","src":"2538:9:20"},{"kind":"number","nativeSrc":"2549:2:20","nodeType":"YulLiteral","src":"2549:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2534:3:20","nodeType":"YulIdentifier","src":"2534:3:20"},"nativeSrc":"2534:18:20","nodeType":"YulFunctionCall","src":"2534:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2526:4:20","nodeType":"YulIdentifier","src":"2526:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2606:6:20","nodeType":"YulIdentifier","src":"2606:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2619:9:20","nodeType":"YulIdentifier","src":"2619:9:20"},{"kind":"number","nativeSrc":"2630:1:20","nodeType":"YulLiteral","src":"2630:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2615:3:20","nodeType":"YulIdentifier","src":"2615:3:20"},"nativeSrc":"2615:17:20","nodeType":"YulFunctionCall","src":"2615:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2562:43:20","nodeType":"YulIdentifier","src":"2562:43:20"},"nativeSrc":"2562:71:20","nodeType":"YulFunctionCall","src":"2562:71:20"},"nativeSrc":"2562:71:20","nodeType":"YulExpressionStatement","src":"2562:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2418:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2488:9:20","nodeType":"YulTypedName","src":"2488:9:20","type":""},{"name":"value0","nativeSrc":"2500:6:20","nodeType":"YulTypedName","src":"2500:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2511:4:20","nodeType":"YulTypedName","src":"2511:4:20","type":""}],"src":"2418:222:20"},{"body":{"nativeSrc":"2729:391:20","nodeType":"YulBlock","src":"2729:391:20","statements":[{"body":{"nativeSrc":"2775:83:20","nodeType":"YulBlock","src":"2775:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2777:77:20","nodeType":"YulIdentifier","src":"2777:77:20"},"nativeSrc":"2777:79:20","nodeType":"YulFunctionCall","src":"2777:79:20"},"nativeSrc":"2777:79:20","nodeType":"YulExpressionStatement","src":"2777:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2750:7:20","nodeType":"YulIdentifier","src":"2750:7:20"},{"name":"headStart","nativeSrc":"2759:9:20","nodeType":"YulIdentifier","src":"2759:9:20"}],"functionName":{"name":"sub","nativeSrc":"2746:3:20","nodeType":"YulIdentifier","src":"2746:3:20"},"nativeSrc":"2746:23:20","nodeType":"YulFunctionCall","src":"2746:23:20"},{"kind":"number","nativeSrc":"2771:2:20","nodeType":"YulLiteral","src":"2771:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2742:3:20","nodeType":"YulIdentifier","src":"2742:3:20"},"nativeSrc":"2742:32:20","nodeType":"YulFunctionCall","src":"2742:32:20"},"nativeSrc":"2739:119:20","nodeType":"YulIf","src":"2739:119:20"},{"nativeSrc":"2868:117:20","nodeType":"YulBlock","src":"2868:117:20","statements":[{"nativeSrc":"2883:15:20","nodeType":"YulVariableDeclaration","src":"2883:15:20","value":{"kind":"number","nativeSrc":"2897:1:20","nodeType":"YulLiteral","src":"2897:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2887:6:20","nodeType":"YulTypedName","src":"2887:6:20","type":""}]},{"nativeSrc":"2912:63:20","nodeType":"YulAssignment","src":"2912:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2947:9:20","nodeType":"YulIdentifier","src":"2947:9:20"},{"name":"offset","nativeSrc":"2958:6:20","nodeType":"YulIdentifier","src":"2958:6:20"}],"functionName":{"name":"add","nativeSrc":"2943:3:20","nodeType":"YulIdentifier","src":"2943:3:20"},"nativeSrc":"2943:22:20","nodeType":"YulFunctionCall","src":"2943:22:20"},{"name":"dataEnd","nativeSrc":"2967:7:20","nodeType":"YulIdentifier","src":"2967:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2922:20:20","nodeType":"YulIdentifier","src":"2922:20:20"},"nativeSrc":"2922:53:20","nodeType":"YulFunctionCall","src":"2922:53:20"},"variableNames":[{"name":"value0","nativeSrc":"2912:6:20","nodeType":"YulIdentifier","src":"2912:6:20"}]}]},{"nativeSrc":"2995:118:20","nodeType":"YulBlock","src":"2995:118:20","statements":[{"nativeSrc":"3010:16:20","nodeType":"YulVariableDeclaration","src":"3010:16:20","value":{"kind":"number","nativeSrc":"3024:2:20","nodeType":"YulLiteral","src":"3024:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3014:6:20","nodeType":"YulTypedName","src":"3014:6:20","type":""}]},{"nativeSrc":"3040:63:20","nodeType":"YulAssignment","src":"3040:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3075:9:20","nodeType":"YulIdentifier","src":"3075:9:20"},{"name":"offset","nativeSrc":"3086:6:20","nodeType":"YulIdentifier","src":"3086:6:20"}],"functionName":{"name":"add","nativeSrc":"3071:3:20","nodeType":"YulIdentifier","src":"3071:3:20"},"nativeSrc":"3071:22:20","nodeType":"YulFunctionCall","src":"3071:22:20"},{"name":"dataEnd","nativeSrc":"3095:7:20","nodeType":"YulIdentifier","src":"3095:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3050:20:20","nodeType":"YulIdentifier","src":"3050:20:20"},"nativeSrc":"3050:53:20","nodeType":"YulFunctionCall","src":"3050:53:20"},"variableNames":[{"name":"value1","nativeSrc":"3040:6:20","nodeType":"YulIdentifier","src":"3040:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2646:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2691:9:20","nodeType":"YulTypedName","src":"2691:9:20","type":""},{"name":"dataEnd","nativeSrc":"2702:7:20","nodeType":"YulTypedName","src":"2702:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2714:6:20","nodeType":"YulTypedName","src":"2714:6:20","type":""},{"name":"value1","nativeSrc":"2722:6:20","nodeType":"YulTypedName","src":"2722:6:20","type":""}],"src":"2646:474:20"},{"body":{"nativeSrc":"3209:391:20","nodeType":"YulBlock","src":"3209:391:20","statements":[{"body":{"nativeSrc":"3255:83:20","nodeType":"YulBlock","src":"3255:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3257:77:20","nodeType":"YulIdentifier","src":"3257:77:20"},"nativeSrc":"3257:79:20","nodeType":"YulFunctionCall","src":"3257:79:20"},"nativeSrc":"3257:79:20","nodeType":"YulExpressionStatement","src":"3257:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3230:7:20","nodeType":"YulIdentifier","src":"3230:7:20"},{"name":"headStart","nativeSrc":"3239:9:20","nodeType":"YulIdentifier","src":"3239:9:20"}],"functionName":{"name":"sub","nativeSrc":"3226:3:20","nodeType":"YulIdentifier","src":"3226:3:20"},"nativeSrc":"3226:23:20","nodeType":"YulFunctionCall","src":"3226:23:20"},{"kind":"number","nativeSrc":"3251:2:20","nodeType":"YulLiteral","src":"3251:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3222:3:20","nodeType":"YulIdentifier","src":"3222:3:20"},"nativeSrc":"3222:32:20","nodeType":"YulFunctionCall","src":"3222:32:20"},"nativeSrc":"3219:119:20","nodeType":"YulIf","src":"3219:119:20"},{"nativeSrc":"3348:117:20","nodeType":"YulBlock","src":"3348:117:20","statements":[{"nativeSrc":"3363:15:20","nodeType":"YulVariableDeclaration","src":"3363:15:20","value":{"kind":"number","nativeSrc":"3377:1:20","nodeType":"YulLiteral","src":"3377:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3367:6:20","nodeType":"YulTypedName","src":"3367:6:20","type":""}]},{"nativeSrc":"3392:63:20","nodeType":"YulAssignment","src":"3392:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3427:9:20","nodeType":"YulIdentifier","src":"3427:9:20"},{"name":"offset","nativeSrc":"3438:6:20","nodeType":"YulIdentifier","src":"3438:6:20"}],"functionName":{"name":"add","nativeSrc":"3423:3:20","nodeType":"YulIdentifier","src":"3423:3:20"},"nativeSrc":"3423:22:20","nodeType":"YulFunctionCall","src":"3423:22:20"},{"name":"dataEnd","nativeSrc":"3447:7:20","nodeType":"YulIdentifier","src":"3447:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3402:20:20","nodeType":"YulIdentifier","src":"3402:20:20"},"nativeSrc":"3402:53:20","nodeType":"YulFunctionCall","src":"3402:53:20"},"variableNames":[{"name":"value0","nativeSrc":"3392:6:20","nodeType":"YulIdentifier","src":"3392:6:20"}]}]},{"nativeSrc":"3475:118:20","nodeType":"YulBlock","src":"3475:118:20","statements":[{"nativeSrc":"3490:16:20","nodeType":"YulVariableDeclaration","src":"3490:16:20","value":{"kind":"number","nativeSrc":"3504:2:20","nodeType":"YulLiteral","src":"3504:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3494:6:20","nodeType":"YulTypedName","src":"3494:6:20","type":""}]},{"nativeSrc":"3520:63:20","nodeType":"YulAssignment","src":"3520:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3555:9:20","nodeType":"YulIdentifier","src":"3555:9:20"},{"name":"offset","nativeSrc":"3566:6:20","nodeType":"YulIdentifier","src":"3566:6:20"}],"functionName":{"name":"add","nativeSrc":"3551:3:20","nodeType":"YulIdentifier","src":"3551:3:20"},"nativeSrc":"3551:22:20","nodeType":"YulFunctionCall","src":"3551:22:20"},{"name":"dataEnd","nativeSrc":"3575:7:20","nodeType":"YulIdentifier","src":"3575:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3530:20:20","nodeType":"YulIdentifier","src":"3530:20:20"},"nativeSrc":"3530:53:20","nodeType":"YulFunctionCall","src":"3530:53:20"},"variableNames":[{"name":"value1","nativeSrc":"3520:6:20","nodeType":"YulIdentifier","src":"3520:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"3126:474:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3171:9:20","nodeType":"YulTypedName","src":"3171:9:20","type":""},{"name":"dataEnd","nativeSrc":"3182:7:20","nodeType":"YulTypedName","src":"3182:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3194:6:20","nodeType":"YulTypedName","src":"3194:6:20","type":""},{"name":"value1","nativeSrc":"3202:6:20","nodeType":"YulTypedName","src":"3202:6:20","type":""}],"src":"3126:474:20"},{"body":{"nativeSrc":"3638:28:20","nodeType":"YulBlock","src":"3638:28:20","statements":[{"nativeSrc":"3648:12:20","nodeType":"YulAssignment","src":"3648:12:20","value":{"name":"value","nativeSrc":"3655:5:20","nodeType":"YulIdentifier","src":"3655:5:20"},"variableNames":[{"name":"ret","nativeSrc":"3648:3:20","nodeType":"YulIdentifier","src":"3648:3:20"}]}]},"name":"identity","nativeSrc":"3606:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3624:5:20","nodeType":"YulTypedName","src":"3624:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3634:3:20","nodeType":"YulTypedName","src":"3634:3:20","type":""}],"src":"3606:60:20"},{"body":{"nativeSrc":"3732:82:20","nodeType":"YulBlock","src":"3732:82:20","statements":[{"nativeSrc":"3742:66:20","nodeType":"YulAssignment","src":"3742:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3800:5:20","nodeType":"YulIdentifier","src":"3800:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3782:17:20","nodeType":"YulIdentifier","src":"3782:17:20"},"nativeSrc":"3782:24:20","nodeType":"YulFunctionCall","src":"3782:24:20"}],"functionName":{"name":"identity","nativeSrc":"3773:8:20","nodeType":"YulIdentifier","src":"3773:8:20"},"nativeSrc":"3773:34:20","nodeType":"YulFunctionCall","src":"3773:34:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3755:17:20","nodeType":"YulIdentifier","src":"3755:17:20"},"nativeSrc":"3755:53:20","nodeType":"YulFunctionCall","src":"3755:53:20"},"variableNames":[{"name":"converted","nativeSrc":"3742:9:20","nodeType":"YulIdentifier","src":"3742:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3672:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:20","nodeType":"YulTypedName","src":"3712:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3722:9:20","nodeType":"YulTypedName","src":"3722:9:20","type":""}],"src":"3672:142:20"},{"body":{"nativeSrc":"3880:66:20","nodeType":"YulBlock","src":"3880:66:20","statements":[{"nativeSrc":"3890:50:20","nodeType":"YulAssignment","src":"3890:50:20","value":{"arguments":[{"name":"value","nativeSrc":"3934:5:20","nodeType":"YulIdentifier","src":"3934:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"3903:30:20","nodeType":"YulIdentifier","src":"3903:30:20"},"nativeSrc":"3903:37:20","nodeType":"YulFunctionCall","src":"3903:37:20"},"variableNames":[{"name":"converted","nativeSrc":"3890:9:20","nodeType":"YulIdentifier","src":"3890:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"3820:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3860:5:20","nodeType":"YulTypedName","src":"3860:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3870:9:20","nodeType":"YulTypedName","src":"3870:9:20","type":""}],"src":"3820:126:20"},{"body":{"nativeSrc":"4040:66:20","nodeType":"YulBlock","src":"4040:66:20","statements":[{"nativeSrc":"4050:50:20","nodeType":"YulAssignment","src":"4050:50:20","value":{"arguments":[{"name":"value","nativeSrc":"4094:5:20","nodeType":"YulIdentifier","src":"4094:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"4063:30:20","nodeType":"YulIdentifier","src":"4063:30:20"},"nativeSrc":"4063:37:20","nodeType":"YulFunctionCall","src":"4063:37:20"},"variableNames":[{"name":"converted","nativeSrc":"4050:9:20","nodeType":"YulIdentifier","src":"4050:9:20"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nativeSrc":"3952:154:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4020:5:20","nodeType":"YulTypedName","src":"4020:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4030:9:20","nodeType":"YulTypedName","src":"4030:9:20","type":""}],"src":"3952:154:20"},{"body":{"nativeSrc":"4205:94:20","nodeType":"YulBlock","src":"4205:94:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4222:3:20","nodeType":"YulIdentifier","src":"4222:3:20"},{"arguments":[{"name":"value","nativeSrc":"4286:5:20","nodeType":"YulIdentifier","src":"4286:5:20"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$45_to_t_address","nativeSrc":"4227:58:20","nodeType":"YulIdentifier","src":"4227:58:20"},"nativeSrc":"4227:65:20","nodeType":"YulFunctionCall","src":"4227:65:20"}],"functionName":{"name":"mstore","nativeSrc":"4215:6:20","nodeType":"YulIdentifier","src":"4215:6:20"},"nativeSrc":"4215:78:20","nodeType":"YulFunctionCall","src":"4215:78:20"},"nativeSrc":"4215:78:20","nodeType":"YulExpressionStatement","src":"4215:78:20"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nativeSrc":"4112:187:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4193:5:20","nodeType":"YulTypedName","src":"4193:5:20","type":""},{"name":"pos","nativeSrc":"4200:3:20","nodeType":"YulTypedName","src":"4200:3:20","type":""}],"src":"4112:187:20"},{"body":{"nativeSrc":"4431:152:20","nodeType":"YulBlock","src":"4431:152:20","statements":[{"nativeSrc":"4441:26:20","nodeType":"YulAssignment","src":"4441:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"4453:9:20","nodeType":"YulIdentifier","src":"4453:9:20"},{"kind":"number","nativeSrc":"4464:2:20","nodeType":"YulLiteral","src":"4464:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4449:3:20","nodeType":"YulIdentifier","src":"4449:3:20"},"nativeSrc":"4449:18:20","nodeType":"YulFunctionCall","src":"4449:18:20"},"variableNames":[{"name":"tail","nativeSrc":"4441:4:20","nodeType":"YulIdentifier","src":"4441:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4549:6:20","nodeType":"YulIdentifier","src":"4549:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"4562:9:20","nodeType":"YulIdentifier","src":"4562:9:20"},{"kind":"number","nativeSrc":"4573:1:20","nodeType":"YulLiteral","src":"4573:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4558:3:20","nodeType":"YulIdentifier","src":"4558:3:20"},"nativeSrc":"4558:17:20","nodeType":"YulFunctionCall","src":"4558:17:20"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack","nativeSrc":"4477:71:20","nodeType":"YulIdentifier","src":"4477:71:20"},"nativeSrc":"4477:99:20","nodeType":"YulFunctionCall","src":"4477:99:20"},"nativeSrc":"4477:99:20","nodeType":"YulExpressionStatement","src":"4477:99:20"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed","nativeSrc":"4305:278:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4403:9:20","nodeType":"YulTypedName","src":"4403:9:20","type":""},{"name":"value0","nativeSrc":"4415:6:20","nodeType":"YulTypedName","src":"4415:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4426:4:20","nodeType":"YulTypedName","src":"4426:4:20","type":""}],"src":"4305:278:20"},{"body":{"nativeSrc":"4685:73:20","nodeType":"YulBlock","src":"4685:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4702:3:20","nodeType":"YulIdentifier","src":"4702:3:20"},{"name":"length","nativeSrc":"4707:6:20","nodeType":"YulIdentifier","src":"4707:6:20"}],"functionName":{"name":"mstore","nativeSrc":"4695:6:20","nodeType":"YulIdentifier","src":"4695:6:20"},"nativeSrc":"4695:19:20","nodeType":"YulFunctionCall","src":"4695:19:20"},"nativeSrc":"4695:19:20","nodeType":"YulExpressionStatement","src":"4695:19:20"},{"nativeSrc":"4723:29:20","nodeType":"YulAssignment","src":"4723:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"4742:3:20","nodeType":"YulIdentifier","src":"4742:3:20"},{"kind":"number","nativeSrc":"4747:4:20","nodeType":"YulLiteral","src":"4747:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4738:3:20","nodeType":"YulIdentifier","src":"4738:3:20"},"nativeSrc":"4738:14:20","nodeType":"YulFunctionCall","src":"4738:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"4723:11:20","nodeType":"YulIdentifier","src":"4723:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4589:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4657:3:20","nodeType":"YulTypedName","src":"4657:3:20","type":""},{"name":"length","nativeSrc":"4662:6:20","nodeType":"YulTypedName","src":"4662:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4673:11:20","nodeType":"YulTypedName","src":"4673:11:20","type":""}],"src":"4589:169:20"},{"body":{"nativeSrc":"4870:114:20","nodeType":"YulBlock","src":"4870:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4892:6:20","nodeType":"YulIdentifier","src":"4892:6:20"},{"kind":"number","nativeSrc":"4900:1:20","nodeType":"YulLiteral","src":"4900:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4888:3:20","nodeType":"YulIdentifier","src":"4888:3:20"},"nativeSrc":"4888:14:20","nodeType":"YulFunctionCall","src":"4888:14:20"},{"hexValue":"50726963652066656564206e6f742073657420666f72207468697320746f6b65","kind":"string","nativeSrc":"4904:34:20","nodeType":"YulLiteral","src":"4904:34:20","type":"","value":"Price feed not set for this toke"}],"functionName":{"name":"mstore","nativeSrc":"4881:6:20","nodeType":"YulIdentifier","src":"4881:6:20"},"nativeSrc":"4881:58:20","nodeType":"YulFunctionCall","src":"4881:58:20"},"nativeSrc":"4881:58:20","nodeType":"YulExpressionStatement","src":"4881:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4960:6:20","nodeType":"YulIdentifier","src":"4960:6:20"},{"kind":"number","nativeSrc":"4968:2:20","nodeType":"YulLiteral","src":"4968:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4956:3:20","nodeType":"YulIdentifier","src":"4956:3:20"},"nativeSrc":"4956:15:20","nodeType":"YulFunctionCall","src":"4956:15:20"},{"hexValue":"6e","kind":"string","nativeSrc":"4973:3:20","nodeType":"YulLiteral","src":"4973:3:20","type":"","value":"n"}],"functionName":{"name":"mstore","nativeSrc":"4949:6:20","nodeType":"YulIdentifier","src":"4949:6:20"},"nativeSrc":"4949:28:20","nodeType":"YulFunctionCall","src":"4949:28:20"},"nativeSrc":"4949:28:20","nodeType":"YulExpressionStatement","src":"4949:28:20"}]},"name":"store_literal_in_memory_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934","nativeSrc":"4764:220:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4862:6:20","nodeType":"YulTypedName","src":"4862:6:20","type":""}],"src":"4764:220:20"},{"body":{"nativeSrc":"5136:220:20","nodeType":"YulBlock","src":"5136:220:20","statements":[{"nativeSrc":"5146:74:20","nodeType":"YulAssignment","src":"5146:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"5212:3:20","nodeType":"YulIdentifier","src":"5212:3:20"},{"kind":"number","nativeSrc":"5217:2:20","nodeType":"YulLiteral","src":"5217:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5153:58:20","nodeType":"YulIdentifier","src":"5153:58:20"},"nativeSrc":"5153:67:20","nodeType":"YulFunctionCall","src":"5153:67:20"},"variableNames":[{"name":"pos","nativeSrc":"5146:3:20","nodeType":"YulIdentifier","src":"5146:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5318:3:20","nodeType":"YulIdentifier","src":"5318:3:20"}],"functionName":{"name":"store_literal_in_memory_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934","nativeSrc":"5229:88:20","nodeType":"YulIdentifier","src":"5229:88:20"},"nativeSrc":"5229:93:20","nodeType":"YulFunctionCall","src":"5229:93:20"},"nativeSrc":"5229:93:20","nodeType":"YulExpressionStatement","src":"5229:93:20"},{"nativeSrc":"5331:19:20","nodeType":"YulAssignment","src":"5331:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"5342:3:20","nodeType":"YulIdentifier","src":"5342:3:20"},{"kind":"number","nativeSrc":"5347:2:20","nodeType":"YulLiteral","src":"5347:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5338:3:20","nodeType":"YulIdentifier","src":"5338:3:20"},"nativeSrc":"5338:12:20","nodeType":"YulFunctionCall","src":"5338:12:20"},"variableNames":[{"name":"end","nativeSrc":"5331:3:20","nodeType":"YulIdentifier","src":"5331:3:20"}]}]},"name":"abi_encode_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934_to_t_string_memory_ptr_fromStack","nativeSrc":"4990:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5124:3:20","nodeType":"YulTypedName","src":"5124:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5132:3:20","nodeType":"YulTypedName","src":"5132:3:20","type":""}],"src":"4990:366:20"},{"body":{"nativeSrc":"5533:248:20","nodeType":"YulBlock","src":"5533:248:20","statements":[{"nativeSrc":"5543:26:20","nodeType":"YulAssignment","src":"5543:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5555:9:20","nodeType":"YulIdentifier","src":"5555:9:20"},{"kind":"number","nativeSrc":"5566:2:20","nodeType":"YulLiteral","src":"5566:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5551:3:20","nodeType":"YulIdentifier","src":"5551:3:20"},"nativeSrc":"5551:18:20","nodeType":"YulFunctionCall","src":"5551:18:20"},"variableNames":[{"name":"tail","nativeSrc":"5543:4:20","nodeType":"YulIdentifier","src":"5543:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5590:9:20","nodeType":"YulIdentifier","src":"5590:9:20"},{"kind":"number","nativeSrc":"5601:1:20","nodeType":"YulLiteral","src":"5601:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5586:3:20","nodeType":"YulIdentifier","src":"5586:3:20"},"nativeSrc":"5586:17:20","nodeType":"YulFunctionCall","src":"5586:17:20"},{"arguments":[{"name":"tail","nativeSrc":"5609:4:20","nodeType":"YulIdentifier","src":"5609:4:20"},{"name":"headStart","nativeSrc":"5615:9:20","nodeType":"YulIdentifier","src":"5615:9:20"}],"functionName":{"name":"sub","nativeSrc":"5605:3:20","nodeType":"YulIdentifier","src":"5605:3:20"},"nativeSrc":"5605:20:20","nodeType":"YulFunctionCall","src":"5605:20:20"}],"functionName":{"name":"mstore","nativeSrc":"5579:6:20","nodeType":"YulIdentifier","src":"5579:6:20"},"nativeSrc":"5579:47:20","nodeType":"YulFunctionCall","src":"5579:47:20"},"nativeSrc":"5579:47:20","nodeType":"YulExpressionStatement","src":"5579:47:20"},{"nativeSrc":"5635:139:20","nodeType":"YulAssignment","src":"5635:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"5769:4:20","nodeType":"YulIdentifier","src":"5769:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934_to_t_string_memory_ptr_fromStack","nativeSrc":"5643:124:20","nodeType":"YulIdentifier","src":"5643:124:20"},"nativeSrc":"5643:131:20","nodeType":"YulFunctionCall","src":"5643:131:20"},"variableNames":[{"name":"tail","nativeSrc":"5635:4:20","nodeType":"YulIdentifier","src":"5635:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5362:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5513:9:20","nodeType":"YulTypedName","src":"5513:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5528:4:20","nodeType":"YulTypedName","src":"5528:4:20","type":""}],"src":"5362:419:20"},{"body":{"nativeSrc":"5831:61:20","nodeType":"YulBlock","src":"5831:61:20","statements":[{"nativeSrc":"5841:45:20","nodeType":"YulAssignment","src":"5841:45:20","value":{"arguments":[{"name":"value","nativeSrc":"5856:5:20","nodeType":"YulIdentifier","src":"5856:5:20"},{"kind":"number","nativeSrc":"5863:22:20","nodeType":"YulLiteral","src":"5863:22:20","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5852:3:20","nodeType":"YulIdentifier","src":"5852:3:20"},"nativeSrc":"5852:34:20","nodeType":"YulFunctionCall","src":"5852:34:20"},"variableNames":[{"name":"cleaned","nativeSrc":"5841:7:20","nodeType":"YulIdentifier","src":"5841:7:20"}]}]},"name":"cleanup_t_uint80","nativeSrc":"5787:105:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5813:5:20","nodeType":"YulTypedName","src":"5813:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5823:7:20","nodeType":"YulTypedName","src":"5823:7:20","type":""}],"src":"5787:105:20"},{"body":{"nativeSrc":"5940:78:20","nodeType":"YulBlock","src":"5940:78:20","statements":[{"body":{"nativeSrc":"5996:16:20","nodeType":"YulBlock","src":"5996:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6005:1:20","nodeType":"YulLiteral","src":"6005:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"6008:1:20","nodeType":"YulLiteral","src":"6008:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5998:6:20","nodeType":"YulIdentifier","src":"5998:6:20"},"nativeSrc":"5998:12:20","nodeType":"YulFunctionCall","src":"5998:12:20"},"nativeSrc":"5998:12:20","nodeType":"YulExpressionStatement","src":"5998:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5963:5:20","nodeType":"YulIdentifier","src":"5963:5:20"},{"arguments":[{"name":"value","nativeSrc":"5987:5:20","nodeType":"YulIdentifier","src":"5987:5:20"}],"functionName":{"name":"cleanup_t_uint80","nativeSrc":"5970:16:20","nodeType":"YulIdentifier","src":"5970:16:20"},"nativeSrc":"5970:23:20","nodeType":"YulFunctionCall","src":"5970:23:20"}],"functionName":{"name":"eq","nativeSrc":"5960:2:20","nodeType":"YulIdentifier","src":"5960:2:20"},"nativeSrc":"5960:34:20","nodeType":"YulFunctionCall","src":"5960:34:20"}],"functionName":{"name":"iszero","nativeSrc":"5953:6:20","nodeType":"YulIdentifier","src":"5953:6:20"},"nativeSrc":"5953:42:20","nodeType":"YulFunctionCall","src":"5953:42:20"},"nativeSrc":"5950:62:20","nodeType":"YulIf","src":"5950:62:20"}]},"name":"validator_revert_t_uint80","nativeSrc":"5898:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5933:5:20","nodeType":"YulTypedName","src":"5933:5:20","type":""}],"src":"5898:120:20"},{"body":{"nativeSrc":"6086:79:20","nodeType":"YulBlock","src":"6086:79:20","statements":[{"nativeSrc":"6096:22:20","nodeType":"YulAssignment","src":"6096:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"6111:6:20","nodeType":"YulIdentifier","src":"6111:6:20"}],"functionName":{"name":"mload","nativeSrc":"6105:5:20","nodeType":"YulIdentifier","src":"6105:5:20"},"nativeSrc":"6105:13:20","nodeType":"YulFunctionCall","src":"6105:13:20"},"variableNames":[{"name":"value","nativeSrc":"6096:5:20","nodeType":"YulIdentifier","src":"6096:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6153:5:20","nodeType":"YulIdentifier","src":"6153:5:20"}],"functionName":{"name":"validator_revert_t_uint80","nativeSrc":"6127:25:20","nodeType":"YulIdentifier","src":"6127:25:20"},"nativeSrc":"6127:32:20","nodeType":"YulFunctionCall","src":"6127:32:20"},"nativeSrc":"6127:32:20","nodeType":"YulExpressionStatement","src":"6127:32:20"}]},"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"6024:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6064:6:20","nodeType":"YulTypedName","src":"6064:6:20","type":""},{"name":"end","nativeSrc":"6072:3:20","nodeType":"YulTypedName","src":"6072:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6080:5:20","nodeType":"YulTypedName","src":"6080:5:20","type":""}],"src":"6024:141:20"},{"body":{"nativeSrc":"6213:78:20","nodeType":"YulBlock","src":"6213:78:20","statements":[{"body":{"nativeSrc":"6269:16:20","nodeType":"YulBlock","src":"6269:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6278:1:20","nodeType":"YulLiteral","src":"6278:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"6281:1:20","nodeType":"YulLiteral","src":"6281:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6271:6:20","nodeType":"YulIdentifier","src":"6271:6:20"},"nativeSrc":"6271:12:20","nodeType":"YulFunctionCall","src":"6271:12:20"},"nativeSrc":"6271:12:20","nodeType":"YulExpressionStatement","src":"6271:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6236:5:20","nodeType":"YulIdentifier","src":"6236:5:20"},{"arguments":[{"name":"value","nativeSrc":"6260:5:20","nodeType":"YulIdentifier","src":"6260:5:20"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"6243:16:20","nodeType":"YulIdentifier","src":"6243:16:20"},"nativeSrc":"6243:23:20","nodeType":"YulFunctionCall","src":"6243:23:20"}],"functionName":{"name":"eq","nativeSrc":"6233:2:20","nodeType":"YulIdentifier","src":"6233:2:20"},"nativeSrc":"6233:34:20","nodeType":"YulFunctionCall","src":"6233:34:20"}],"functionName":{"name":"iszero","nativeSrc":"6226:6:20","nodeType":"YulIdentifier","src":"6226:6:20"},"nativeSrc":"6226:42:20","nodeType":"YulFunctionCall","src":"6226:42:20"},"nativeSrc":"6223:62:20","nodeType":"YulIf","src":"6223:62:20"}]},"name":"validator_revert_t_int256","nativeSrc":"6171:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6206:5:20","nodeType":"YulTypedName","src":"6206:5:20","type":""}],"src":"6171:120:20"},{"body":{"nativeSrc":"6359:79:20","nodeType":"YulBlock","src":"6359:79:20","statements":[{"nativeSrc":"6369:22:20","nodeType":"YulAssignment","src":"6369:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"6384:6:20","nodeType":"YulIdentifier","src":"6384:6:20"}],"functionName":{"name":"mload","nativeSrc":"6378:5:20","nodeType":"YulIdentifier","src":"6378:5:20"},"nativeSrc":"6378:13:20","nodeType":"YulFunctionCall","src":"6378:13:20"},"variableNames":[{"name":"value","nativeSrc":"6369:5:20","nodeType":"YulIdentifier","src":"6369:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6426:5:20","nodeType":"YulIdentifier","src":"6426:5:20"}],"functionName":{"name":"validator_revert_t_int256","nativeSrc":"6400:25:20","nodeType":"YulIdentifier","src":"6400:25:20"},"nativeSrc":"6400:32:20","nodeType":"YulFunctionCall","src":"6400:32:20"},"nativeSrc":"6400:32:20","nodeType":"YulExpressionStatement","src":"6400:32:20"}]},"name":"abi_decode_t_int256_fromMemory","nativeSrc":"6297:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6337:6:20","nodeType":"YulTypedName","src":"6337:6:20","type":""},{"name":"end","nativeSrc":"6345:3:20","nodeType":"YulTypedName","src":"6345:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6353:5:20","nodeType":"YulTypedName","src":"6353:5:20","type":""}],"src":"6297:141:20"},{"body":{"nativeSrc":"6507:80:20","nodeType":"YulBlock","src":"6507:80:20","statements":[{"nativeSrc":"6517:22:20","nodeType":"YulAssignment","src":"6517:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"6532:6:20","nodeType":"YulIdentifier","src":"6532:6:20"}],"functionName":{"name":"mload","nativeSrc":"6526:5:20","nodeType":"YulIdentifier","src":"6526:5:20"},"nativeSrc":"6526:13:20","nodeType":"YulFunctionCall","src":"6526:13:20"},"variableNames":[{"name":"value","nativeSrc":"6517:5:20","nodeType":"YulIdentifier","src":"6517:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6575:5:20","nodeType":"YulIdentifier","src":"6575:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"6548:26:20","nodeType":"YulIdentifier","src":"6548:26:20"},"nativeSrc":"6548:33:20","nodeType":"YulFunctionCall","src":"6548:33:20"},"nativeSrc":"6548:33:20","nodeType":"YulExpressionStatement","src":"6548:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"6444:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6485:6:20","nodeType":"YulTypedName","src":"6485:6:20","type":""},{"name":"end","nativeSrc":"6493:3:20","nodeType":"YulTypedName","src":"6493:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6501:5:20","nodeType":"YulTypedName","src":"6501:5:20","type":""}],"src":"6444:143:20"},{"body":{"nativeSrc":"6735:829:20","nodeType":"YulBlock","src":"6735:829:20","statements":[{"body":{"nativeSrc":"6782:83:20","nodeType":"YulBlock","src":"6782:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6784:77:20","nodeType":"YulIdentifier","src":"6784:77:20"},"nativeSrc":"6784:79:20","nodeType":"YulFunctionCall","src":"6784:79:20"},"nativeSrc":"6784:79:20","nodeType":"YulExpressionStatement","src":"6784:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6756:7:20","nodeType":"YulIdentifier","src":"6756:7:20"},{"name":"headStart","nativeSrc":"6765:9:20","nodeType":"YulIdentifier","src":"6765:9:20"}],"functionName":{"name":"sub","nativeSrc":"6752:3:20","nodeType":"YulIdentifier","src":"6752:3:20"},"nativeSrc":"6752:23:20","nodeType":"YulFunctionCall","src":"6752:23:20"},{"kind":"number","nativeSrc":"6777:3:20","nodeType":"YulLiteral","src":"6777:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"6748:3:20","nodeType":"YulIdentifier","src":"6748:3:20"},"nativeSrc":"6748:33:20","nodeType":"YulFunctionCall","src":"6748:33:20"},"nativeSrc":"6745:120:20","nodeType":"YulIf","src":"6745:120:20"},{"nativeSrc":"6875:127:20","nodeType":"YulBlock","src":"6875:127:20","statements":[{"nativeSrc":"6890:15:20","nodeType":"YulVariableDeclaration","src":"6890:15:20","value":{"kind":"number","nativeSrc":"6904:1:20","nodeType":"YulLiteral","src":"6904:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6894:6:20","nodeType":"YulTypedName","src":"6894:6:20","type":""}]},{"nativeSrc":"6919:73:20","nodeType":"YulAssignment","src":"6919:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6964:9:20","nodeType":"YulIdentifier","src":"6964:9:20"},{"name":"offset","nativeSrc":"6975:6:20","nodeType":"YulIdentifier","src":"6975:6:20"}],"functionName":{"name":"add","nativeSrc":"6960:3:20","nodeType":"YulIdentifier","src":"6960:3:20"},"nativeSrc":"6960:22:20","nodeType":"YulFunctionCall","src":"6960:22:20"},{"name":"dataEnd","nativeSrc":"6984:7:20","nodeType":"YulIdentifier","src":"6984:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"6929:30:20","nodeType":"YulIdentifier","src":"6929:30:20"},"nativeSrc":"6929:63:20","nodeType":"YulFunctionCall","src":"6929:63:20"},"variableNames":[{"name":"value0","nativeSrc":"6919:6:20","nodeType":"YulIdentifier","src":"6919:6:20"}]}]},{"nativeSrc":"7012:128:20","nodeType":"YulBlock","src":"7012:128:20","statements":[{"nativeSrc":"7027:16:20","nodeType":"YulVariableDeclaration","src":"7027:16:20","value":{"kind":"number","nativeSrc":"7041:2:20","nodeType":"YulLiteral","src":"7041:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7031:6:20","nodeType":"YulTypedName","src":"7031:6:20","type":""}]},{"nativeSrc":"7057:73:20","nodeType":"YulAssignment","src":"7057:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7102:9:20","nodeType":"YulIdentifier","src":"7102:9:20"},{"name":"offset","nativeSrc":"7113:6:20","nodeType":"YulIdentifier","src":"7113:6:20"}],"functionName":{"name":"add","nativeSrc":"7098:3:20","nodeType":"YulIdentifier","src":"7098:3:20"},"nativeSrc":"7098:22:20","nodeType":"YulFunctionCall","src":"7098:22:20"},{"name":"dataEnd","nativeSrc":"7122:7:20","nodeType":"YulIdentifier","src":"7122:7:20"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nativeSrc":"7067:30:20","nodeType":"YulIdentifier","src":"7067:30:20"},"nativeSrc":"7067:63:20","nodeType":"YulFunctionCall","src":"7067:63:20"},"variableNames":[{"name":"value1","nativeSrc":"7057:6:20","nodeType":"YulIdentifier","src":"7057:6:20"}]}]},{"nativeSrc":"7150:129:20","nodeType":"YulBlock","src":"7150:129:20","statements":[{"nativeSrc":"7165:16:20","nodeType":"YulVariableDeclaration","src":"7165:16:20","value":{"kind":"number","nativeSrc":"7179:2:20","nodeType":"YulLiteral","src":"7179:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"7169:6:20","nodeType":"YulTypedName","src":"7169:6:20","type":""}]},{"nativeSrc":"7195:74:20","nodeType":"YulAssignment","src":"7195:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7241:9:20","nodeType":"YulIdentifier","src":"7241:9:20"},{"name":"offset","nativeSrc":"7252:6:20","nodeType":"YulIdentifier","src":"7252:6:20"}],"functionName":{"name":"add","nativeSrc":"7237:3:20","nodeType":"YulIdentifier","src":"7237:3:20"},"nativeSrc":"7237:22:20","nodeType":"YulFunctionCall","src":"7237:22:20"},{"name":"dataEnd","nativeSrc":"7261:7:20","nodeType":"YulIdentifier","src":"7261:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"7205:31:20","nodeType":"YulIdentifier","src":"7205:31:20"},"nativeSrc":"7205:64:20","nodeType":"YulFunctionCall","src":"7205:64:20"},"variableNames":[{"name":"value2","nativeSrc":"7195:6:20","nodeType":"YulIdentifier","src":"7195:6:20"}]}]},{"nativeSrc":"7289:129:20","nodeType":"YulBlock","src":"7289:129:20","statements":[{"nativeSrc":"7304:16:20","nodeType":"YulVariableDeclaration","src":"7304:16:20","value":{"kind":"number","nativeSrc":"7318:2:20","nodeType":"YulLiteral","src":"7318:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"7308:6:20","nodeType":"YulTypedName","src":"7308:6:20","type":""}]},{"nativeSrc":"7334:74:20","nodeType":"YulAssignment","src":"7334:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7380:9:20","nodeType":"YulIdentifier","src":"7380:9:20"},{"name":"offset","nativeSrc":"7391:6:20","nodeType":"YulIdentifier","src":"7391:6:20"}],"functionName":{"name":"add","nativeSrc":"7376:3:20","nodeType":"YulIdentifier","src":"7376:3:20"},"nativeSrc":"7376:22:20","nodeType":"YulFunctionCall","src":"7376:22:20"},{"name":"dataEnd","nativeSrc":"7400:7:20","nodeType":"YulIdentifier","src":"7400:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"7344:31:20","nodeType":"YulIdentifier","src":"7344:31:20"},"nativeSrc":"7344:64:20","nodeType":"YulFunctionCall","src":"7344:64:20"},"variableNames":[{"name":"value3","nativeSrc":"7334:6:20","nodeType":"YulIdentifier","src":"7334:6:20"}]}]},{"nativeSrc":"7428:129:20","nodeType":"YulBlock","src":"7428:129:20","statements":[{"nativeSrc":"7443:17:20","nodeType":"YulVariableDeclaration","src":"7443:17:20","value":{"kind":"number","nativeSrc":"7457:3:20","nodeType":"YulLiteral","src":"7457:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"7447:6:20","nodeType":"YulTypedName","src":"7447:6:20","type":""}]},{"nativeSrc":"7474:73:20","nodeType":"YulAssignment","src":"7474:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7519:9:20","nodeType":"YulIdentifier","src":"7519:9:20"},{"name":"offset","nativeSrc":"7530:6:20","nodeType":"YulIdentifier","src":"7530:6:20"}],"functionName":{"name":"add","nativeSrc":"7515:3:20","nodeType":"YulIdentifier","src":"7515:3:20"},"nativeSrc":"7515:22:20","nodeType":"YulFunctionCall","src":"7515:22:20"},{"name":"dataEnd","nativeSrc":"7539:7:20","nodeType":"YulIdentifier","src":"7539:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"7484:30:20","nodeType":"YulIdentifier","src":"7484:30:20"},"nativeSrc":"7484:63:20","nodeType":"YulFunctionCall","src":"7484:63:20"},"variableNames":[{"name":"value4","nativeSrc":"7474:6:20","nodeType":"YulIdentifier","src":"7474:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nativeSrc":"6593:971:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6673:9:20","nodeType":"YulTypedName","src":"6673:9:20","type":""},{"name":"dataEnd","nativeSrc":"6684:7:20","nodeType":"YulTypedName","src":"6684:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6696:6:20","nodeType":"YulTypedName","src":"6696:6:20","type":""},{"name":"value1","nativeSrc":"6704:6:20","nodeType":"YulTypedName","src":"6704:6:20","type":""},{"name":"value2","nativeSrc":"6712:6:20","nodeType":"YulTypedName","src":"6712:6:20","type":""},{"name":"value3","nativeSrc":"6720:6:20","nodeType":"YulTypedName","src":"6720:6:20","type":""},{"name":"value4","nativeSrc":"6728:6:20","nodeType":"YulTypedName","src":"6728:6:20","type":""}],"src":"6593:971:20"},{"body":{"nativeSrc":"7676:70:20","nodeType":"YulBlock","src":"7676:70:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7698:6:20","nodeType":"YulIdentifier","src":"7698:6:20"},{"kind":"number","nativeSrc":"7706:1:20","nodeType":"YulLiteral","src":"7706:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7694:3:20","nodeType":"YulIdentifier","src":"7694:3:20"},"nativeSrc":"7694:14:20","nodeType":"YulFunctionCall","src":"7694:14:20"},{"hexValue":"50726963652066656564206e6f742073657420666f7220455448","kind":"string","nativeSrc":"7710:28:20","nodeType":"YulLiteral","src":"7710:28:20","type":"","value":"Price feed not set for ETH"}],"functionName":{"name":"mstore","nativeSrc":"7687:6:20","nodeType":"YulIdentifier","src":"7687:6:20"},"nativeSrc":"7687:52:20","nodeType":"YulFunctionCall","src":"7687:52:20"},"nativeSrc":"7687:52:20","nodeType":"YulExpressionStatement","src":"7687:52:20"}]},"name":"store_literal_in_memory_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d","nativeSrc":"7570:176:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7668:6:20","nodeType":"YulTypedName","src":"7668:6:20","type":""}],"src":"7570:176:20"},{"body":{"nativeSrc":"7898:220:20","nodeType":"YulBlock","src":"7898:220:20","statements":[{"nativeSrc":"7908:74:20","nodeType":"YulAssignment","src":"7908:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"7974:3:20","nodeType":"YulIdentifier","src":"7974:3:20"},{"kind":"number","nativeSrc":"7979:2:20","nodeType":"YulLiteral","src":"7979:2:20","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7915:58:20","nodeType":"YulIdentifier","src":"7915:58:20"},"nativeSrc":"7915:67:20","nodeType":"YulFunctionCall","src":"7915:67:20"},"variableNames":[{"name":"pos","nativeSrc":"7908:3:20","nodeType":"YulIdentifier","src":"7908:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8080:3:20","nodeType":"YulIdentifier","src":"8080:3:20"}],"functionName":{"name":"store_literal_in_memory_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d","nativeSrc":"7991:88:20","nodeType":"YulIdentifier","src":"7991:88:20"},"nativeSrc":"7991:93:20","nodeType":"YulFunctionCall","src":"7991:93:20"},"nativeSrc":"7991:93:20","nodeType":"YulExpressionStatement","src":"7991:93:20"},{"nativeSrc":"8093:19:20","nodeType":"YulAssignment","src":"8093:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"8104:3:20","nodeType":"YulIdentifier","src":"8104:3:20"},{"kind":"number","nativeSrc":"8109:2:20","nodeType":"YulLiteral","src":"8109:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8100:3:20","nodeType":"YulIdentifier","src":"8100:3:20"},"nativeSrc":"8100:12:20","nodeType":"YulFunctionCall","src":"8100:12:20"},"variableNames":[{"name":"end","nativeSrc":"8093:3:20","nodeType":"YulIdentifier","src":"8093:3:20"}]}]},"name":"abi_encode_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d_to_t_string_memory_ptr_fromStack","nativeSrc":"7752:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7886:3:20","nodeType":"YulTypedName","src":"7886:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7894:3:20","nodeType":"YulTypedName","src":"7894:3:20","type":""}],"src":"7752:366:20"},{"body":{"nativeSrc":"8295:248:20","nodeType":"YulBlock","src":"8295:248:20","statements":[{"nativeSrc":"8305:26:20","nodeType":"YulAssignment","src":"8305:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"8317:9:20","nodeType":"YulIdentifier","src":"8317:9:20"},{"kind":"number","nativeSrc":"8328:2:20","nodeType":"YulLiteral","src":"8328:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8313:3:20","nodeType":"YulIdentifier","src":"8313:3:20"},"nativeSrc":"8313:18:20","nodeType":"YulFunctionCall","src":"8313:18:20"},"variableNames":[{"name":"tail","nativeSrc":"8305:4:20","nodeType":"YulIdentifier","src":"8305:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8352:9:20","nodeType":"YulIdentifier","src":"8352:9:20"},{"kind":"number","nativeSrc":"8363:1:20","nodeType":"YulLiteral","src":"8363:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8348:3:20","nodeType":"YulIdentifier","src":"8348:3:20"},"nativeSrc":"8348:17:20","nodeType":"YulFunctionCall","src":"8348:17:20"},{"arguments":[{"name":"tail","nativeSrc":"8371:4:20","nodeType":"YulIdentifier","src":"8371:4:20"},{"name":"headStart","nativeSrc":"8377:9:20","nodeType":"YulIdentifier","src":"8377:9:20"}],"functionName":{"name":"sub","nativeSrc":"8367:3:20","nodeType":"YulIdentifier","src":"8367:3:20"},"nativeSrc":"8367:20:20","nodeType":"YulFunctionCall","src":"8367:20:20"}],"functionName":{"name":"mstore","nativeSrc":"8341:6:20","nodeType":"YulIdentifier","src":"8341:6:20"},"nativeSrc":"8341:47:20","nodeType":"YulFunctionCall","src":"8341:47:20"},"nativeSrc":"8341:47:20","nodeType":"YulExpressionStatement","src":"8341:47:20"},{"nativeSrc":"8397:139:20","nodeType":"YulAssignment","src":"8397:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"8531:4:20","nodeType":"YulIdentifier","src":"8531:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d_to_t_string_memory_ptr_fromStack","nativeSrc":"8405:124:20","nodeType":"YulIdentifier","src":"8405:124:20"},"nativeSrc":"8405:131:20","nodeType":"YulFunctionCall","src":"8405:131:20"},"variableNames":[{"name":"tail","nativeSrc":"8397:4:20","nodeType":"YulIdentifier","src":"8397:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8124:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8275:9:20","nodeType":"YulTypedName","src":"8275:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8290:4:20","nodeType":"YulTypedName","src":"8290:4:20","type":""}],"src":"8124:419:20"},{"body":{"nativeSrc":"8625:273:20","nodeType":"YulBlock","src":"8625:273:20","statements":[{"body":{"nativeSrc":"8671:83:20","nodeType":"YulBlock","src":"8671:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8673:77:20","nodeType":"YulIdentifier","src":"8673:77:20"},"nativeSrc":"8673:79:20","nodeType":"YulFunctionCall","src":"8673:79:20"},"nativeSrc":"8673:79:20","nodeType":"YulExpressionStatement","src":"8673:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8646:7:20","nodeType":"YulIdentifier","src":"8646:7:20"},{"name":"headStart","nativeSrc":"8655:9:20","nodeType":"YulIdentifier","src":"8655:9:20"}],"functionName":{"name":"sub","nativeSrc":"8642:3:20","nodeType":"YulIdentifier","src":"8642:3:20"},"nativeSrc":"8642:23:20","nodeType":"YulFunctionCall","src":"8642:23:20"},{"kind":"number","nativeSrc":"8667:2:20","nodeType":"YulLiteral","src":"8667:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8638:3:20","nodeType":"YulIdentifier","src":"8638:3:20"},"nativeSrc":"8638:32:20","nodeType":"YulFunctionCall","src":"8638:32:20"},"nativeSrc":"8635:119:20","nodeType":"YulIf","src":"8635:119:20"},{"nativeSrc":"8764:127:20","nodeType":"YulBlock","src":"8764:127:20","statements":[{"nativeSrc":"8779:15:20","nodeType":"YulVariableDeclaration","src":"8779:15:20","value":{"kind":"number","nativeSrc":"8793:1:20","nodeType":"YulLiteral","src":"8793:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8783:6:20","nodeType":"YulTypedName","src":"8783:6:20","type":""}]},{"nativeSrc":"8808:73:20","nodeType":"YulAssignment","src":"8808:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8853:9:20","nodeType":"YulIdentifier","src":"8853:9:20"},{"name":"offset","nativeSrc":"8864:6:20","nodeType":"YulIdentifier","src":"8864:6:20"}],"functionName":{"name":"add","nativeSrc":"8849:3:20","nodeType":"YulIdentifier","src":"8849:3:20"},"nativeSrc":"8849:22:20","nodeType":"YulFunctionCall","src":"8849:22:20"},{"name":"dataEnd","nativeSrc":"8873:7:20","nodeType":"YulIdentifier","src":"8873:7:20"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nativeSrc":"8818:30:20","nodeType":"YulIdentifier","src":"8818:30:20"},"nativeSrc":"8818:63:20","nodeType":"YulFunctionCall","src":"8818:63:20"},"variableNames":[{"name":"value0","nativeSrc":"8808:6:20","nodeType":"YulIdentifier","src":"8808:6:20"}]}]}]},"name":"abi_decode_tuple_t_int256_fromMemory","nativeSrc":"8549:349:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8595:9:20","nodeType":"YulTypedName","src":"8595:9:20","type":""},{"name":"dataEnd","nativeSrc":"8606:7:20","nodeType":"YulTypedName","src":"8606:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8618:6:20","nodeType":"YulTypedName","src":"8618:6:20","type":""}],"src":"8549:349:20"},{"body":{"nativeSrc":"9010:61:20","nodeType":"YulBlock","src":"9010:61:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9032:6:20","nodeType":"YulIdentifier","src":"9032:6:20"},{"kind":"number","nativeSrc":"9040:1:20","nodeType":"YulLiteral","src":"9040:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9028:3:20","nodeType":"YulIdentifier","src":"9028:3:20"},"nativeSrc":"9028:14:20","nodeType":"YulFunctionCall","src":"9028:14:20"},{"hexValue":"496e76616c696420455448207072696365","kind":"string","nativeSrc":"9044:19:20","nodeType":"YulLiteral","src":"9044:19:20","type":"","value":"Invalid ETH price"}],"functionName":{"name":"mstore","nativeSrc":"9021:6:20","nodeType":"YulIdentifier","src":"9021:6:20"},"nativeSrc":"9021:43:20","nodeType":"YulFunctionCall","src":"9021:43:20"},"nativeSrc":"9021:43:20","nodeType":"YulExpressionStatement","src":"9021:43:20"}]},"name":"store_literal_in_memory_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff","nativeSrc":"8904:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9002:6:20","nodeType":"YulTypedName","src":"9002:6:20","type":""}],"src":"8904:167:20"},{"body":{"nativeSrc":"9223:220:20","nodeType":"YulBlock","src":"9223:220:20","statements":[{"nativeSrc":"9233:74:20","nodeType":"YulAssignment","src":"9233:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"9299:3:20","nodeType":"YulIdentifier","src":"9299:3:20"},{"kind":"number","nativeSrc":"9304:2:20","nodeType":"YulLiteral","src":"9304:2:20","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9240:58:20","nodeType":"YulIdentifier","src":"9240:58:20"},"nativeSrc":"9240:67:20","nodeType":"YulFunctionCall","src":"9240:67:20"},"variableNames":[{"name":"pos","nativeSrc":"9233:3:20","nodeType":"YulIdentifier","src":"9233:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9405:3:20","nodeType":"YulIdentifier","src":"9405:3:20"}],"functionName":{"name":"store_literal_in_memory_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff","nativeSrc":"9316:88:20","nodeType":"YulIdentifier","src":"9316:88:20"},"nativeSrc":"9316:93:20","nodeType":"YulFunctionCall","src":"9316:93:20"},"nativeSrc":"9316:93:20","nodeType":"YulExpressionStatement","src":"9316:93:20"},{"nativeSrc":"9418:19:20","nodeType":"YulAssignment","src":"9418:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"9429:3:20","nodeType":"YulIdentifier","src":"9429:3:20"},{"kind":"number","nativeSrc":"9434:2:20","nodeType":"YulLiteral","src":"9434:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9425:3:20","nodeType":"YulIdentifier","src":"9425:3:20"},"nativeSrc":"9425:12:20","nodeType":"YulFunctionCall","src":"9425:12:20"},"variableNames":[{"name":"end","nativeSrc":"9418:3:20","nodeType":"YulIdentifier","src":"9418:3:20"}]}]},"name":"abi_encode_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff_to_t_string_memory_ptr_fromStack","nativeSrc":"9077:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9211:3:20","nodeType":"YulTypedName","src":"9211:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9219:3:20","nodeType":"YulTypedName","src":"9219:3:20","type":""}],"src":"9077:366:20"},{"body":{"nativeSrc":"9620:248:20","nodeType":"YulBlock","src":"9620:248:20","statements":[{"nativeSrc":"9630:26:20","nodeType":"YulAssignment","src":"9630:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9642:9:20","nodeType":"YulIdentifier","src":"9642:9:20"},{"kind":"number","nativeSrc":"9653:2:20","nodeType":"YulLiteral","src":"9653:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9638:3:20","nodeType":"YulIdentifier","src":"9638:3:20"},"nativeSrc":"9638:18:20","nodeType":"YulFunctionCall","src":"9638:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9630:4:20","nodeType":"YulIdentifier","src":"9630:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9677:9:20","nodeType":"YulIdentifier","src":"9677:9:20"},{"kind":"number","nativeSrc":"9688:1:20","nodeType":"YulLiteral","src":"9688:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9673:3:20","nodeType":"YulIdentifier","src":"9673:3:20"},"nativeSrc":"9673:17:20","nodeType":"YulFunctionCall","src":"9673:17:20"},{"arguments":[{"name":"tail","nativeSrc":"9696:4:20","nodeType":"YulIdentifier","src":"9696:4:20"},{"name":"headStart","nativeSrc":"9702:9:20","nodeType":"YulIdentifier","src":"9702:9:20"}],"functionName":{"name":"sub","nativeSrc":"9692:3:20","nodeType":"YulIdentifier","src":"9692:3:20"},"nativeSrc":"9692:20:20","nodeType":"YulFunctionCall","src":"9692:20:20"}],"functionName":{"name":"mstore","nativeSrc":"9666:6:20","nodeType":"YulIdentifier","src":"9666:6:20"},"nativeSrc":"9666:47:20","nodeType":"YulFunctionCall","src":"9666:47:20"},"nativeSrc":"9666:47:20","nodeType":"YulExpressionStatement","src":"9666:47:20"},{"nativeSrc":"9722:139:20","nodeType":"YulAssignment","src":"9722:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"9856:4:20","nodeType":"YulIdentifier","src":"9856:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff_to_t_string_memory_ptr_fromStack","nativeSrc":"9730:124:20","nodeType":"YulIdentifier","src":"9730:124:20"},"nativeSrc":"9730:131:20","nodeType":"YulFunctionCall","src":"9730:131:20"},"variableNames":[{"name":"tail","nativeSrc":"9722:4:20","nodeType":"YulIdentifier","src":"9722:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9449:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9600:9:20","nodeType":"YulTypedName","src":"9600:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9615:4:20","nodeType":"YulTypedName","src":"9615:4:20","type":""}],"src":"9449:419:20"},{"body":{"nativeSrc":"9902:152:20","nodeType":"YulBlock","src":"9902:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9919:1:20","nodeType":"YulLiteral","src":"9919:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9922:77:20","nodeType":"YulLiteral","src":"9922:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9912:6:20","nodeType":"YulIdentifier","src":"9912:6:20"},"nativeSrc":"9912:88:20","nodeType":"YulFunctionCall","src":"9912:88:20"},"nativeSrc":"9912:88:20","nodeType":"YulExpressionStatement","src":"9912:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10016:1:20","nodeType":"YulLiteral","src":"10016:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"10019:4:20","nodeType":"YulLiteral","src":"10019:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"10009:6:20","nodeType":"YulIdentifier","src":"10009:6:20"},"nativeSrc":"10009:15:20","nodeType":"YulFunctionCall","src":"10009:15:20"},"nativeSrc":"10009:15:20","nodeType":"YulExpressionStatement","src":"10009:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10040:1:20","nodeType":"YulLiteral","src":"10040:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10043:4:20","nodeType":"YulLiteral","src":"10043:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10033:6:20","nodeType":"YulIdentifier","src":"10033:6:20"},"nativeSrc":"10033:15:20","nodeType":"YulFunctionCall","src":"10033:15:20"},"nativeSrc":"10033:15:20","nodeType":"YulExpressionStatement","src":"10033:15:20"}]},"name":"panic_error_0x11","nativeSrc":"9874:180:20","nodeType":"YulFunctionDefinition","src":"9874:180:20"},{"body":{"nativeSrc":"10108:362:20","nodeType":"YulBlock","src":"10108:362:20","statements":[{"nativeSrc":"10118:25:20","nodeType":"YulAssignment","src":"10118:25:20","value":{"arguments":[{"name":"x","nativeSrc":"10141:1:20","nodeType":"YulIdentifier","src":"10141:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10123:17:20","nodeType":"YulIdentifier","src":"10123:17:20"},"nativeSrc":"10123:20:20","nodeType":"YulFunctionCall","src":"10123:20:20"},"variableNames":[{"name":"x","nativeSrc":"10118:1:20","nodeType":"YulIdentifier","src":"10118:1:20"}]},{"nativeSrc":"10152:25:20","nodeType":"YulAssignment","src":"10152:25:20","value":{"arguments":[{"name":"y","nativeSrc":"10175:1:20","nodeType":"YulIdentifier","src":"10175:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10157:17:20","nodeType":"YulIdentifier","src":"10157:17:20"},"nativeSrc":"10157:20:20","nodeType":"YulFunctionCall","src":"10157:20:20"},"variableNames":[{"name":"y","nativeSrc":"10152:1:20","nodeType":"YulIdentifier","src":"10152:1:20"}]},{"nativeSrc":"10186:28:20","nodeType":"YulVariableDeclaration","src":"10186:28:20","value":{"arguments":[{"name":"x","nativeSrc":"10209:1:20","nodeType":"YulIdentifier","src":"10209:1:20"},{"name":"y","nativeSrc":"10212:1:20","nodeType":"YulIdentifier","src":"10212:1:20"}],"functionName":{"name":"mul","nativeSrc":"10205:3:20","nodeType":"YulIdentifier","src":"10205:3:20"},"nativeSrc":"10205:9:20","nodeType":"YulFunctionCall","src":"10205:9:20"},"variables":[{"name":"product_raw","nativeSrc":"10190:11:20","nodeType":"YulTypedName","src":"10190:11:20","type":""}]},{"nativeSrc":"10223:41:20","nodeType":"YulAssignment","src":"10223:41:20","value":{"arguments":[{"name":"product_raw","nativeSrc":"10252:11:20","nodeType":"YulIdentifier","src":"10252:11:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10234:17:20","nodeType":"YulIdentifier","src":"10234:17:20"},"nativeSrc":"10234:30:20","nodeType":"YulFunctionCall","src":"10234:30:20"},"variableNames":[{"name":"product","nativeSrc":"10223:7:20","nodeType":"YulIdentifier","src":"10223:7:20"}]},{"body":{"nativeSrc":"10441:22:20","nodeType":"YulBlock","src":"10441:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10443:16:20","nodeType":"YulIdentifier","src":"10443:16:20"},"nativeSrc":"10443:18:20","nodeType":"YulFunctionCall","src":"10443:18:20"},"nativeSrc":"10443:18:20","nodeType":"YulExpressionStatement","src":"10443:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10374:1:20","nodeType":"YulIdentifier","src":"10374:1:20"}],"functionName":{"name":"iszero","nativeSrc":"10367:6:20","nodeType":"YulIdentifier","src":"10367:6:20"},"nativeSrc":"10367:9:20","nodeType":"YulFunctionCall","src":"10367:9:20"},{"arguments":[{"name":"y","nativeSrc":"10397:1:20","nodeType":"YulIdentifier","src":"10397:1:20"},{"arguments":[{"name":"product","nativeSrc":"10404:7:20","nodeType":"YulIdentifier","src":"10404:7:20"},{"name":"x","nativeSrc":"10413:1:20","nodeType":"YulIdentifier","src":"10413:1:20"}],"functionName":{"name":"div","nativeSrc":"10400:3:20","nodeType":"YulIdentifier","src":"10400:3:20"},"nativeSrc":"10400:15:20","nodeType":"YulFunctionCall","src":"10400:15:20"}],"functionName":{"name":"eq","nativeSrc":"10394:2:20","nodeType":"YulIdentifier","src":"10394:2:20"},"nativeSrc":"10394:22:20","nodeType":"YulFunctionCall","src":"10394:22:20"}],"functionName":{"name":"or","nativeSrc":"10347:2:20","nodeType":"YulIdentifier","src":"10347:2:20"},"nativeSrc":"10347:83:20","nodeType":"YulFunctionCall","src":"10347:83:20"}],"functionName":{"name":"iszero","nativeSrc":"10327:6:20","nodeType":"YulIdentifier","src":"10327:6:20"},"nativeSrc":"10327:113:20","nodeType":"YulFunctionCall","src":"10327:113:20"},"nativeSrc":"10324:139:20","nodeType":"YulIf","src":"10324:139:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"10060:410:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10091:1:20","nodeType":"YulTypedName","src":"10091:1:20","type":""},{"name":"y","nativeSrc":"10094:1:20","nodeType":"YulTypedName","src":"10094:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10100:7:20","nodeType":"YulTypedName","src":"10100:7:20","type":""}],"src":"10060:410:20"},{"body":{"nativeSrc":"10504:152:20","nodeType":"YulBlock","src":"10504:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10521:1:20","nodeType":"YulLiteral","src":"10521:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10524:77:20","nodeType":"YulLiteral","src":"10524:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10514:6:20","nodeType":"YulIdentifier","src":"10514:6:20"},"nativeSrc":"10514:88:20","nodeType":"YulFunctionCall","src":"10514:88:20"},"nativeSrc":"10514:88:20","nodeType":"YulExpressionStatement","src":"10514:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10618:1:20","nodeType":"YulLiteral","src":"10618:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"10621:4:20","nodeType":"YulLiteral","src":"10621:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10611:6:20","nodeType":"YulIdentifier","src":"10611:6:20"},"nativeSrc":"10611:15:20","nodeType":"YulFunctionCall","src":"10611:15:20"},"nativeSrc":"10611:15:20","nodeType":"YulExpressionStatement","src":"10611:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10642:1:20","nodeType":"YulLiteral","src":"10642:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10645:4:20","nodeType":"YulLiteral","src":"10645:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10635:6:20","nodeType":"YulIdentifier","src":"10635:6:20"},"nativeSrc":"10635:15:20","nodeType":"YulFunctionCall","src":"10635:15:20"},"nativeSrc":"10635:15:20","nodeType":"YulExpressionStatement","src":"10635:15:20"}]},"name":"panic_error_0x12","nativeSrc":"10476:180:20","nodeType":"YulFunctionDefinition","src":"10476:180:20"},{"body":{"nativeSrc":"10704:143:20","nodeType":"YulBlock","src":"10704:143:20","statements":[{"nativeSrc":"10714:25:20","nodeType":"YulAssignment","src":"10714:25:20","value":{"arguments":[{"name":"x","nativeSrc":"10737:1:20","nodeType":"YulIdentifier","src":"10737:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10719:17:20","nodeType":"YulIdentifier","src":"10719:17:20"},"nativeSrc":"10719:20:20","nodeType":"YulFunctionCall","src":"10719:20:20"},"variableNames":[{"name":"x","nativeSrc":"10714:1:20","nodeType":"YulIdentifier","src":"10714:1:20"}]},{"nativeSrc":"10748:25:20","nodeType":"YulAssignment","src":"10748:25:20","value":{"arguments":[{"name":"y","nativeSrc":"10771:1:20","nodeType":"YulIdentifier","src":"10771:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10753:17:20","nodeType":"YulIdentifier","src":"10753:17:20"},"nativeSrc":"10753:20:20","nodeType":"YulFunctionCall","src":"10753:20:20"},"variableNames":[{"name":"y","nativeSrc":"10748:1:20","nodeType":"YulIdentifier","src":"10748:1:20"}]},{"body":{"nativeSrc":"10795:22:20","nodeType":"YulBlock","src":"10795:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"10797:16:20","nodeType":"YulIdentifier","src":"10797:16:20"},"nativeSrc":"10797:18:20","nodeType":"YulFunctionCall","src":"10797:18:20"},"nativeSrc":"10797:18:20","nodeType":"YulExpressionStatement","src":"10797:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"10792:1:20","nodeType":"YulIdentifier","src":"10792:1:20"}],"functionName":{"name":"iszero","nativeSrc":"10785:6:20","nodeType":"YulIdentifier","src":"10785:6:20"},"nativeSrc":"10785:9:20","nodeType":"YulFunctionCall","src":"10785:9:20"},"nativeSrc":"10782:35:20","nodeType":"YulIf","src":"10782:35:20"},{"nativeSrc":"10827:14:20","nodeType":"YulAssignment","src":"10827:14:20","value":{"arguments":[{"name":"x","nativeSrc":"10836:1:20","nodeType":"YulIdentifier","src":"10836:1:20"},{"name":"y","nativeSrc":"10839:1:20","nodeType":"YulIdentifier","src":"10839:1:20"}],"functionName":{"name":"div","nativeSrc":"10832:3:20","nodeType":"YulIdentifier","src":"10832:3:20"},"nativeSrc":"10832:9:20","nodeType":"YulFunctionCall","src":"10832:9:20"},"variableNames":[{"name":"r","nativeSrc":"10827:1:20","nodeType":"YulIdentifier","src":"10827:1:20"}]}]},"name":"checked_div_t_uint256","nativeSrc":"10662:185:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10693:1:20","nodeType":"YulTypedName","src":"10693:1:20","type":""},{"name":"y","nativeSrc":"10696:1:20","nodeType":"YulTypedName","src":"10696:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"10702:1:20","nodeType":"YulTypedName","src":"10702:1:20","type":""}],"src":"10662:185:20"},{"body":{"nativeSrc":"10918:53:20","nodeType":"YulBlock","src":"10918:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10935:3:20","nodeType":"YulIdentifier","src":"10935:3:20"},{"arguments":[{"name":"value","nativeSrc":"10958:5:20","nodeType":"YulIdentifier","src":"10958:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"10940:17:20","nodeType":"YulIdentifier","src":"10940:17:20"},"nativeSrc":"10940:24:20","nodeType":"YulFunctionCall","src":"10940:24:20"}],"functionName":{"name":"mstore","nativeSrc":"10928:6:20","nodeType":"YulIdentifier","src":"10928:6:20"},"nativeSrc":"10928:37:20","nodeType":"YulFunctionCall","src":"10928:37:20"},"nativeSrc":"10928:37:20","nodeType":"YulExpressionStatement","src":"10928:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10853:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10906:5:20","nodeType":"YulTypedName","src":"10906:5:20","type":""},{"name":"pos","nativeSrc":"10913:3:20","nodeType":"YulTypedName","src":"10913:3:20","type":""}],"src":"10853:118:20"},{"body":{"nativeSrc":"11075:124:20","nodeType":"YulBlock","src":"11075:124:20","statements":[{"nativeSrc":"11085:26:20","nodeType":"YulAssignment","src":"11085:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11097:9:20","nodeType":"YulIdentifier","src":"11097:9:20"},{"kind":"number","nativeSrc":"11108:2:20","nodeType":"YulLiteral","src":"11108:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11093:3:20","nodeType":"YulIdentifier","src":"11093:3:20"},"nativeSrc":"11093:18:20","nodeType":"YulFunctionCall","src":"11093:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11085:4:20","nodeType":"YulIdentifier","src":"11085:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11165:6:20","nodeType":"YulIdentifier","src":"11165:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11178:9:20","nodeType":"YulIdentifier","src":"11178:9:20"},{"kind":"number","nativeSrc":"11189:1:20","nodeType":"YulLiteral","src":"11189:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11174:3:20","nodeType":"YulIdentifier","src":"11174:3:20"},"nativeSrc":"11174:17:20","nodeType":"YulFunctionCall","src":"11174:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11121:43:20","nodeType":"YulIdentifier","src":"11121:43:20"},"nativeSrc":"11121:71:20","nodeType":"YulFunctionCall","src":"11121:71:20"},"nativeSrc":"11121:71:20","nodeType":"YulExpressionStatement","src":"11121:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"10977:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11047:9:20","nodeType":"YulTypedName","src":"11047:9:20","type":""},{"name":"value0","nativeSrc":"11059:6:20","nodeType":"YulTypedName","src":"11059:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11070:4:20","nodeType":"YulTypedName","src":"11070:4:20","type":""}],"src":"10977:222:20"},{"body":{"nativeSrc":"11311:57:20","nodeType":"YulBlock","src":"11311:57:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11333:6:20","nodeType":"YulIdentifier","src":"11333:6:20"},{"kind":"number","nativeSrc":"11341:1:20","nodeType":"YulLiteral","src":"11341:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11329:3:20","nodeType":"YulIdentifier","src":"11329:3:20"},"nativeSrc":"11329:14:20","nodeType":"YulFunctionCall","src":"11329:14:20"},{"hexValue":"496e76616c6964207072696365","kind":"string","nativeSrc":"11345:15:20","nodeType":"YulLiteral","src":"11345:15:20","type":"","value":"Invalid price"}],"functionName":{"name":"mstore","nativeSrc":"11322:6:20","nodeType":"YulIdentifier","src":"11322:6:20"},"nativeSrc":"11322:39:20","nodeType":"YulFunctionCall","src":"11322:39:20"},"nativeSrc":"11322:39:20","nodeType":"YulExpressionStatement","src":"11322:39:20"}]},"name":"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","nativeSrc":"11205:163:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11303:6:20","nodeType":"YulTypedName","src":"11303:6:20","type":""}],"src":"11205:163:20"},{"body":{"nativeSrc":"11520:220:20","nodeType":"YulBlock","src":"11520:220:20","statements":[{"nativeSrc":"11530:74:20","nodeType":"YulAssignment","src":"11530:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"11596:3:20","nodeType":"YulIdentifier","src":"11596:3:20"},{"kind":"number","nativeSrc":"11601:2:20","nodeType":"YulLiteral","src":"11601:2:20","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11537:58:20","nodeType":"YulIdentifier","src":"11537:58:20"},"nativeSrc":"11537:67:20","nodeType":"YulFunctionCall","src":"11537:67:20"},"variableNames":[{"name":"pos","nativeSrc":"11530:3:20","nodeType":"YulIdentifier","src":"11530:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11702:3:20","nodeType":"YulIdentifier","src":"11702:3:20"}],"functionName":{"name":"store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","nativeSrc":"11613:88:20","nodeType":"YulIdentifier","src":"11613:88:20"},"nativeSrc":"11613:93:20","nodeType":"YulFunctionCall","src":"11613:93:20"},"nativeSrc":"11613:93:20","nodeType":"YulExpressionStatement","src":"11613:93:20"},{"nativeSrc":"11715:19:20","nodeType":"YulAssignment","src":"11715:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"11726:3:20","nodeType":"YulIdentifier","src":"11726:3:20"},{"kind":"number","nativeSrc":"11731:2:20","nodeType":"YulLiteral","src":"11731:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11722:3:20","nodeType":"YulIdentifier","src":"11722:3:20"},"nativeSrc":"11722:12:20","nodeType":"YulFunctionCall","src":"11722:12:20"},"variableNames":[{"name":"end","nativeSrc":"11715:3:20","nodeType":"YulIdentifier","src":"11715:3:20"}]}]},"name":"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack","nativeSrc":"11374:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11508:3:20","nodeType":"YulTypedName","src":"11508:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11516:3:20","nodeType":"YulTypedName","src":"11516:3:20","type":""}],"src":"11374:366:20"},{"body":{"nativeSrc":"11917:248:20","nodeType":"YulBlock","src":"11917:248:20","statements":[{"nativeSrc":"11927:26:20","nodeType":"YulAssignment","src":"11927:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11939:9:20","nodeType":"YulIdentifier","src":"11939:9:20"},{"kind":"number","nativeSrc":"11950:2:20","nodeType":"YulLiteral","src":"11950:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11935:3:20","nodeType":"YulIdentifier","src":"11935:3:20"},"nativeSrc":"11935:18:20","nodeType":"YulFunctionCall","src":"11935:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11927:4:20","nodeType":"YulIdentifier","src":"11927:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11974:9:20","nodeType":"YulIdentifier","src":"11974:9:20"},{"kind":"number","nativeSrc":"11985:1:20","nodeType":"YulLiteral","src":"11985:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11970:3:20","nodeType":"YulIdentifier","src":"11970:3:20"},"nativeSrc":"11970:17:20","nodeType":"YulFunctionCall","src":"11970:17:20"},{"arguments":[{"name":"tail","nativeSrc":"11993:4:20","nodeType":"YulIdentifier","src":"11993:4:20"},{"name":"headStart","nativeSrc":"11999:9:20","nodeType":"YulIdentifier","src":"11999:9:20"}],"functionName":{"name":"sub","nativeSrc":"11989:3:20","nodeType":"YulIdentifier","src":"11989:3:20"},"nativeSrc":"11989:20:20","nodeType":"YulFunctionCall","src":"11989:20:20"}],"functionName":{"name":"mstore","nativeSrc":"11963:6:20","nodeType":"YulIdentifier","src":"11963:6:20"},"nativeSrc":"11963:47:20","nodeType":"YulFunctionCall","src":"11963:47:20"},"nativeSrc":"11963:47:20","nodeType":"YulExpressionStatement","src":"11963:47:20"},{"nativeSrc":"12019:139:20","nodeType":"YulAssignment","src":"12019:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"12153:4:20","nodeType":"YulIdentifier","src":"12153:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack","nativeSrc":"12027:124:20","nodeType":"YulIdentifier","src":"12027:124:20"},"nativeSrc":"12027:131:20","nodeType":"YulFunctionCall","src":"12027:131:20"},"variableNames":[{"name":"tail","nativeSrc":"12019:4:20","nodeType":"YulIdentifier","src":"12019:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11746:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11897:9:20","nodeType":"YulTypedName","src":"11897:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11912:4:20","nodeType":"YulTypedName","src":"11912:4:20","type":""}],"src":"11746:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price feed not set for this toke\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d7b2b01cf8b12084c7e1c2a8d15c56c4bc26b43597ac6876062bd690a25c934_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price feed not set for ETH\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c827b2b8eb5ceda9d7ff2826ff7012d52dcefa359a256cbbef903b57dfc436d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ETH price\")\n\n    }\n\n    function abi_encode_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1183df88e36fe6e57cf0bf0cefcb5b2ef25f6c832d8a2a8cfb9d04c687354cff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price\")\n\n    }\n\n    function abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80639dcb511a1161005b5780639dcb511a14610125578063a0a8045e14610155578063d2fe163114610173578063f08a25ed146101a357610088565b806316345f181461008d57806323ebc76e146100bd578063332c6397146100ed57806376e1128614610109575b600080fd5b6100a760048036038101906100a2919061084e565b6101d3565b6040516100b49190610894565b60405180910390f35b6100d760048036038101906100d291906108e5565b610327565b6040516100e49190610921565b60405180910390f35b6101076004803603810190610102919061093c565b61033f565b005b610123600480360381019061011e919061097c565b6103d9565b005b61013f600480360381019061013a919061084e565b61045a565b60405161014c9190610a1b565b60405180910390f35b61015d61048d565b60405161016a9190610894565b60405180910390f35b61018d6004803603810190610188919061084e565b6105df565b60405161019a9190610921565b60405180910390f35b6101bd60048036038101906101b8919061093c565b6105f7565b6040516101ca9190610921565b60405180910390f35b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610ab9565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103179190610b5c565b5050509150508092505050919050565b60016020528060005260406000206000915090505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610390578060016000468152602001908152602001600020819055506103d5565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000808073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610c23565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610b5c565b505050915050809250505090565b60026020528060005260406000206000915090505481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107055760003073ffffffffffffffffffffffffffffffffffffffff1663a0a8045e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610c43565b9050600081136106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990610cbc565b60405180910390fd5b6305f5e10081846106f39190610d0b565b6106fd9190610d7c565b9150506107e5565b60003073ffffffffffffffffffffffffffffffffffffffff166316345f18856040518263ffffffff1660e01b81526004016107409190610dbc565b602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190610c43565b9050600081136107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90610e23565b60405180910390fd5b6305f5e10081846107d79190610d0b565b6107e19190610d7c565b9150505b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081b826107f0565b9050919050565b61082b81610810565b811461083657600080fd5b50565b60008135905061084881610822565b92915050565b600060208284031215610864576108636107eb565b5b600061087284828501610839565b91505092915050565b6000819050919050565b61088e8161087b565b82525050565b60006020820190506108a96000830184610885565b92915050565b6000819050919050565b6108c2816108af565b81146108cd57600080fd5b50565b6000813590506108df816108b9565b92915050565b6000602082840312156108fb576108fa6107eb565b5b6000610909848285016108d0565b91505092915050565b61091b816108af565b82525050565b60006020820190506109366000830184610912565b92915050565b60008060408385031215610953576109526107eb565b5b600061096185828601610839565b9250506020610972858286016108d0565b9150509250929050565b60008060408385031215610993576109926107eb565b5b60006109a185828601610839565b92505060206109b285828601610839565b9150509250929050565b6000819050919050565b60006109e16109dc6109d7846107f0565b6109bc565b6107f0565b9050919050565b60006109f3826109c6565b9050919050565b6000610a05826109e8565b9050919050565b610a15816109fa565b82525050565b6000602082019050610a306000830184610a0c565b92915050565b600082825260208201905092915050565b7f50726963652066656564206e6f742073657420666f72207468697320746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610aa3602183610a36565b9150610aae82610a47565b604082019050919050565b60006020820190508181036000830152610ad281610a96565b9050919050565b600069ffffffffffffffffffff82169050919050565b610af881610ad9565b8114610b0357600080fd5b50565b600081519050610b1581610aef565b92915050565b610b248161087b565b8114610b2f57600080fd5b50565b600081519050610b4181610b1b565b92915050565b600081519050610b56816108b9565b92915050565b600080600080600060a08688031215610b7857610b776107eb565b5b6000610b8688828901610b06565b9550506020610b9788828901610b32565b9450506040610ba888828901610b47565b9350506060610bb988828901610b47565b9250506080610bca88828901610b06565b9150509295509295909350565b7f50726963652066656564206e6f742073657420666f7220455448000000000000600082015250565b6000610c0d601a83610a36565b9150610c1882610bd7565b602082019050919050565b60006020820190508181036000830152610c3c81610c00565b9050919050565b600060208284031215610c5957610c586107eb565b5b6000610c6784828501610b32565b91505092915050565b7f496e76616c696420455448207072696365000000000000000000000000000000600082015250565b6000610ca6601183610a36565b9150610cb182610c70565b602082019050919050565b60006020820190508181036000830152610cd581610c99565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d16826108af565b9150610d21836108af565b9250828202610d2f816108af565b91508282048414831517610d4657610d45610cdc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d87826108af565b9150610d92836108af565b925082610da257610da1610d4d565b5b828204905092915050565b610db681610810565b82525050565b6000602082019050610dd16000830184610dad565b92915050565b7f496e76616c696420707269636500000000000000000000000000000000000000600082015250565b6000610e0d600d83610a36565b9150610e1882610dd7565b602082019050919050565b60006020820190508181036000830152610e3c81610e00565b905091905056fea264697066735822122042b639323f24efda3c20f650295dd099311b32ea6b8bf1d4fbdd5f2e4c95a05364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DCB511A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9DCB511A EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0xA0A8045E EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xD2FE1631 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF08A25ED EQ PUSH2 0x1A3 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x16345F18 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x23EBC76E EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x332C6397 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x76E11286 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x390 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 CHAINID DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3D5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x705 JUMPI PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0A8045E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x679 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x16345F18 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP2 DUP5 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x810 JUMP JUMPDEST DUP2 EQ PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x848 DUP2 PUSH2 0x822 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x864 JUMPI PUSH2 0x863 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x872 DUP5 DUP3 DUP6 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x88E DUP2 PUSH2 0x87B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DF DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8FB JUMPI PUSH2 0x8FA PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x909 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0x8AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x953 JUMPI PUSH2 0x952 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x961 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x972 DUP6 DUP3 DUP7 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x993 JUMPI PUSH2 0x992 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9A1 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9B2 DUP6 DUP3 DUP7 ADD PUSH2 0x839 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E1 PUSH2 0x9DC PUSH2 0x9D7 DUP5 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 DUP3 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA05 DUP3 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA15 DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA30 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726963652066656564206E6F742073657420666F72207468697320746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA3 PUSH1 0x21 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP3 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAD2 DUP2 PUSH2 0xA96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB15 DUP2 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB24 DUP2 PUSH2 0x87B JUMP JUMPDEST DUP2 EQ PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB41 DUP2 PUSH2 0xB1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB56 DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB77 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP9 DUP3 DUP10 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xB97 DUP9 DUP3 DUP10 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xBA8 DUP9 DUP3 DUP10 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xBB9 DUP9 DUP3 DUP10 ADD PUSH2 0xB47 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xBCA DUP9 DUP3 DUP10 ADD PUSH2 0xB06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x50726963652066656564206E6F742073657420666F7220455448000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D PUSH1 0x1A DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP3 PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC3C DUP2 PUSH2 0xC00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC59 JUMPI PUSH2 0xC58 PUSH2 0x7EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC67 DUP5 DUP3 DUP6 ADD PUSH2 0xB32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455448207072696365000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 PUSH1 0x11 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB1 DUP3 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD5 DUP2 PUSH2 0xC99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD16 DUP3 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP PUSH2 0xD21 DUP4 PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD2F DUP2 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD46 JUMPI PUSH2 0xD45 PUSH2 0xCDC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD87 DUP3 PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP PUSH2 0xD92 DUP4 PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDA2 JUMPI PUSH2 0xDA1 PUSH2 0xD4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0x810 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0D PUSH1 0xD DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP2 POP PUSH2 0xE18 DUP3 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE3C DUP2 PUSH2 0xE00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB6 CODECOPY ORIGIN EXTCODEHASH 0x24 0xEF 0xDA EXTCODECOPY KECCAK256 0xF6 POP 0x29 TSTORE 0xD0 SWAP10 BALANCE SHL ORIGIN 0xEA PUSH12 0x8BF1D4FBDD5F2E4C95A05364 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"171:2401:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2346:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;714:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;198:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:295;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1639:627;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;901:310;963:6;981:31;1015:10;:17;1026:5;1015:17;;;;;;;;;;;;;;;;;;;;;;;;;981:51;;1080:1;1050:32;;1058:9;1050:32;;;1042:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1133:12;1155:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1130:52;;;;;;1199:5;1192:12;;;;901:310;;;:::o;312:48::-;;;;;;;;;;;;;;;;;:::o;2346:224::-;2438:1;2421:19;;:5;:19;;;2417:147;;2487:5;2456:13;:28;2470:13;2456:28;;;;;;;;;;;:36;;;;2417:147;;;2548:5;2523:15;:22;2539:5;2523:22;;;;;;;;;;;;;;;:30;;;;2417:147;2346:224;;:::o;714:124::-;826:4;784:10;:17;795:5;784:17;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;714:124;;:::o;198:59::-;;;;;;;;;;;;;;;;;;;;;;:::o;1270:295::-;1319:6;1337:31;1371:10;:22;1390:1;1371:22;;;;;;;;;;;;;;;;;;;;;;;;;1337:56;;1441:1;1411:32;;1419:9;1411:32;;;1403:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1487:12;1509:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1484:52;;;;;;1553:5;1546:12;;;;1270:295;:::o;366:50::-;;;;;;;;;;;;;;;;;:::o;1639:627::-;1715:7;1755:1;1738:19;;:5;:19;;;1734:526;;1816:15;1834:4;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1816:39;;1888:1;1877:8;:12;1869:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1963:3;1950:8;1933:6;:26;;;;:::i;:::-;1932:34;;;;:::i;:::-;1925:41;;;;;1734:526;2078:12;2093:4;:19;;;2113:5;2093:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2078:41;;2149:1;2141:5;:9;2133:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2217:3;2207:5;2190:6;:23;;;;:::i;:::-;2189:31;;;;:::i;:::-;2182:38;;;1639:627;;;;;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:76::-;1212:7;1241:5;1230:16;;1176:76;;;:::o;1258:115::-;1343:23;1360:5;1343:23;:::i;:::-;1338:3;1331:36;1258:115;;:::o;1379:218::-;1470:4;1508:2;1497:9;1493:18;1485:26;;1521:69;1587:1;1576:9;1572:17;1563:6;1521:69;:::i;:::-;1379:218;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:122::-;1759:24;1777:5;1759:24;:::i;:::-;1752:5;1749:35;1739:63;;1798:1;1795;1788:12;1739:63;1686:122;:::o;1814:139::-;1860:5;1898:6;1885:20;1876:29;;1914:33;1941:5;1914:33;:::i;:::-;1814:139;;;;:::o;1959:329::-;2018:6;2067:2;2055:9;2046:7;2042:23;2038:32;2035:119;;;2073:79;;:::i;:::-;2035:119;2193:1;2218:53;2263:7;2254:6;2243:9;2239:22;2218:53;:::i;:::-;2208:63;;2164:117;1959:329;;;;:::o;2294:118::-;2381:24;2399:5;2381:24;:::i;:::-;2376:3;2369:37;2294:118;;:::o;2418:222::-;2511:4;2549:2;2538:9;2534:18;2526:26;;2562:71;2630:1;2619:9;2615:17;2606:6;2562:71;:::i;:::-;2418:222;;;;:::o;2646:474::-;2714:6;2722;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;3024:2;3050:53;3095:7;3086:6;3075:9;3071:22;3050:53;:::i;:::-;3040:63;;2995:118;2646:474;;;;;:::o;3126:::-;3194:6;3202;3251:2;3239:9;3230:7;3226:23;3222:32;3219:119;;;3257:79;;:::i;:::-;3219:119;3377:1;3402:53;3447:7;3438:6;3427:9;3423:22;3402:53;:::i;:::-;3392:63;;3348:117;3504:2;3530:53;3575:7;3566:6;3555:9;3551:22;3530:53;:::i;:::-;3520:63;;3475:118;3126:474;;;;;:::o;3606:60::-;3634:3;3655:5;3648:12;;3606:60;;;:::o;3672:142::-;3722:9;3755:53;3773:34;3782:24;3800:5;3782:24;:::i;:::-;3773:34;:::i;:::-;3755:53;:::i;:::-;3742:66;;3672:142;;;:::o;3820:126::-;3870:9;3903:37;3934:5;3903:37;:::i;:::-;3890:50;;3820:126;;;:::o;3952:154::-;4030:9;4063:37;4094:5;4063:37;:::i;:::-;4050:50;;3952:154;;;:::o;4112:187::-;4227:65;4286:5;4227:65;:::i;:::-;4222:3;4215:78;4112:187;;:::o;4305:278::-;4426:4;4464:2;4453:9;4449:18;4441:26;;4477:99;4573:1;4562:9;4558:17;4549:6;4477:99;:::i;:::-;4305:278;;;;:::o;4589:169::-;4673:11;4707:6;4702:3;4695:19;4747:4;4742:3;4738:14;4723:29;;4589:169;;;;:::o;4764:220::-;4904:34;4900:1;4892:6;4888:14;4881:58;4973:3;4968:2;4960:6;4956:15;4949:28;4764:220;:::o;4990:366::-;5132:3;5153:67;5217:2;5212:3;5153:67;:::i;:::-;5146:74;;5229:93;5318:3;5229:93;:::i;:::-;5347:2;5342:3;5338:12;5331:19;;4990:366;;;:::o;5362:419::-;5528:4;5566:2;5555:9;5551:18;5543:26;;5615:9;5609:4;5605:20;5601:1;5590:9;5586:17;5579:47;5643:131;5769:4;5643:131;:::i;:::-;5635:139;;5362:419;;;:::o;5787:105::-;5823:7;5863:22;5856:5;5852:34;5841:45;;5787:105;;;:::o;5898:120::-;5970:23;5987:5;5970:23;:::i;:::-;5963:5;5960:34;5950:62;;6008:1;6005;5998:12;5950:62;5898:120;:::o;6024:141::-;6080:5;6111:6;6105:13;6096:22;;6127:32;6153:5;6127:32;:::i;:::-;6024:141;;;;:::o;6171:120::-;6243:23;6260:5;6243:23;:::i;:::-;6236:5;6233:34;6223:62;;6281:1;6278;6271:12;6223:62;6171:120;:::o;6297:141::-;6353:5;6384:6;6378:13;6369:22;;6400:32;6426:5;6400:32;:::i;:::-;6297:141;;;;:::o;6444:143::-;6501:5;6532:6;6526:13;6517:22;;6548:33;6575:5;6548:33;:::i;:::-;6444:143;;;;:::o;6593:971::-;6696:6;6704;6712;6720;6728;6777:3;6765:9;6756:7;6752:23;6748:33;6745:120;;;6784:79;;:::i;:::-;6745:120;6904:1;6929:63;6984:7;6975:6;6964:9;6960:22;6929:63;:::i;:::-;6919:73;;6875:127;7041:2;7067:63;7122:7;7113:6;7102:9;7098:22;7067:63;:::i;:::-;7057:73;;7012:128;7179:2;7205:64;7261:7;7252:6;7241:9;7237:22;7205:64;:::i;:::-;7195:74;;7150:129;7318:2;7344:64;7400:7;7391:6;7380:9;7376:22;7344:64;:::i;:::-;7334:74;;7289:129;7457:3;7484:63;7539:7;7530:6;7519:9;7515:22;7484:63;:::i;:::-;7474:73;;7428:129;6593:971;;;;;;;;:::o;7570:176::-;7710:28;7706:1;7698:6;7694:14;7687:52;7570:176;:::o;7752:366::-;7894:3;7915:67;7979:2;7974:3;7915:67;:::i;:::-;7908:74;;7991:93;8080:3;7991:93;:::i;:::-;8109:2;8104:3;8100:12;8093:19;;7752:366;;;:::o;8124:419::-;8290:4;8328:2;8317:9;8313:18;8305:26;;8377:9;8371:4;8367:20;8363:1;8352:9;8348:17;8341:47;8405:131;8531:4;8405:131;:::i;:::-;8397:139;;8124:419;;;:::o;8549:349::-;8618:6;8667:2;8655:9;8646:7;8642:23;8638:32;8635:119;;;8673:79;;:::i;:::-;8635:119;8793:1;8818:63;8873:7;8864:6;8853:9;8849:22;8818:63;:::i;:::-;8808:73;;8764:127;8549:349;;;;:::o;8904:167::-;9044:19;9040:1;9032:6;9028:14;9021:43;8904:167;:::o;9077:366::-;9219:3;9240:67;9304:2;9299:3;9240:67;:::i;:::-;9233:74;;9316:93;9405:3;9316:93;:::i;:::-;9434:2;9429:3;9425:12;9418:19;;9077:366;;;:::o;9449:419::-;9615:4;9653:2;9642:9;9638:18;9630:26;;9702:9;9696:4;9692:20;9688:1;9677:9;9673:17;9666:47;9730:131;9856:4;9730:131;:::i;:::-;9722:139;;9449:419;;;:::o;9874:180::-;9922:77;9919:1;9912:88;10019:4;10016:1;10009:15;10043:4;10040:1;10033:15;10060:410;10100:7;10123:20;10141:1;10123:20;:::i;:::-;10118:25;;10157:20;10175:1;10157:20;:::i;:::-;10152:25;;10212:1;10209;10205:9;10234:30;10252:11;10234:30;:::i;:::-;10223:41;;10413:1;10404:7;10400:15;10397:1;10394:22;10374:1;10367:9;10347:83;10324:139;;10443:18;;:::i;:::-;10324:139;10108:362;10060:410;;;;:::o;10476:180::-;10524:77;10521:1;10514:88;10621:4;10618:1;10611:15;10645:4;10642:1;10635:15;10662:185;10702:1;10719:20;10737:1;10719:20;:::i;:::-;10714:25;;10753:20;10771:1;10753:20;:::i;:::-;10748:25;;10792:1;10782:35;;10797:18;;:::i;:::-;10782:35;10839:1;10836;10832:9;10827:14;;10662:185;;;;:::o;10853:118::-;10940:24;10958:5;10940:24;:::i;:::-;10935:3;10928:37;10853:118;;:::o;10977:222::-;11070:4;11108:2;11097:9;11093:18;11085:26;;11121:71;11189:1;11178:9;11174:17;11165:6;11121:71;:::i;:::-;10977:222;;;;:::o;11205:163::-;11345:15;11341:1;11333:6;11329:14;11322:39;11205:163;:::o;11374:366::-;11516:3;11537:67;11601:2;11596:3;11537:67;:::i;:::-;11530:74;;11613:93;11702:3;11613:93;:::i;:::-;11731:2;11726:3;11722:12;11715:19;;11374:366;;;:::o;11746:419::-;11912:4;11950:2;11939:9;11935:18;11927:26;;11999:9;11993:4;11989:20;11985:1;11974:9;11970:17;11963:47;12027:131;12153:4;12027:131;:::i;:::-;12019:139;;11746:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"741000","executionCost":"infinite","totalCost":"infinite"},"external":{"convertToUSD(address,uint256)":"infinite","getEthUsdPrice()":"infinite","getLatestPrice(address)":"infinite","priceFeeds(address)":"infinite","setPriceFeed(address,address)":"infinite","setTestPrice(address,uint256)":"22913","testEthPrices(uint256)":"infinite","testTokenPrices(address)":"2858"}},"methodIdentifiers":{"convertToUSD(address,uint256)":"f08a25ed","getEthUsdPrice()":"a0a8045e","getLatestPrice(address)":"16345f18","priceFeeds(address)":"9dcb511a","setPriceFeed(address,address)":"76e11286","setTestPrice(address,uint256)":"332c6397","testEthPrices(uint256)":"23ebc76e","testTokenPrices(address)":"d2fe1631"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethUsdFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertToUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthUsdPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"testEthPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"testTokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setTestPrice(address,uint256)\":{\"details\":\"\\u8bbe\\u7f6e\\u6d4b\\u8bd5\\u4ef7\\u683c\\uff08\\u4ec5\\u7528\\u4e8e\\u6d4b\\u8bd5\\u73af\\u5883\\uff09\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertToUSD(address,uint256)\":{\"notice\":\"\\u5c06\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\u8f6c\\u6362\\u4e3a USD \\u4ef7\\u503c\"},\"getEthUsdPrice()\":{\"notice\":\"\\u83b7\\u53d6 ETH/USD \\u7684\\u6700\\u65b0\\u4ef7\\u683c\"},\"getLatestPrice(address)\":{\"notice\":\"\\u83b7\\u53d6\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6700\\u65b0\\u4ef7\\u683c\"},\"setPriceFeed(address,address)\":{\"notice\":\"\\u8bbe\\u7f6e\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5730\\u5740\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceOracle.sol\":\"PriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/PriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract PriceOracle {\\n    mapping(address => AggregatorV3Interface) public priceFeeds;\\n    \\n    // \\u6a21\\u62df\\u4ef7\\u683c\\u5b58\\u50a8\\uff08\\u7528\\u4e8e\\u6d4b\\u8bd5\\uff09\\n    mapping(uint256 => uint256) public testEthPrices;\\n    mapping(address => uint256) public testTokenPrices;\\n\\n    constructor(address ethUsdFeed) {\\n        // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n        priceFeeds[address(0)] = AggregatorV3Interface(ethUsdFeed); // \\u4f7f\\u7528 address(0) \\u4ee3\\u8868 ETH/USD \\u4ef7\\u683c\\u9884\\u8a00\\u673a\\n    }\\n\\n    /**\\n     * \\u8bbe\\u7f6e\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u4ef7\\u683c\\u9884\\u8a00\\u673a\\u5730\\u5740\\n     */\\n    function setPriceFeed(address token, address feed) external {\\n        priceFeeds[token] = AggregatorV3Interface(feed);\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n     */\\n    function getLatestPrice(address token) external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[token];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for this token\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u83b7\\u53d6 ETH/USD \\u7684\\u6700\\u65b0\\u4ef7\\u683c\\n    */\\n    function getEthUsdPrice() external view returns (int256) {\\n        AggregatorV3Interface priceFeed = priceFeeds[address(0)];\\n        require(address(priceFeed) != address(0), \\\"Price feed not set for ETH\\\");\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    /**\\n     * \\u5c06\\u67d0\\u4e2a\\u4ee3\\u5e01\\u7684\\u6570\\u91cf\\u8f6c\\u6362\\u4e3a USD \\u4ef7\\u503c\\n     */\\n    function convertToUSD(address token, uint256 amount) external view returns (uint256) {\\n        if (token == address(0)) {\\n            // ETH \\u76f4\\u63a5\\u8fd4\\u56de USD \\u4ef7\\u503c\\n            int256 ethPrice = this.getEthUsdPrice();\\n            require(ethPrice > 0, \\\"Invalid ETH price\\\");\\n            return (amount * uint256(ethPrice)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        } else {\\n            // \\u5176\\u4ed6\\u4ee3\\u5e01\\u9700\\u8981\\u5148\\u83b7\\u53d6\\u5176\\u4ef7\\u683c\\n            int256 price = this.getLatestPrice(token);\\n            require(price > 0, \\\"Invalid price\\\");\\n            return (amount * uint256(price)) / 1e8; // \\u5047\\u8bbe\\u4ef7\\u683c\\u67098\\u4f4d\\u5c0f\\u6570\\n        }\\n    }\\n\\n    /**\\n     * @dev \\u8bbe\\u7f6e\\u6d4b\\u8bd5\\u4ef7\\u683c\\uff08\\u4ec5\\u7528\\u4e8e\\u6d4b\\u8bd5\\u73af\\u5883\\uff09\\n     */\\n    function setTestPrice(address token, uint256 price) external {\\n        if (token == address(0)) {\\n            testEthPrices[block.chainid] = price;\\n        } else {\\n            testTokenPrices[token] = price;\\n        }\\n    }\\n}\",\"keccak256\":\"0x5da541360795204931c7e6bf78f8670d5384f9d154a4f9863489e05b575d0eff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2740,"contract":"contracts/PriceOracle.sol:PriceOracle","label":"priceFeeds","offset":0,"slot":"0","type":"t_mapping(t_address,t_contract(AggregatorV3Interface)45)"},{"astId":2744,"contract":"contracts/PriceOracle.sol:PriceOracle","label":"testEthPrices","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2748,"contract":"contracts/PriceOracle.sol:PriceOracle","label":"testTokenPrices","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(AggregatorV3Interface)45":{"encoding":"inplace","label":"contract AggregatorV3Interface","numberOfBytes":"20"},"t_mapping(t_address,t_contract(AggregatorV3Interface)45)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract AggregatorV3Interface)","numberOfBytes":"32","value":"t_contract(AggregatorV3Interface)45"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"convertToUSD(address,uint256)":{"notice":"将某个代币的数量转换为 USD 价值"},"getEthUsdPrice()":{"notice":"获取 ETH/USD 的最新价格"},"getLatestPrice(address)":{"notice":"获取某个代币的最新价格"},"setPriceFeed(address,address)":{"notice":"设置某个代币的价格预言机地址"}},"version":1}}}}}}