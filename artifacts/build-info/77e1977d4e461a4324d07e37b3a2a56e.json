{
	"id": "77e1977d4e461a4324d07e37b3a2a56e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"task2/BeggingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BeggingContract is Ownable {\r\n    \r\n    mapping(address => uint256) public donations;\r\n\r\n    uint256 public startTime;\r\n    uint256 public endTime;\r\n\r\n    event Donation(address indexed donor, uint256 amount);\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        startTime = block.timestamp;\r\n        endTime = startTime + 7 days;\r\n    }\r\n\r\n    function donate()  public payable {\r\n        require(msg.value > 0, \"Donation must be greater than 0\");\r\n        require(block.timestamp >=  startTime, \"Donation not started yet\");\r\n        require(block.timestamp <= endTime, \"Donation period has ended\");\r\n\r\n        donations[msg.sender] += msg.value;\r\n\r\n        emit Donation(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        require(address(this).balance > 0, \"No funds to withdraw\");\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function getDonation(address donor) public view returns (uint256) {\r\n        return donations[donor];\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task2/BeggingContract.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Donation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "donations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "donor",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task2/BeggingContract.sol\":116:1127  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"task2/BeggingContract.sol\":342:461  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"task2/BeggingContract.sol\":364:374  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"task2/BeggingContract.sol\":399:414  block.timestamp */\n  timestamp\n    /* \"task2/BeggingContract.sol\":387:396  startTime */\n  0x02\n    /* \"task2/BeggingContract.sol\":387:414  startTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task2/BeggingContract.sol\":447:453  7 days */\n  0x093a80\n    /* \"task2/BeggingContract.sol\":435:444  startTime */\n  sload(0x02)\n    /* \"task2/BeggingContract.sol\":435:453  startTime + 7 days */\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"task2/BeggingContract.sol\":425:432  endTime */\n  0x03\n    /* \"task2/BeggingContract.sol\":425:453  endTime = startTime + 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task2/BeggingContract.sol\":116:1127  contract BeggingContract is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_23\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_25\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_27\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:670   */\ntag_18:\n    /* \"#utility.yul\":630:637   */\n  0x00\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":648:664   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:670   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":676:856   */\ntag_19:\n    /* \"#utility.yul\":724:801   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":721:722   */\n  0x00\n    /* \"#utility.yul\":714:802   */\n  mstore\n    /* \"#utility.yul\":821:825   */\n  0x11\n    /* \"#utility.yul\":818:819   */\n  0x04\n    /* \"#utility.yul\":811:826   */\n  mstore\n    /* \"#utility.yul\":845:849   */\n  0x24\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":835:850   */\n  revert\n    /* \"#utility.yul\":862:1053   */\ntag_12:\n    /* \"#utility.yul\":902:905   */\n  0x00\n    /* \"#utility.yul\":921:941   */\n  tag_31\n    /* \"#utility.yul\":939:940   */\n  dup3\n    /* \"#utility.yul\":921:941   */\n  tag_18\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":916:941   */\n  swap2\n  pop\n    /* \"#utility.yul\":955:975   */\n  tag_32\n    /* \"#utility.yul\":973:974   */\n  dup4\n    /* \"#utility.yul\":955:975   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":950:975   */\n  swap3\n  pop\n    /* \"#utility.yul\":998:999   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup3\n    /* \"#utility.yul\":991:1000   */\n  add\n    /* \"#utility.yul\":984:1000   */\n  swap1\n  pop\n    /* \"#utility.yul\":1019:1022   */\n  dup1\n    /* \"#utility.yul\":1016:1017   */\n  dup3\n    /* \"#utility.yul\":1013:1023   */\n  gt\n    /* \"#utility.yul\":1010:1046   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1026:1044   */\n  tag_34\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1010:1046   */\ntag_33:\n    /* \"#utility.yul\":862:1053   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"task2/BeggingContract.sol\":116:1127  contract BeggingContract is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task2/BeggingContract.sol\":116:1127  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78e97925\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcc6cb19a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_11:\n      dup1\n      0x3197cbb6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"task2/BeggingContract.sol\":249:271  uint256 public endTime */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/BeggingContract.sol\":835:1008  function withdraw() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"task2/BeggingContract.sol\":1016:1124  function getDonation(address donor) public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"task2/BeggingContract.sol\":218:242  uint256 public startTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/BeggingContract.sol\":165:209  mapping(address => uint256) public donations */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/BeggingContract.sol\":469:827  function donate()  public payable {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"task2/BeggingContract.sol\":249:271  uint256 public endTime */\n    tag_14:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":835:1008  function withdraw() public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"task2/BeggingContract.sol\":915:916  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":891:912  address(this).balance */\n      selfbalance\n        /* \"task2/BeggingContract.sol\":891:916  address(this).balance > 0 */\n      gt\n        /* \"task2/BeggingContract.sol\":883:941  require(address(this).balance > 0, \"No funds to withdraw\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"task2/BeggingContract.sol\":960:967  owner() */\n      tag_56\n        /* \"task2/BeggingContract.sol\":960:965  owner */\n      tag_35\n        /* \"task2/BeggingContract.sol\":960:967  owner() */\n      jump\t// in\n    tag_56:\n        /* \"task2/BeggingContract.sol\":952:977  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/BeggingContract.sol\":952:1000  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"task2/BeggingContract.sol\":978:999  address(this).balance */\n      selfbalance\n        /* \"task2/BeggingContract.sol\":952:1000  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n        /* \"task2/BeggingContract.sol\":835:1008  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":1016:1124  function getDonation(address donor) public view returns (uint256) {... */\n    tag_24:\n        /* \"task2/BeggingContract.sol\":1073:1080  uint256 */\n      0x00\n        /* \"task2/BeggingContract.sol\":1100:1109  donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":1100:1116  donations[donor] */\n      0x00\n        /* \"task2/BeggingContract.sol\":1110:1115  donor */\n      dup4\n        /* \"task2/BeggingContract.sol\":1100:1116  donations[donor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/BeggingContract.sol\":1093:1116  return donations[donor] */\n      swap1\n      pop\n        /* \"task2/BeggingContract.sol\":1016:1124  function getDonation(address donor) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":218:242  uint256 public startTime */\n    tag_31:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":165:209  mapping(address => uint256) public donations */\n    tag_41:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"task2/BeggingContract.sol\":469:827  function donate()  public payable {... */\n    tag_44:\n        /* \"task2/BeggingContract.sol\":534:535  0 */\n      0x00\n        /* \"task2/BeggingContract.sol\":522:531  msg.value */\n      callvalue\n        /* \"task2/BeggingContract.sol\":522:535  msg.value > 0 */\n      gt\n        /* \"task2/BeggingContract.sol\":514:571  require(msg.value > 0, \"Donation must be greater than 0\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"task2/BeggingContract.sol\":610:619  startTime */\n      sload(0x02)\n        /* \"task2/BeggingContract.sol\":590:605  block.timestamp */\n      timestamp\n        /* \"task2/BeggingContract.sol\":590:619  block.timestamp >=  startTime */\n      lt\n      iszero\n        /* \"task2/BeggingContract.sol\":582:648  require(block.timestamp >=  startTime, \"Donation not started yet\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"task2/BeggingContract.sol\":686:693  endTime */\n      sload(0x03)\n        /* \"task2/BeggingContract.sol\":667:682  block.timestamp */\n      timestamp\n        /* \"task2/BeggingContract.sol\":667:693  block.timestamp <= endTime */\n      gt\n      iszero\n        /* \"task2/BeggingContract.sol\":659:723  require(block.timestamp <= endTime, \"Donation period has ended\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"task2/BeggingContract.sol\":761:770  msg.value */\n      callvalue\n        /* \"task2/BeggingContract.sol\":736:745  donations */\n      0x01\n        /* \"task2/BeggingContract.sol\":736:757  donations[msg.sender] */\n      0x00\n        /* \"task2/BeggingContract.sol\":746:756  msg.sender */\n      caller\n        /* \"task2/BeggingContract.sol\":736:757  donations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/BeggingContract.sol\":736:770  donations[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/BeggingContract.sol\":797:807  msg.sender */\n      caller\n        /* \"task2/BeggingContract.sol\":788:819  Donation(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e\n        /* \"task2/BeggingContract.sol\":809:818  msg.value */\n      callvalue\n        /* \"task2/BeggingContract.sol\":788:819  Donation(msg.sender, msg.value) */\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"task2/BeggingContract.sol\":469:827  function donate()  public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_94:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_95:\n        /* \"#utility.yul\":177:201   */\n      tag_117\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_94\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_119\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_95\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_97:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_99:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_100:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_125\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_99\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_101:\n        /* \"#utility.yul\":1076:1100   */\n      tag_127\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_100\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_128:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_102:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_130\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_101\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_23:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_133\n      tag_97\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1352:1471   */\n    tag_132:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_134\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_102\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_103:\n        /* \"#utility.yul\":1698:1722   */\n      tag_136\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_100\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_37:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_138\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_103\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_104:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2308   */\n    tag_105:\n        /* \"#utility.yul\":2278:2300   */\n      0x4e6f2066756e647320746f207769746864726177000000000000000000000000\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2301   */\n      mstore\n        /* \"#utility.yul\":2138:2308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2680   */\n    tag_106:\n        /* \"#utility.yul\":2456:2459   */\n      0x00\n        /* \"#utility.yul\":2477:2544   */\n      tag_142\n        /* \"#utility.yul\":2541:2543   */\n      0x14\n        /* \"#utility.yul\":2536:2539   */\n      dup4\n        /* \"#utility.yul\":2477:2544   */\n      tag_104\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2470:2544   */\n      swap2\n      pop\n        /* \"#utility.yul\":2553:2646   */\n      tag_143\n        /* \"#utility.yul\":2642:2645   */\n      dup3\n        /* \"#utility.yul\":2553:2646   */\n      tag_105\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2671:2673   */\n      0x20\n        /* \"#utility.yul\":2666:2669   */\n      dup3\n        /* \"#utility.yul\":2662:2674   */\n      add\n        /* \"#utility.yul\":2655:2674   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3105   */\n    tag_55:\n        /* \"#utility.yul\":2852:2856   */\n      0x00\n        /* \"#utility.yul\":2890:2892   */\n      0x20\n        /* \"#utility.yul\":2879:2888   */\n      dup3\n        /* \"#utility.yul\":2875:2893   */\n      add\n        /* \"#utility.yul\":2867:2893   */\n      swap1\n      pop\n        /* \"#utility.yul\":2939:2948   */\n      dup2\n        /* \"#utility.yul\":2933:2937   */\n      dup2\n        /* \"#utility.yul\":2929:2949   */\n      sub\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2914:2923   */\n      dup4\n        /* \"#utility.yul\":2910:2927   */\n      add\n        /* \"#utility.yul\":2903:2950   */\n      mstore\n        /* \"#utility.yul\":2967:3098   */\n      tag_145\n        /* \"#utility.yul\":3093:3097   */\n      dup2\n        /* \"#utility.yul\":2967:3098   */\n      tag_106\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2959:3098   */\n      swap1\n      pop\n        /* \"#utility.yul\":2686:3105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3111:3292   */\n    tag_107:\n        /* \"#utility.yul\":3251:3284   */\n      0x446f6e6174696f6e206d7573742062652067726561746572207468616e203000\n        /* \"#utility.yul\":3247:3248   */\n      0x00\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3235:3249   */\n      add\n        /* \"#utility.yul\":3228:3285   */\n      mstore\n        /* \"#utility.yul\":3111:3292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3298:3664   */\n    tag_108:\n        /* \"#utility.yul\":3440:3443   */\n      0x00\n        /* \"#utility.yul\":3461:3528   */\n      tag_148\n        /* \"#utility.yul\":3525:3527   */\n      0x1f\n        /* \"#utility.yul\":3520:3523   */\n      dup4\n        /* \"#utility.yul\":3461:3528   */\n      tag_104\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3454:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3537:3630   */\n      tag_149\n        /* \"#utility.yul\":3626:3629   */\n      dup3\n        /* \"#utility.yul\":3537:3630   */\n      tag_107\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"#utility.yul\":3650:3653   */\n      dup3\n        /* \"#utility.yul\":3646:3658   */\n      add\n        /* \"#utility.yul\":3639:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3670:4089   */\n    tag_69:\n        /* \"#utility.yul\":3836:3840   */\n      0x00\n        /* \"#utility.yul\":3874:3876   */\n      0x20\n        /* \"#utility.yul\":3863:3872   */\n      dup3\n        /* \"#utility.yul\":3859:3877   */\n      add\n        /* \"#utility.yul\":3851:3877   */\n      swap1\n      pop\n        /* \"#utility.yul\":3923:3932   */\n      dup2\n        /* \"#utility.yul\":3917:3921   */\n      dup2\n        /* \"#utility.yul\":3913:3933   */\n      sub\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3898:3907   */\n      dup4\n        /* \"#utility.yul\":3894:3911   */\n      add\n        /* \"#utility.yul\":3887:3934   */\n      mstore\n        /* \"#utility.yul\":3951:4082   */\n      tag_151\n        /* \"#utility.yul\":4077:4081   */\n      dup2\n        /* \"#utility.yul\":3951:4082   */\n      tag_108\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3943:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3670:4089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4269   */\n    tag_109:\n        /* \"#utility.yul\":4235:4261   */\n      0x446f6e6174696f6e206e6f742073746172746564207965740000000000000000\n        /* \"#utility.yul\":4231:4232   */\n      0x00\n        /* \"#utility.yul\":4223:4229   */\n      dup3\n        /* \"#utility.yul\":4219:4233   */\n      add\n        /* \"#utility.yul\":4212:4262   */\n      mstore\n        /* \"#utility.yul\":4095:4269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4275:4641   */\n    tag_110:\n        /* \"#utility.yul\":4417:4420   */\n      0x00\n        /* \"#utility.yul\":4438:4505   */\n      tag_154\n        /* \"#utility.yul\":4502:4504   */\n      0x18\n        /* \"#utility.yul\":4497:4500   */\n      dup4\n        /* \"#utility.yul\":4438:4505   */\n      tag_104\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4431:4505   */\n      swap2\n      pop\n        /* \"#utility.yul\":4514:4607   */\n      tag_155\n        /* \"#utility.yul\":4603:4606   */\n      dup3\n        /* \"#utility.yul\":4514:4607   */\n      tag_109\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4632:4634   */\n      0x20\n        /* \"#utility.yul\":4627:4630   */\n      dup3\n        /* \"#utility.yul\":4623:4635   */\n      add\n        /* \"#utility.yul\":4616:4635   */\n      swap1\n      pop\n        /* \"#utility.yul\":4275:4641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4647:5066   */\n    tag_72:\n        /* \"#utility.yul\":4813:4817   */\n      0x00\n        /* \"#utility.yul\":4851:4853   */\n      0x20\n        /* \"#utility.yul\":4840:4849   */\n      dup3\n        /* \"#utility.yul\":4836:4854   */\n      add\n        /* \"#utility.yul\":4828:4854   */\n      swap1\n      pop\n        /* \"#utility.yul\":4900:4909   */\n      dup2\n        /* \"#utility.yul\":4894:4898   */\n      dup2\n        /* \"#utility.yul\":4890:4910   */\n      sub\n        /* \"#utility.yul\":4886:4887   */\n      0x00\n        /* \"#utility.yul\":4875:4884   */\n      dup4\n        /* \"#utility.yul\":4871:4888   */\n      add\n        /* \"#utility.yul\":4864:4911   */\n      mstore\n        /* \"#utility.yul\":4928:5059   */\n      tag_157\n        /* \"#utility.yul\":5054:5058   */\n      dup2\n        /* \"#utility.yul\":4928:5059   */\n      tag_110\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4920:5059   */\n      swap1\n      pop\n        /* \"#utility.yul\":4647:5066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5072:5247   */\n    tag_111:\n        /* \"#utility.yul\":5212:5239   */\n      0x446f6e6174696f6e20706572696f642068617320656e64656400000000000000\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5200:5206   */\n      dup3\n        /* \"#utility.yul\":5196:5210   */\n      add\n        /* \"#utility.yul\":5189:5240   */\n      mstore\n        /* \"#utility.yul\":5072:5247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5253:5619   */\n    tag_112:\n        /* \"#utility.yul\":5395:5398   */\n      0x00\n        /* \"#utility.yul\":5416:5483   */\n      tag_160\n        /* \"#utility.yul\":5480:5482   */\n      0x19\n        /* \"#utility.yul\":5475:5478   */\n      dup4\n        /* \"#utility.yul\":5416:5483   */\n      tag_104\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5409:5483   */\n      swap2\n      pop\n        /* \"#utility.yul\":5492:5585   */\n      tag_161\n        /* \"#utility.yul\":5581:5584   */\n      dup3\n        /* \"#utility.yul\":5492:5585   */\n      tag_111\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5610:5612   */\n      0x20\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5601:5613   */\n      add\n        /* \"#utility.yul\":5594:5613   */\n      swap1\n      pop\n        /* \"#utility.yul\":5253:5619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5625:6044   */\n    tag_75:\n        /* \"#utility.yul\":5791:5795   */\n      0x00\n        /* \"#utility.yul\":5829:5831   */\n      0x20\n        /* \"#utility.yul\":5818:5827   */\n      dup3\n        /* \"#utility.yul\":5814:5832   */\n      add\n        /* \"#utility.yul\":5806:5832   */\n      swap1\n      pop\n        /* \"#utility.yul\":5878:5887   */\n      dup2\n        /* \"#utility.yul\":5872:5876   */\n      dup2\n        /* \"#utility.yul\":5868:5888   */\n      sub\n        /* \"#utility.yul\":5864:5865   */\n      0x00\n        /* \"#utility.yul\":5853:5862   */\n      dup4\n        /* \"#utility.yul\":5849:5866   */\n      add\n        /* \"#utility.yul\":5842:5889   */\n      mstore\n        /* \"#utility.yul\":5906:6037   */\n      tag_163\n        /* \"#utility.yul\":6032:6036   */\n      dup2\n        /* \"#utility.yul\":5906:6037   */\n      tag_112\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5898:6037   */\n      swap1\n      pop\n        /* \"#utility.yul\":5625:6044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6050:6230   */\n    tag_113:\n        /* \"#utility.yul\":6098:6175   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6088:6176   */\n      mstore\n        /* \"#utility.yul\":6195:6199   */\n      0x11\n        /* \"#utility.yul\":6192:6193   */\n      0x04\n        /* \"#utility.yul\":6185:6200   */\n      mstore\n        /* \"#utility.yul\":6219:6223   */\n      0x24\n        /* \"#utility.yul\":6216:6217   */\n      0x00\n        /* \"#utility.yul\":6209:6224   */\n      revert\n        /* \"#utility.yul\":6236:6427   */\n    tag_77:\n        /* \"#utility.yul\":6276:6279   */\n      0x00\n        /* \"#utility.yul\":6295:6315   */\n      tag_166\n        /* \"#utility.yul\":6313:6314   */\n      dup3\n        /* \"#utility.yul\":6295:6315   */\n      tag_94\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6290:6315   */\n      swap2\n      pop\n        /* \"#utility.yul\":6329:6349   */\n      tag_167\n        /* \"#utility.yul\":6347:6348   */\n      dup4\n        /* \"#utility.yul\":6329:6349   */\n      tag_94\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6324:6349   */\n      swap3\n      pop\n        /* \"#utility.yul\":6372:6373   */\n      dup3\n        /* \"#utility.yul\":6369:6370   */\n      dup3\n        /* \"#utility.yul\":6365:6374   */\n      add\n        /* \"#utility.yul\":6358:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":6393:6396   */\n      dup1\n        /* \"#utility.yul\":6390:6391   */\n      dup3\n        /* \"#utility.yul\":6387:6397   */\n      gt\n        /* \"#utility.yul\":6384:6420   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":6400:6418   */\n      tag_169\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6384:6420   */\n    tag_168:\n        /* \"#utility.yul\":6236:6427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079461a9c4be76672b9801c11b68132cac098fdac0b2624615fa971f239769c5364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 180,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1056:3",
										"nodeType": "YulBlock",
										"src": "0:1056:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "638:32:3",
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nativeSrc": "648:16:3",
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:3",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:3",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:3",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nativeSrc": "704:152:3",
													"nodeType": "YulBlock",
													"src": "704:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "721:1:3",
																		"nodeType": "YulLiteral",
																		"src": "721:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "724:77:3",
																		"nodeType": "YulLiteral",
																		"src": "724:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "714:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:3"
																},
																"nativeSrc": "714:88:3",
																"nodeType": "YulFunctionCall",
																"src": "714:88:3"
															},
															"nativeSrc": "714:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "714:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:3",
																		"nodeType": "YulLiteral",
																		"src": "818:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "821:4:3",
																		"nodeType": "YulLiteral",
																		"src": "821:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "811:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:3"
																},
																"nativeSrc": "811:15:3",
																"nodeType": "YulFunctionCall",
																"src": "811:15:3"
															},
															"nativeSrc": "811:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "811:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "842:1:3",
																		"nodeType": "YulLiteral",
																		"src": "842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "845:4:3",
																		"nodeType": "YulLiteral",
																		"src": "845:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "835:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "835:6:3"
																},
																"nativeSrc": "835:15:3",
																"nodeType": "YulFunctionCall",
																"src": "835:15:3"
															},
															"nativeSrc": "835:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "835:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "676:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "676:180:3"
											},
											{
												"body": {
													"nativeSrc": "906:147:3",
													"nodeType": "YulBlock",
													"src": "906:147:3",
													"statements": [
														{
															"nativeSrc": "916:25:3",
															"nodeType": "YulAssignment",
															"src": "916:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "939:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "939:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "921:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "921:17:3"
																},
																"nativeSrc": "921:20:3",
																"nodeType": "YulFunctionCall",
																"src": "921:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "916:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "916:1:3"
																}
															]
														},
														{
															"nativeSrc": "950:25:3",
															"nodeType": "YulAssignment",
															"src": "950:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "973:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "973:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "955:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "955:17:3"
																},
																"nativeSrc": "955:20:3",
																"nodeType": "YulFunctionCall",
																"src": "955:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "950:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "950:1:3"
																}
															]
														},
														{
															"nativeSrc": "984:16:3",
															"nodeType": "YulAssignment",
															"src": "984:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "995:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "998:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "998:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "991:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "991:3:3"
																},
																"nativeSrc": "991:9:3",
																"nodeType": "YulFunctionCall",
																"src": "991:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "984:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "984:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1024:22:3",
																"nodeType": "YulBlock",
																"src": "1024:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1026:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "1026:16:3"
																			},
																			"nativeSrc": "1026:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:18:3"
																		},
																		"nativeSrc": "1026:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1016:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "1016:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1019:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1019:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1013:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "1013:2:3"
																},
																"nativeSrc": "1013:10:3",
																"nodeType": "YulFunctionCall",
																"src": "1013:10:3"
															},
															"nativeSrc": "1010:36:3",
															"nodeType": "YulIf",
															"src": "1010:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "862:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "893:1:3",
														"nodeType": "YulTypedName",
														"src": "893:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "896:1:3",
														"nodeType": "YulTypedName",
														"src": "896:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "902:3:3",
														"nodeType": "YulTypedName",
														"src": "902:3:3",
														"type": ""
													}
												],
												"src": "862:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101b4565b60405180910390fd5b610090816100b460201b60201c565b504260028190555062093a806002546100a99190610203565b600381905550610236565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61019e82610175565b9050919050565b6101ae81610194565b82525050565b5f6020820190506101c75f8301846101a5565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020d826101cd565b9150610218836101cd565b92508282019050808211156102305761022f6101d6565b5b92915050565b61097f806102435f395ff3fe608060405260043610610085575f3560e01c806378e979251161005857806378e979251461011b5780638da5cb5b14610145578063cc6cb19a1461016f578063ed88c68e146101ab578063f2fde38b146101b557610085565b80633197cbb6146100895780633ccfd60b146100b3578063410a1d32146100c9578063715018a614610105575b5f5ffd5b348015610094575f5ffd5b5061009d6101dd565b6040516100aa919061066f565b60405180910390f35b3480156100be575f5ffd5b506100c76101e3565b005b3480156100d4575f5ffd5b506100ef60048036038101906100ea91906106e6565b61027a565b6040516100fc919061066f565b60405180910390f35b348015610110575f5ffd5b506101196102c0565b005b348015610126575f5ffd5b5061012f6102d3565b60405161013c919061066f565b60405180910390f35b348015610150575f5ffd5b506101596102d9565b6040516101669190610720565b60405180910390f35b34801561017a575f5ffd5b50610195600480360381019061019091906106e6565b610300565b6040516101a2919061066f565b60405180910390f35b6101b3610315565b005b3480156101c0575f5ffd5b506101db60048036038101906101d691906106e6565b610484565b005b60035481565b6101eb610508565b5f471161022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610793565b60405180910390fd5b6102356102d9565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610277573d5f5f3e3d5ffd5b50565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102c8610508565b6102d15f61058f565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915090505481565b5f3411610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e906107fb565b60405180910390fd5b60025442101561039c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039390610863565b60405180910390fd5b6003544211156103e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d8906108cb565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461042d9190610916565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e3460405161047a919061066f565b60405180910390a2565b61048c610508565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104fc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104f39190610720565b60405180910390fd5b6105058161058f565b50565b610510610650565b73ffffffffffffffffffffffffffffffffffffffff1661052e6102d9565b73ffffffffffffffffffffffffffffffffffffffff161461058d57610551610650565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105849190610720565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61066981610657565b82525050565b5f6020820190506106825f830184610660565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106b58261068c565b9050919050565b6106c5816106ab565b81146106cf575f5ffd5b50565b5f813590506106e0816106bc565b92915050565b5f602082840312156106fb576106fa610688565b5b5f610708848285016106d2565b91505092915050565b61071a816106ab565b82525050565b5f6020820190506107335f830184610711565b92915050565b5f82825260208201905092915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f61077d601483610739565b915061078882610749565b602082019050919050565b5f6020820190508181035f8301526107aa81610771565b9050919050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e2030005f82015250565b5f6107e5601f83610739565b91506107f0826107b1565b602082019050919050565b5f6020820190508181035f830152610812816107d9565b9050919050565b7f446f6e6174696f6e206e6f7420737461727465642079657400000000000000005f82015250565b5f61084d601883610739565b915061085882610819565b602082019050919050565b5f6020820190508181035f83015261087a81610841565b9050919050565b7f446f6e6174696f6e20706572696f642068617320656e646564000000000000005f82015250565b5f6108b5601983610739565b91506108c082610881565b602082019050919050565b5f6020820190508181035f8301526108e2816108a9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61092082610657565b915061092b83610657565b9250828201905080821115610943576109426108e9565b5b9291505056fea264697066735822122079461a9c4be76672b9801c11b68132cac098fdac0b2624615fa971f239769c5364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0xB4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 SLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x203 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x236 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19E DUP3 PUSH2 0x175 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE DUP2 PUSH2 0x194 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20D DUP3 PUSH2 0x1CD JUMP JUMPDEST SWAP2 POP PUSH2 0x218 DUP4 PUSH2 0x1CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x1D6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97F DUP1 PUSH2 0x243 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xCC6CB19A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B5 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x1E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x508 JUMP JUMPDEST PUSH0 SELFBALANCE GT PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x235 PUSH2 0x2D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x2D1 PUSH0 PUSH2 0x58F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34E SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8 SWAP1 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x508 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x505 DUP2 PUSH2 0x58F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x510 PUSH2 0x650 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x52E PUSH2 0x2D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58D JUMPI PUSH2 0x551 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x669 DUP2 PUSH2 0x657 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH0 DUP4 ADD DUP5 PUSH2 0x660 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6B5 DUP3 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP2 EQ PUSH2 0x6CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E0 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x688 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x708 DUP5 DUP3 DUP6 ADD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71A DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x733 PUSH0 DUP4 ADD DUP5 PUSH2 0x711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x77D PUSH1 0x14 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x788 DUP3 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7AA DUP2 PUSH2 0x771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH1 0x1F DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x812 DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E206E6F742073746172746564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x84D PUSH1 0x18 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x858 DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x87A DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20706572696F642068617320656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8B5 PUSH1 0x19 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP3 PUSH2 0x881 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8E2 DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x920 DUP3 PUSH2 0x657 JUMP JUMPDEST SWAP2 POP PUSH2 0x92B DUP4 PUSH2 0x657 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x942 PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x461A9C4BE76672B9801C11B68132CAC098FDAC0B2624615FA971 CALLCODE CODECOPY PUSH23 0x9C5364736F6C634300081E003300000000000000000000 ",
							"sourceMap": "116:1011:2:-:0;;;342:119;;;;;;;;;;364:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;399:15:2::1;387:9;:27;;;;447:6;435:9;;:18;;;;:::i;:::-;425:7;:28;;;;116:1011:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:180::-;724:77;721:1;714:88;821:4;818:1;811:15;845:4;842:1;835:15;862:191;902:3;921:20;939:1;921:20;:::i;:::-;916:25;;955:20;973:1;955:20;:::i;:::-;950:25;;998:1;995;991:9;984:16;;1019:3;1016:1;1013:10;1010:36;;;1026:18;;:::i;:::-;1010:36;862:191;;;;:::o;116:1011:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1288,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1616,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1423,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_258": {
									"entryPoint": 789,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donations_186": {
									"entryPoint": 768,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endTime_190": {
									"entryPoint": 477,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDonation_300": {
									"entryPoint": 634,
									"id": 300,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 729,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 704,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_188": {
									"entryPoint": 723,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1156,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_288": {
									"entryPoint": 483,
									"id": 288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6430:3",
										"nodeType": "YulBlock",
										"src": "0:6430:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "482:35:3",
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nativeSrc": "492:19:3",
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:3",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nativeSrc": "502:9:3",
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:3",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nativeSrc": "612:28:3",
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:3",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:3",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nativeSrc": "622:12:3",
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nativeSrc": "622:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nativeSrc": "735:28:3",
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:3",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:3",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nativeSrc": "745:12:3",
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nativeSrc": "745:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nativeSrc": "814:81:3",
													"nodeType": "YulBlock",
													"src": "814:81:3",
													"statements": [
														{
															"nativeSrc": "824:65:3",
															"nodeType": "YulAssignment",
															"src": "824:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:3",
																		"nodeType": "YulLiteral",
																		"src": "846:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:3"
																},
																"nativeSrc": "835:54:3",
																"nodeType": "YulFunctionCall",
																"src": "835:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:3",
														"nodeType": "YulTypedName",
														"src": "796:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:3",
														"nodeType": "YulTypedName",
														"src": "806:7:3",
														"type": ""
													}
												],
												"src": "769:126:3"
											},
											{
												"body": {
													"nativeSrc": "946:51:3",
													"nodeType": "YulBlock",
													"src": "946:51:3",
													"statements": [
														{
															"nativeSrc": "956:35:3",
															"nodeType": "YulAssignment",
															"src": "956:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:3"
																},
																"nativeSrc": "967:24:3",
																"nodeType": "YulFunctionCall",
																"src": "967:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:3",
														"nodeType": "YulTypedName",
														"src": "928:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:3",
														"nodeType": "YulTypedName",
														"src": "938:7:3",
														"type": ""
													}
												],
												"src": "901:96:3"
											},
											{
												"body": {
													"nativeSrc": "1046:79:3",
													"nodeType": "YulBlock",
													"src": "1046:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:3",
																"nodeType": "YulBlock",
																"src": "1103:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:3"
																			},
																			"nativeSrc": "1105:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:3"
																		},
																		"nativeSrc": "1105:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:3"
																				},
																				"nativeSrc": "1076:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:3"
																		},
																		"nativeSrc": "1066:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:3"
																},
																"nativeSrc": "1059:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:3"
															},
															"nativeSrc": "1056:63:3",
															"nodeType": "YulIf",
															"src": "1056:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:3",
														"nodeType": "YulTypedName",
														"src": "1039:5:3",
														"type": ""
													}
												],
												"src": "1003:122:3"
											},
											{
												"body": {
													"nativeSrc": "1183:87:3",
													"nodeType": "YulBlock",
													"src": "1183:87:3",
													"statements": [
														{
															"nativeSrc": "1193:29:3",
															"nodeType": "YulAssignment",
															"src": "1193:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:3"
																},
																"nativeSrc": "1202:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:3"
																},
																"nativeSrc": "1231:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:3"
															},
															"nativeSrc": "1231:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:3",
														"nodeType": "YulTypedName",
														"src": "1161:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:3",
														"nodeType": "YulTypedName",
														"src": "1169:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:3",
														"nodeType": "YulTypedName",
														"src": "1177:5:3",
														"type": ""
													}
												],
												"src": "1131:139:3"
											},
											{
												"body": {
													"nativeSrc": "1342:263:3",
													"nodeType": "YulBlock",
													"src": "1342:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:3",
																"nodeType": "YulBlock",
																"src": "1388:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:3"
																			},
																			"nativeSrc": "1390:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:3"
																		},
																		"nativeSrc": "1390:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:3"
																		},
																		"nativeSrc": "1359:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:3"
																},
																"nativeSrc": "1355:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:3"
															},
															"nativeSrc": "1352:119:3",
															"nodeType": "YulIf",
															"src": "1352:119:3"
														},
														{
															"nativeSrc": "1481:117:3",
															"nodeType": "YulBlock",
															"src": "1481:117:3",
															"statements": [
																{
																	"nativeSrc": "1496:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:3"
																				},
																				"nativeSrc": "1556:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:3"
																		},
																		"nativeSrc": "1535:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:3",
														"nodeType": "YulTypedName",
														"src": "1312:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:3",
														"nodeType": "YulTypedName",
														"src": "1323:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:3",
														"nodeType": "YulTypedName",
														"src": "1335:6:3",
														"type": ""
													}
												],
												"src": "1276:329:3"
											},
											{
												"body": {
													"nativeSrc": "1676:53:3",
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nativeSrc": "1698:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nativeSrc": "1686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nativeSrc": "1686:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:3",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:3",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nativeSrc": "1833:124:3",
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nativeSrc": "1843:26:3",
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nativeSrc": "1851:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nativeSrc": "1932:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nativeSrc": "1879:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nativeSrc": "1879:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:3",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:3",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:3",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nativeSrc": "2059:73:3",
													"nodeType": "YulBlock",
													"src": "2059:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:3"
																},
																"nativeSrc": "2069:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2069:19:3"
															},
															"nativeSrc": "2069:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:3"
														},
														{
															"nativeSrc": "2097:29:3",
															"nodeType": "YulAssignment",
															"src": "2097:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2116:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:3"
																},
																"nativeSrc": "2112:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2112:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2097:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1963:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2031:3:3",
														"nodeType": "YulTypedName",
														"src": "2031:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2036:6:3",
														"nodeType": "YulTypedName",
														"src": "2036:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2047:11:3",
														"nodeType": "YulTypedName",
														"src": "2047:11:3",
														"type": ""
													}
												],
												"src": "1963:169:3"
											},
											{
												"body": {
													"nativeSrc": "2244:64:3",
													"nodeType": "YulBlock",
													"src": "2244:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2266:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2262:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:3"
																		},
																		"nativeSrc": "2262:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:3"
																	},
																	{
																		"hexValue": "4e6f2066756e647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "2278:22:3",
																		"nodeType": "YulLiteral",
																		"src": "2278:22:3",
																		"type": "",
																		"value": "No funds to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:3"
																},
																"nativeSrc": "2255:46:3",
																"nodeType": "YulFunctionCall",
																"src": "2255:46:3"
															},
															"nativeSrc": "2255:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "2255:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
												"nativeSrc": "2138:170:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2236:6:3",
														"nodeType": "YulTypedName",
														"src": "2236:6:3",
														"type": ""
													}
												],
												"src": "2138:170:3"
											},
											{
												"body": {
													"nativeSrc": "2460:220:3",
													"nodeType": "YulBlock",
													"src": "2460:220:3",
													"statements": [
														{
															"nativeSrc": "2470:74:3",
															"nodeType": "YulAssignment",
															"src": "2470:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2541:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2477:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2477:58:3"
																},
																"nativeSrc": "2477:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2477:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2470:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2470:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2642:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2642:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																	"nativeSrc": "2553:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2553:88:3"
																},
																"nativeSrc": "2553:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2553:93:3"
															},
															"nativeSrc": "2553:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2553:93:3"
														},
														{
															"nativeSrc": "2655:19:3",
															"nodeType": "YulAssignment",
															"src": "2655:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2666:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2666:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2671:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2662:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:3"
																},
																"nativeSrc": "2662:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2662:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2655:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2655:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2314:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2448:3:3",
														"nodeType": "YulTypedName",
														"src": "2448:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2456:3:3",
														"nodeType": "YulTypedName",
														"src": "2456:3:3",
														"type": ""
													}
												],
												"src": "2314:366:3"
											},
											{
												"body": {
													"nativeSrc": "2857:248:3",
													"nodeType": "YulBlock",
													"src": "2857:248:3",
													"statements": [
														{
															"nativeSrc": "2867:26:3",
															"nodeType": "YulAssignment",
															"src": "2867:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2879:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2879:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2890:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2890:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2875:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2875:3:3"
																},
																"nativeSrc": "2875:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2875:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2867:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2867:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2914:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2925:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2925:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2910:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:3"
																		},
																		"nativeSrc": "2910:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2933:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2933:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2939:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2939:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2929:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2929:3:3"
																		},
																		"nativeSrc": "2929:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2929:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2903:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:3"
																},
																"nativeSrc": "2903:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2903:47:3"
															},
															"nativeSrc": "2903:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2903:47:3"
														},
														{
															"nativeSrc": "2959:139:3",
															"nodeType": "YulAssignment",
															"src": "2959:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3093:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3093:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2967:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "2967:124:3"
																},
																"nativeSrc": "2967:131:3",
																"nodeType": "YulFunctionCall",
																"src": "2967:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2959:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2959:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2686:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2837:9:3",
														"nodeType": "YulTypedName",
														"src": "2837:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2852:4:3",
														"nodeType": "YulTypedName",
														"src": "2852:4:3",
														"type": ""
													}
												],
												"src": "2686:419:3"
											},
											{
												"body": {
													"nativeSrc": "3217:75:3",
													"nodeType": "YulBlock",
													"src": "3217:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3239:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3239:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3247:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3247:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3235:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:3"
																		},
																		"nativeSrc": "3235:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "3251:33:3",
																		"nodeType": "YulLiteral",
																		"src": "3251:33:3",
																		"type": "",
																		"value": "Donation must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:3"
																},
																"nativeSrc": "3228:57:3",
																"nodeType": "YulFunctionCall",
																"src": "3228:57:3"
															},
															"nativeSrc": "3228:57:3",
															"nodeType": "YulExpressionStatement",
															"src": "3228:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490",
												"nativeSrc": "3111:181:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3209:6:3",
														"nodeType": "YulTypedName",
														"src": "3209:6:3",
														"type": ""
													}
												],
												"src": "3111:181:3"
											},
											{
												"body": {
													"nativeSrc": "3444:220:3",
													"nodeType": "YulBlock",
													"src": "3444:220:3",
													"statements": [
														{
															"nativeSrc": "3454:74:3",
															"nodeType": "YulAssignment",
															"src": "3454:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3520:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3520:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3525:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3461:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3461:58:3"
																},
																"nativeSrc": "3461:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3461:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3454:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3626:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3626:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490",
																	"nativeSrc": "3537:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3537:88:3"
																},
																"nativeSrc": "3537:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3537:93:3"
															},
															"nativeSrc": "3537:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3537:93:3"
														},
														{
															"nativeSrc": "3639:19:3",
															"nodeType": "YulAssignment",
															"src": "3639:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3650:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3650:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3655:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3646:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:3"
																},
																"nativeSrc": "3646:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3646:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3639:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3298:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3432:3:3",
														"nodeType": "YulTypedName",
														"src": "3432:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3440:3:3",
														"nodeType": "YulTypedName",
														"src": "3440:3:3",
														"type": ""
													}
												],
												"src": "3298:366:3"
											},
											{
												"body": {
													"nativeSrc": "3841:248:3",
													"nodeType": "YulBlock",
													"src": "3841:248:3",
													"statements": [
														{
															"nativeSrc": "3851:26:3",
															"nodeType": "YulAssignment",
															"src": "3851:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3863:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3863:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3874:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3874:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3859:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3859:3:3"
																},
																"nativeSrc": "3859:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3859:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3851:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3851:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3898:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3898:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3909:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3909:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3894:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3894:3:3"
																		},
																		"nativeSrc": "3894:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3894:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3917:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3917:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3923:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3923:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3913:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3913:3:3"
																		},
																		"nativeSrc": "3913:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3913:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3887:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3887:6:3"
																},
																"nativeSrc": "3887:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3887:47:3"
															},
															"nativeSrc": "3887:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3887:47:3"
														},
														{
															"nativeSrc": "3943:139:3",
															"nodeType": "YulAssignment",
															"src": "3943:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4077:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4077:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3951:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3951:124:3"
																},
																"nativeSrc": "3951:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3951:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3943:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3943:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3670:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3821:9:3",
														"nodeType": "YulTypedName",
														"src": "3821:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3836:4:3",
														"nodeType": "YulTypedName",
														"src": "3836:4:3",
														"type": ""
													}
												],
												"src": "3670:419:3"
											},
											{
												"body": {
													"nativeSrc": "4201:68:3",
													"nodeType": "YulBlock",
													"src": "4201:68:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4223:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4231:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4231:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4219:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:3"
																		},
																		"nativeSrc": "4219:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "4235:26:3",
																		"nodeType": "YulLiteral",
																		"src": "4235:26:3",
																		"type": "",
																		"value": "Donation not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4212:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:3"
																},
																"nativeSrc": "4212:50:3",
																"nodeType": "YulFunctionCall",
																"src": "4212:50:3"
															},
															"nativeSrc": "4212:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "4212:50:3"
														}
													]
												},
												"name": "store_literal_in_memory_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab",
												"nativeSrc": "4095:174:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4193:6:3",
														"nodeType": "YulTypedName",
														"src": "4193:6:3",
														"type": ""
													}
												],
												"src": "4095:174:3"
											},
											{
												"body": {
													"nativeSrc": "4421:220:3",
													"nodeType": "YulBlock",
													"src": "4421:220:3",
													"statements": [
														{
															"nativeSrc": "4431:74:3",
															"nodeType": "YulAssignment",
															"src": "4431:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4497:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4497:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4502:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4502:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4438:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4438:58:3"
																},
																"nativeSrc": "4438:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4438:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4431:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4603:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4603:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab",
																	"nativeSrc": "4514:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4514:88:3"
																},
																"nativeSrc": "4514:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4514:93:3"
															},
															"nativeSrc": "4514:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4514:93:3"
														},
														{
															"nativeSrc": "4616:19:3",
															"nodeType": "YulAssignment",
															"src": "4616:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4627:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4627:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4632:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4632:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4623:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:3"
																},
																"nativeSrc": "4623:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4623:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4616:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4275:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4409:3:3",
														"nodeType": "YulTypedName",
														"src": "4409:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4417:3:3",
														"nodeType": "YulTypedName",
														"src": "4417:3:3",
														"type": ""
													}
												],
												"src": "4275:366:3"
											},
											{
												"body": {
													"nativeSrc": "4818:248:3",
													"nodeType": "YulBlock",
													"src": "4818:248:3",
													"statements": [
														{
															"nativeSrc": "4828:26:3",
															"nodeType": "YulAssignment",
															"src": "4828:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4840:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4840:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4836:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4836:3:3"
																},
																"nativeSrc": "4836:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4836:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4828:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4828:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4886:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:3"
																		},
																		"nativeSrc": "4871:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4894:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4894:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4900:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4890:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4890:3:3"
																		},
																		"nativeSrc": "4890:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4890:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4864:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:3"
																},
																"nativeSrc": "4864:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4864:47:3"
															},
															"nativeSrc": "4864:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4864:47:3"
														},
														{
															"nativeSrc": "4920:139:3",
															"nodeType": "YulAssignment",
															"src": "4920:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5054:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5054:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4928:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4928:124:3"
																},
																"nativeSrc": "4928:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4928:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4920:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4920:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4647:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4798:9:3",
														"nodeType": "YulTypedName",
														"src": "4798:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4813:4:3",
														"nodeType": "YulTypedName",
														"src": "4813:4:3",
														"type": ""
													}
												],
												"src": "4647:419:3"
											},
											{
												"body": {
													"nativeSrc": "5178:69:3",
													"nodeType": "YulBlock",
													"src": "5178:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5200:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5208:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5208:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5196:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:3"
																		},
																		"nativeSrc": "5196:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5196:14:3"
																	},
																	{
																		"hexValue": "446f6e6174696f6e20706572696f642068617320656e646564",
																		"kind": "string",
																		"nativeSrc": "5212:27:3",
																		"nodeType": "YulLiteral",
																		"src": "5212:27:3",
																		"type": "",
																		"value": "Donation period has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5189:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:3"
																},
																"nativeSrc": "5189:51:3",
																"nodeType": "YulFunctionCall",
																"src": "5189:51:3"
															},
															"nativeSrc": "5189:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "5189:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
												"nativeSrc": "5072:175:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5170:6:3",
														"nodeType": "YulTypedName",
														"src": "5170:6:3",
														"type": ""
													}
												],
												"src": "5072:175:3"
											},
											{
												"body": {
													"nativeSrc": "5399:220:3",
													"nodeType": "YulBlock",
													"src": "5399:220:3",
													"statements": [
														{
															"nativeSrc": "5409:74:3",
															"nodeType": "YulAssignment",
															"src": "5409:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5475:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5475:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5480:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5416:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5416:58:3"
																},
																"nativeSrc": "5416:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5416:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5409:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5581:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																	"nativeSrc": "5492:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5492:88:3"
																},
																"nativeSrc": "5492:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5492:93:3"
															},
															"nativeSrc": "5492:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5492:93:3"
														},
														{
															"nativeSrc": "5594:19:3",
															"nodeType": "YulAssignment",
															"src": "5594:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5605:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5610:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5610:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5601:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5601:3:3"
																},
																"nativeSrc": "5601:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5601:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5594:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5253:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5387:3:3",
														"nodeType": "YulTypedName",
														"src": "5387:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5395:3:3",
														"nodeType": "YulTypedName",
														"src": "5395:3:3",
														"type": ""
													}
												],
												"src": "5253:366:3"
											},
											{
												"body": {
													"nativeSrc": "5796:248:3",
													"nodeType": "YulBlock",
													"src": "5796:248:3",
													"statements": [
														{
															"nativeSrc": "5806:26:3",
															"nodeType": "YulAssignment",
															"src": "5806:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5818:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5818:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5829:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5829:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5814:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:3"
																},
																"nativeSrc": "5814:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5814:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5806:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5806:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5853:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5853:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5864:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5864:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5849:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:3"
																		},
																		"nativeSrc": "5849:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5872:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5872:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5878:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:3"
																		},
																		"nativeSrc": "5868:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5842:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5842:6:3"
																},
																"nativeSrc": "5842:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5842:47:3"
															},
															"nativeSrc": "5842:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5842:47:3"
														},
														{
															"nativeSrc": "5898:139:3",
															"nodeType": "YulAssignment",
															"src": "5898:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6032:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6032:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5906:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5906:124:3"
																},
																"nativeSrc": "5906:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5906:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5898:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5898:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5625:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5776:9:3",
														"nodeType": "YulTypedName",
														"src": "5776:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5791:4:3",
														"nodeType": "YulTypedName",
														"src": "5791:4:3",
														"type": ""
													}
												],
												"src": "5625:419:3"
											},
											{
												"body": {
													"nativeSrc": "6078:152:3",
													"nodeType": "YulBlock",
													"src": "6078:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6095:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6098:77:3",
																		"nodeType": "YulLiteral",
																		"src": "6098:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6088:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6088:6:3"
																},
																"nativeSrc": "6088:88:3",
																"nodeType": "YulFunctionCall",
																"src": "6088:88:3"
															},
															"nativeSrc": "6088:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "6088:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6192:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6192:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6195:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6185:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:3"
																},
																"nativeSrc": "6185:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6185:15:3"
															},
															"nativeSrc": "6185:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6185:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6216:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6216:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6219:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6209:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:3"
																},
																"nativeSrc": "6209:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6209:15:3"
															},
															"nativeSrc": "6209:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6209:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6050:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "6050:180:3"
											},
											{
												"body": {
													"nativeSrc": "6280:147:3",
													"nodeType": "YulBlock",
													"src": "6280:147:3",
													"statements": [
														{
															"nativeSrc": "6290:25:3",
															"nodeType": "YulAssignment",
															"src": "6290:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6313:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6313:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6295:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6295:17:3"
																},
																"nativeSrc": "6295:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6295:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6290:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6290:1:3"
																}
															]
														},
														{
															"nativeSrc": "6324:25:3",
															"nodeType": "YulAssignment",
															"src": "6324:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6347:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6347:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6329:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6329:17:3"
																},
																"nativeSrc": "6329:20:3",
																"nodeType": "YulFunctionCall",
																"src": "6329:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6324:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "6324:1:3"
																}
															]
														},
														{
															"nativeSrc": "6358:16:3",
															"nodeType": "YulAssignment",
															"src": "6358:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6369:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6369:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6372:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6372:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6365:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6365:3:3"
																},
																"nativeSrc": "6365:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6365:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6358:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6398:22:3",
																"nodeType": "YulBlock",
																"src": "6398:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6400:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6400:16:3"
																			},
																			"nativeSrc": "6400:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6400:18:3"
																		},
																		"nativeSrc": "6400:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6400:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6390:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6390:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6393:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6393:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6387:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6387:2:3"
																},
																"nativeSrc": "6387:10:3",
																"nodeType": "YulFunctionCall",
																"src": "6387:10:3"
															},
															"nativeSrc": "6384:36:3",
															"nodeType": "YulIf",
															"src": "6384:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6236:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6267:1:3",
														"nodeType": "YulTypedName",
														"src": "6267:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6270:1:3",
														"nodeType": "YulTypedName",
														"src": "6270:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6276:3:3",
														"nodeType": "YulTypedName",
														"src": "6276:3:3",
														"type": ""
													}
												],
												"src": "6236:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"No funds to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44(memPtr) {\n\n        mstore(add(memPtr, 0), \"Donation period has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610085575f3560e01c806378e979251161005857806378e979251461011b5780638da5cb5b14610145578063cc6cb19a1461016f578063ed88c68e146101ab578063f2fde38b146101b557610085565b80633197cbb6146100895780633ccfd60b146100b3578063410a1d32146100c9578063715018a614610105575b5f5ffd5b348015610094575f5ffd5b5061009d6101dd565b6040516100aa919061066f565b60405180910390f35b3480156100be575f5ffd5b506100c76101e3565b005b3480156100d4575f5ffd5b506100ef60048036038101906100ea91906106e6565b61027a565b6040516100fc919061066f565b60405180910390f35b348015610110575f5ffd5b506101196102c0565b005b348015610126575f5ffd5b5061012f6102d3565b60405161013c919061066f565b60405180910390f35b348015610150575f5ffd5b506101596102d9565b6040516101669190610720565b60405180910390f35b34801561017a575f5ffd5b50610195600480360381019061019091906106e6565b610300565b6040516101a2919061066f565b60405180910390f35b6101b3610315565b005b3480156101c0575f5ffd5b506101db60048036038101906101d691906106e6565b610484565b005b60035481565b6101eb610508565b5f471161022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610793565b60405180910390fd5b6102356102d9565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610277573d5f5f3e3d5ffd5b50565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102c8610508565b6102d15f61058f565b565b60025481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f915090505481565b5f3411610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e906107fb565b60405180910390fd5b60025442101561039c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039390610863565b60405180910390fd5b6003544211156103e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d8906108cb565b60405180910390fd5b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461042d9190610916565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e3460405161047a919061066f565b60405180910390a2565b61048c610508565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104fc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104f39190610720565b60405180910390fd5b6105058161058f565b50565b610510610650565b73ffffffffffffffffffffffffffffffffffffffff1661052e6102d9565b73ffffffffffffffffffffffffffffffffffffffff161461058d57610551610650565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105849190610720565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b61066981610657565b82525050565b5f6020820190506106825f830184610660565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106b58261068c565b9050919050565b6106c5816106ab565b81146106cf575f5ffd5b50565b5f813590506106e0816106bc565b92915050565b5f602082840312156106fb576106fa610688565b5b5f610708848285016106d2565b91505092915050565b61071a816106ab565b82525050565b5f6020820190506107335f830184610711565b92915050565b5f82825260208201905092915050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f61077d601483610739565b915061078882610749565b602082019050919050565b5f6020820190508181035f8301526107aa81610771565b9050919050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e2030005f82015250565b5f6107e5601f83610739565b91506107f0826107b1565b602082019050919050565b5f6020820190508181035f830152610812816107d9565b9050919050565b7f446f6e6174696f6e206e6f7420737461727465642079657400000000000000005f82015250565b5f61084d601883610739565b915061085882610819565b602082019050919050565b5f6020820190508181035f83015261087a81610841565b9050919050565b7f446f6e6174696f6e20706572696f642068617320656e646564000000000000005f82015250565b5f6108b5601983610739565b91506108c082610881565b602082019050919050565b5f6020820190508181035f8301526108e2816108a9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61092082610657565b915061092b83610657565b9250828201905080821115610943576109426108e9565b5b9291505056fea264697066735822122079461a9c4be76672b9801c11b68132cac098fdac0b2624615fa971f239769c5364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xCC6CB19A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B5 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x1E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x508 JUMP JUMPDEST PUSH0 SELFBALANCE GT PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x235 PUSH2 0x2D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x277 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x508 JUMP JUMPDEST PUSH2 0x2D1 PUSH0 PUSH2 0x58F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34E SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x393 SWAP1 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP GT ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8 SWAP1 PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x508 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x505 DUP2 PUSH2 0x58F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x510 PUSH2 0x650 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x52E PUSH2 0x2D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x58D JUMPI PUSH2 0x551 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x669 DUP2 PUSH2 0x657 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x682 PUSH0 DUP4 ADD DUP5 PUSH2 0x660 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6B5 DUP3 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C5 DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP2 EQ PUSH2 0x6CF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E0 DUP2 PUSH2 0x6BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x688 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x708 DUP5 DUP3 DUP6 ADD PUSH2 0x6D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71A DUP2 PUSH2 0x6AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x733 PUSH0 DUP4 ADD DUP5 PUSH2 0x711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2066756E647320746F207769746864726177000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x77D PUSH1 0x14 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x788 DUP3 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7AA DUP2 PUSH2 0x771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E206D7573742062652067726561746572207468616E203000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH1 0x1F DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x812 DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E206E6F742073746172746564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x84D PUSH1 0x18 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x858 DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x87A DUP2 PUSH2 0x841 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446F6E6174696F6E20706572696F642068617320656E64656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8B5 PUSH1 0x19 DUP4 PUSH2 0x739 JUMP JUMPDEST SWAP2 POP PUSH2 0x8C0 DUP3 PUSH2 0x881 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8E2 DUP2 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x920 DUP3 PUSH2 0x657 JUMP JUMPDEST SWAP2 POP PUSH2 0x92B DUP4 PUSH2 0x657 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x943 JUMPI PUSH2 0x942 PUSH2 0x8E9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x461A9C4BE76672B9801C11B68132CAC098FDAC0B2624615FA971 CALLCODE CODECOPY PUSH23 0x9C5364736F6C634300081E003300000000000000000000 ",
							"sourceMap": "116:1011:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;835:173;;;;;;;;;;;;;:::i;:::-;;1016:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;218:24:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;165:44:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:358;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;249:22:2;;;;:::o;835:173::-;1531:13:0;:11;:13::i;:::-;915:1:2::1;891:21;:25;883:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;960:7;:5;:7::i;:::-;952:25;;:48;978:21;952:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:173::o:0;1016:108::-;1073:7;1100:9;:16;1110:5;1100:16;;;;;;;;;;;;;;;;1093:23;;1016:108;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;218:24:2:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;165:44:2:-;;;;;;;;;;;;;;;;;:::o;469:358::-;534:1;522:9;:13;514:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;610:9;;590:15;:29;;582:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;686:7;;667:15;:26;;659:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;761:9;736;:21;746:10;736:21;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;797:10;788:31;;;809:9;788:31;;;;;;:::i;:::-;;;;;;;;469:358::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:170::-;2278:22;2274:1;2266:6;2262:14;2255:46;2138:170;:::o;2314:366::-;2456:3;2477:67;2541:2;2536:3;2477:67;:::i;:::-;2470:74;;2553:93;2642:3;2553:93;:::i;:::-;2671:2;2666:3;2662:12;2655:19;;2314:366;;;:::o;2686:419::-;2852:4;2890:2;2879:9;2875:18;2867:26;;2939:9;2933:4;2929:20;2925:1;2914:9;2910:17;2903:47;2967:131;3093:4;2967:131;:::i;:::-;2959:139;;2686:419;;;:::o;3111:181::-;3251:33;3247:1;3239:6;3235:14;3228:57;3111:181;:::o;3298:366::-;3440:3;3461:67;3525:2;3520:3;3461:67;:::i;:::-;3454:74;;3537:93;3626:3;3537:93;:::i;:::-;3655:2;3650:3;3646:12;3639:19;;3298:366;;;:::o;3670:419::-;3836:4;3874:2;3863:9;3859:18;3851:26;;3923:9;3917:4;3913:20;3909:1;3898:9;3894:17;3887:47;3951:131;4077:4;3951:131;:::i;:::-;3943:139;;3670:419;;;:::o;4095:174::-;4235:26;4231:1;4223:6;4219:14;4212:50;4095:174;:::o;4275:366::-;4417:3;4438:67;4502:2;4497:3;4438:67;:::i;:::-;4431:74;;4514:93;4603:3;4514:93;:::i;:::-;4632:2;4627:3;4623:12;4616:19;;4275:366;;;:::o;4647:419::-;4813:4;4851:2;4840:9;4836:18;4828:26;;4900:9;4894:4;4890:20;4886:1;4875:9;4871:17;4864:47;4928:131;5054:4;4928:131;:::i;:::-;4920:139;;4647:419;;;:::o;5072:175::-;5212:27;5208:1;5200:6;5196:14;5189:51;5072:175;:::o;5253:366::-;5395:3;5416:67;5480:2;5475:3;5416:67;:::i;:::-;5409:74;;5492:93;5581:3;5492:93;:::i;:::-;5610:2;5605:3;5601:12;5594:19;;5253:366;;;:::o;5625:419::-;5791:4;5829:2;5818:9;5814:18;5806:26;;5878:9;5872:4;5868:20;5864:1;5853:9;5849:17;5842:47;5906:131;6032:4;5906:131;:::i;:::-;5898:139;;5625:419;;;:::o;6050:180::-;6098:77;6095:1;6088:88;6195:4;6192:1;6185:15;6219:4;6216:1;6209:15;6236:191;6276:3;6295:20;6313:1;6295:20;:::i;:::-;6290:25;;6329:20;6347:1;6329:20;:::i;:::-;6324:25;;6372:1;6369;6365:9;6358:16;;6393:3;6390:1;6387:10;6384:36;;;6400:18;;:::i;:::-;6384:36;6236:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "486200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate()": "infinite",
								"donations(address)": "2846",
								"endTime()": "2426",
								"getDonation(address)": "2874",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"startTime()": "2425",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 461,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 461,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 461,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 461,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 342,
									"end": 461,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 364,
									"end": 374,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 399,
									"end": 414,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 2
								},
								{
									"begin": 387,
									"end": 396,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 387,
									"end": 414,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 387,
									"end": 414,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 387,
									"end": 414,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 387,
									"end": 414,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 447,
									"end": 453,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "93A80"
								},
								{
									"begin": 435,
									"end": 444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 435,
									"end": 444,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 435,
									"end": 453,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 435,
									"end": 453,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 425,
									"end": 432,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 425,
									"end": 453,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 425,
									"end": 453,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 425,
									"end": 453,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 425,
									"end": 453,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 593,
									"end": 670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 637,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 648,
									"end": 664,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 676,
									"end": 856,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 676,
									"end": 856,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 724,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 721,
									"end": 722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 802,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 821,
									"end": 825,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 811,
									"end": 826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 845,
									"end": 849,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 835,
									"end": 850,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 902,
									"end": 905,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 939,
									"end": 940,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 921,
									"end": 941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 921,
									"end": 941,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 921,
									"end": 941,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 916,
									"end": 941,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 916,
									"end": 941,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 973,
									"end": 974,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 955,
									"end": 975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 955,
									"end": 975,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 955,
									"end": 975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 950,
									"end": 975,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 950,
									"end": 975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 998,
									"end": 999,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1000,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 984,
									"end": 1000,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 984,
									"end": 1000,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1019,
									"end": 1022,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1013,
									"end": 1023,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1026,
									"end": 1044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1010,
									"end": 1046,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 862,
									"end": 1053,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 1127,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079461a9c4be76672b9801c11b68132cac098fdac0b2624615fa971f239769c5364736f6c634300081e0033",
									".code": [
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "78E97925"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "78E97925"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "CC6CB19A"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "ED88C68E"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "3197CBB6"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 249,
											"end": 271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 835,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1016,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1016,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1016,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 218,
											"end": 242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 218,
											"end": 242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 165,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 165,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 165,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 469,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 469,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 469,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 249,
											"end": 271,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 271,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 249,
											"end": 271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 835,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 912,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 891,
											"end": 916,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 883,
											"end": 941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 883,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 960,
											"end": 967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 960,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 960,
											"end": 967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 960,
											"end": 967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 960,
											"end": 967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 952,
											"end": 977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 978,
											"end": 999,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 952,
											"end": 1000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 835,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1116,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 218,
											"end": 242,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 218,
											"end": 242,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 218,
											"end": 242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 209,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 165,
											"end": 209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 469,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 531,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 522,
											"end": 535,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 514,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 514,
											"end": 571,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 514,
											"end": 571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 610,
											"end": 619,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 590,
											"end": 605,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 619,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 590,
											"end": 619,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 582,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 582,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 582,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 693,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 682,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 667,
											"end": 693,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 667,
											"end": 693,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 659,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 659,
											"end": 723,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 659,
											"end": 723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 761,
											"end": 770,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 756,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 757,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 736,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 736,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 736,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 736,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 807,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "5D8BC849764969EB1BCC6D0A2F55999D0167C1CCEC240A4F39CF664CA9C4148E"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 788,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 788,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 788,
											"end": 819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 819,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 819,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 469,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2138,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F2066756E647320746F207769746864726177000000000000000000000000"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2680,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2314,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 2459,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2541,
											"end": 2543,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2477,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2477,
											"end": 2544,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2477,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2553,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2553,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2680,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3105,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2686,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 2893,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2949,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2950,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2967,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3098,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2967,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 3098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3105,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3292,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3111,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3284,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E206D7573742062652067726561746572207468616E203000"
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3664,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3298,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3525,
											"end": 3527,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3520,
											"end": 3523,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3461,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3528,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3461,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3537,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3537,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3537,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3537,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3537,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 4089,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3670,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3876,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3863,
											"end": 3872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3933,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3887,
											"end": 3934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3951,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 4082,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3951,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 4082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3943,
											"end": 4082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 4089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 4089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 4089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4269,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4095,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E206E6F742073746172746564207965740000000000000000"
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4233,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4641,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4275,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4502,
											"end": 4504,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4497,
											"end": 4500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4438,
											"end": 4505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4438,
											"end": 4505,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4438,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4431,
											"end": 4505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4603,
											"end": 4606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4514,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4514,
											"end": 4607,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4514,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4634,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4627,
											"end": 4630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 5066,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4647,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4871,
											"end": 4888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4911,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4928,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 5059,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4928,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 5059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 5059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 5066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 5066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 5066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5247,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5072,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5212,
											"end": 5239,
											"name": "PUSH",
											"source": 3,
											"value": "446F6E6174696F6E20706572696F642068617320656E64656400000000000000"
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5196,
											"end": 5210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5619,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5253,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5475,
											"end": 5478,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5416,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5483,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 5416,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5409,
											"end": 5483,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5409,
											"end": 5483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5581,
											"end": 5584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5492,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5492,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5601,
											"end": 5613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 6044,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5625,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5791,
											"end": 5795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5878,
											"end": 5887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5872,
											"end": 5876,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 5865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5862,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5842,
											"end": 5889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6032,
											"end": 6036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 5906,
											"end": 6037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5906,
											"end": 6037,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5906,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 6037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5898,
											"end": 6037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 6044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 6044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 6044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 6044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6230,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6050,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6098,
											"end": 6175,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6176,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6199,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6192,
											"end": 6193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6185,
											"end": 6200,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6224,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6276,
											"end": 6279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6295,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6295,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6315,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6347,
											"end": 6348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6329,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6329,
											"end": 6349,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6329,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6349,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6324,
											"end": 6349,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6358,
											"end": 6374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6358,
											"end": 6374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6393,
											"end": 6396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6387,
											"end": 6397,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6420,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6384,
											"end": 6420,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6400,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6420,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6384,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"task2/BeggingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"donations(address)": "cc6cb19a",
							"endTime()": "3197cbb6",
							"getDonation(address)": "410a1d32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startTime()": "78e97925",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task2/BeggingContract.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"task2/BeggingContract.sol\":{\"keccak256\":\"0x3eea6d8b691c8df96dd494e1e78d4f2ff2e8858f0dfbf940917f01e5031f5d87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0888b7b8f278030ed8530203fb37bf67d39bf7c4b1f84d41079db4185f334a\",\"dweb:/ipfs/QmbCwtuZ5NhbreoEu188Wyi2B6XEoxHoMyaDf2jY1a2Y51\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "donations",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 188,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "startTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 190,
								"contract": "task2/BeggingContract.sol:BeggingContract",
								"label": "endTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"task2/BeggingContract.sol": {
				"ast": {
					"absolutePath": "task2/BeggingContract.sol",
					"exportedSymbols": {
						"BeggingContract": [
							301
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 148,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"144:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "144:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "144:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "125:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cc6cb19a",
									"id": 186,
									"mutability": "mutable",
									"name": "donations",
									"nameLocation": "200:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "165:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "173:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "165:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "184:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 188,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "233:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "218:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3197cbb6",
									"id": 190,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "264:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "249:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5d8bc849764969eb1bcc6d0a2f55999d0167c1ccec240a4f39cf664ca9c4148e",
									"id": 196,
									"name": "Donation",
									"nameLocation": "286:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "311:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "295:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "318:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:39:2"
									},
									"src": "280:54:2"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "376:85:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 203,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "387:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 204,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "405:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "399:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "387:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "387:27:2"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "425:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 209,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "435:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "37",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "447:6:2",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "7"
														},
														"src": "435:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "425:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "425:28:2"
											}
										]
									},
									"id": 215,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 199,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "364:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "368:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "364:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 201,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 198,
												"name": "Ownable",
												"nameLocations": [
													"356:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "356:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "356:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:0:2"
									},
									"scope": 301,
									"src": "342:119:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "503:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 219,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "522:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "526:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "522:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "534:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "522:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e206d7573742062652067726561746572207468616e2030",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "537:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490",
																"typeString": "literal_string \"Donation must be greater than 0\""
															},
															"value": "Donation must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_143e2d87efbae6ee1d546b1f6ea99fcd1d0c6ea58eec546952799b9716a5d490",
																"typeString": "literal_string \"Donation must be greater than 0\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "514:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 227,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "590:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "596:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "590:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 229,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "610:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "590:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e206e6f74207374617274656420796574",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "621:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab",
																"typeString": "literal_string \"Donation not started yet\""
															},
															"value": "Donation not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d5ce8a341b79cc63fc5ec99580e3493dfa268e379c8be68ea1648173e50c4ab",
																"typeString": "literal_string \"Donation not started yet\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "582:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "582:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "582:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 235,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "667:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "673:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "667:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 237,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "686:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "667:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6e6174696f6e20706572696f642068617320656e646564",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "695:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																"typeString": "literal_string \"Donation period has ended\""
															},
															"value": "Donation period has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2be5b7fb0e3e1a0130d5b1c34713c602898e09196519fcad88132a290b261e44",
																"typeString": "literal_string \"Donation period has ended\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "659:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "659:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "659:64:2"
											},
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 242,
															"name": "donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "736:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 245,
														"indexExpression": {
															"expression": {
																"id": 243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "746:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "750:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "746:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "736:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 246,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "761:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "765:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "761:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "736:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "736:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "797:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "801:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "797:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "809:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "813:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "809:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "Donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "788:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "783:36:2"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "478:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:2:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:2"
									},
									"scope": 301,
									"src": "469:358:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "872:136:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 266,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "899:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BeggingContract_$301",
																				"typeString": "contract BeggingContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BeggingContract_$301",
																				"typeString": "contract BeggingContract"
																			}
																		],
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "891:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 264,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "891:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "891:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "905:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "891:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "915:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "891:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2066756e647320746f207769746864726177",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "918:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															},
															"value": "No funds to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9",
																"typeString": "literal_string \"No funds to withdraw\""
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "883:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "883:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 282,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "986:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BeggingContract_$301",
																			"typeString": "contract BeggingContract"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BeggingContract_$301",
																			"typeString": "contract BeggingContract"
																		}
																	],
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "978:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 280,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "978:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "978:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "992:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "978:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 276,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "960:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "960:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "952:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "952:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "969:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "952:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "952:48:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 260,
												"name": "onlyOwner",
												"nameLocations": [
													"862:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "862:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "862:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "844:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:0:2"
									},
									"scope": 301,
									"src": "835:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "1082:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 295,
														"name": "donations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1100:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 297,
													"indexExpression": {
														"id": 296,
														"name": "donor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1110:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1100:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 298,
												"nodeType": "Return",
												"src": "1093:23:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "1025:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "donor",
												"nameLocation": "1045:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1037:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:15:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1073:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:9:2"
									},
									"scope": 301,
									"src": "1016:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 302,
							"src": "116:1011:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								196
							]
						}
					],
					"src": "33:1094:2"
				},
				"id": 2
			}
		}
	}
}